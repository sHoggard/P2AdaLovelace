
dueSrv_6_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005d08  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085d08  00085d08  0000dd08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009ec  20070000  00085d10  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000f0  200709ec  000866fc  000109ec  2**2
                  ALLOC
  4 .stack        00002004  20070adc  000867ec  000109ec  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010a15  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000b0ca  00000000  00000000  00010a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002088  00000000  00000000  0001bb3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004403  00000000  00000000  0001dbc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009f0  00000000  00000000  00021fc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008b0  00000000  00000000  000229b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001897c  00000000  00000000  00023265  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00010366  00000000  00000000  0003bbe1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00061570  00000000  00000000  0004bf47  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001c10  00000000  00000000  000ad4b8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072ae0 	.word	0x20072ae0
   80004:	00080df1 	.word	0x00080df1
   80008:	00080ded 	.word	0x00080ded
   8000c:	00080ded 	.word	0x00080ded
   80010:	00080ded 	.word	0x00080ded
   80014:	00080ded 	.word	0x00080ded
   80018:	00080ded 	.word	0x00080ded
	...
   8002c:	00080ded 	.word	0x00080ded
   80030:	00080ded 	.word	0x00080ded
   80034:	00000000 	.word	0x00000000
   80038:	00080ded 	.word	0x00080ded
   8003c:	00080ded 	.word	0x00080ded
   80040:	00080ded 	.word	0x00080ded
   80044:	00080ded 	.word	0x00080ded
   80048:	00080ded 	.word	0x00080ded
   8004c:	00080ded 	.word	0x00080ded
   80050:	00080ded 	.word	0x00080ded
   80054:	00080ded 	.word	0x00080ded
   80058:	00080ded 	.word	0x00080ded
   8005c:	00080ded 	.word	0x00080ded
   80060:	00080ded 	.word	0x00080ded
   80064:	00080ded 	.word	0x00080ded
   80068:	00000000 	.word	0x00000000
   8006c:	00080c5d 	.word	0x00080c5d
   80070:	00080c71 	.word	0x00080c71
   80074:	00080c85 	.word	0x00080c85
   80078:	00080c99 	.word	0x00080c99
	...
   80084:	00080ded 	.word	0x00080ded
   80088:	00080ded 	.word	0x00080ded
   8008c:	00080ded 	.word	0x00080ded
   80090:	00080ded 	.word	0x00080ded
   80094:	00080ded 	.word	0x00080ded
   80098:	00080ded 	.word	0x00080ded
   8009c:	00080ded 	.word	0x00080ded
   800a0:	00080ded 	.word	0x00080ded
   800a4:	00000000 	.word	0x00000000
   800a8:	00080ded 	.word	0x00080ded
   800ac:	00080ded 	.word	0x00080ded
   800b0:	00080ded 	.word	0x00080ded
   800b4:	00080ded 	.word	0x00080ded
   800b8:	00080ded 	.word	0x00080ded
   800bc:	00080ded 	.word	0x00080ded
   800c0:	00080ded 	.word	0x00080ded
   800c4:	00080ded 	.word	0x00080ded
   800c8:	00080ded 	.word	0x00080ded
   800cc:	00080ded 	.word	0x00080ded
   800d0:	00080ded 	.word	0x00080ded
   800d4:	00080ded 	.word	0x00080ded
   800d8:	00080ded 	.word	0x00080ded
   800dc:	00080ded 	.word	0x00080ded
   800e0:	00080ded 	.word	0x00080ded
   800e4:	00080ded 	.word	0x00080ded
   800e8:	00080ded 	.word	0x00080ded
   800ec:	00080ded 	.word	0x00080ded
   800f0:	00080ded 	.word	0x00080ded

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709ec 	.word	0x200709ec
   80110:	00000000 	.word	0x00000000
   80114:	00085d10 	.word	0x00085d10

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00085d10 	.word	0x00085d10
   8013c:	200709f0 	.word	0x200709f0
   80140:	00085d10 	.word	0x00085d10
   80144:	00000000 	.word	0x00000000

00080148 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   80148:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   8014a:	2401      	movs	r4, #1
   8014c:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   8014e:	2400      	movs	r4, #0
   80150:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   80152:	f240 2502 	movw	r5, #514	; 0x202
   80156:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   8015a:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   8015e:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80162:	6845      	ldr	r5, [r0, #4]
   80164:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   80166:	0052      	lsls	r2, r2, #1
   80168:	fbb1 f1f2 	udiv	r1, r1, r2
   8016c:	1e4d      	subs	r5, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   8016e:	022d      	lsls	r5, r5, #8
   80170:	b2ad      	uxth	r5, r5
   80172:	432b      	orrs	r3, r5
   80174:	6043      	str	r3, [r0, #4]
	return 0;
}
   80176:	4620      	mov	r0, r4
   80178:	bc30      	pop	{r4, r5}
   8017a:	4770      	bx	lr

0008017c <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   8017c:	6843      	ldr	r3, [r0, #4]
   8017e:	f023 0310 	bic.w	r3, r3, #16
   80182:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   80184:	6843      	ldr	r3, [r0, #4]
   80186:	4319      	orrs	r1, r3
   80188:	6041      	str	r1, [r0, #4]
   8018a:	4770      	bx	lr

0008018c <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   8018c:	6843      	ldr	r3, [r0, #4]
   8018e:	4319      	orrs	r1, r3
   80190:	01d2      	lsls	r2, r2, #7
   80192:	b2d3      	uxtb	r3, r2
   80194:	4319      	orrs	r1, r3
   80196:	6041      	str	r1, [r0, #4]
   80198:	4770      	bx	lr
   8019a:	bf00      	nop

0008019c <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   8019c:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   8019e:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   801a0:	4322      	orrs	r2, r4
   801a2:	0609      	lsls	r1, r1, #24
   801a4:	f001 6470 	and.w	r4, r1, #251658240	; 0xf000000
   801a8:	4322      	orrs	r2, r4
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801aa:	071b      	lsls	r3, r3, #28
   801ac:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   801b0:	431a      	orrs	r2, r3
   801b2:	6042      	str	r2, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   801b4:	f85d 4b04 	ldr.w	r4, [sp], #4
   801b8:	4770      	bx	lr
   801ba:	bf00      	nop

000801bc <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   801bc:	2302      	movs	r3, #2
   801be:	6003      	str	r3, [r0, #0]
   801c0:	4770      	bx	lr
   801c2:	bf00      	nop

000801c4 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   801c4:	2301      	movs	r3, #1
   801c6:	fa03 f101 	lsl.w	r1, r3, r1
   801ca:	6101      	str	r1, [r0, #16]
   801cc:	4770      	bx	lr
   801ce:	bf00      	nop

000801d0 <adc_enable_all_channel>:
 * \param p_adc Pointer to an ADC instance.
 */
void adc_enable_all_channel(Adc *p_adc)
{
#if SAM3S || SAM4S || SAM3N || SAM3XA
	p_adc->ADC_CHER = 0xFFFF;
   801d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
   801d4:	6103      	str	r3, [r0, #16]
   801d6:	4770      	bx	lr

000801d8 <pin_mapper>:
					PIO_PA22_IDX,PIO_PA6_IDX,PIO_PA4_IDX,PIO_PA3_IDX,PIO_PA2_IDX,PIO_PB17_IDX,
					PIO_PB18_IDX,PIO_PB19_IDX,PIO_PB20_IDX};
					
uint8_t pin_mapper(uint8_t pin){
	return pin_table[pin];
}
   801d8:	4b01      	ldr	r3, [pc, #4]	; (801e0 <pin_mapper+0x8>)
   801da:	5c18      	ldrb	r0, [r3, r0]
   801dc:	4770      	bx	lr
   801de:	bf00      	nop
   801e0:	2007012c 	.word	0x2007012c

000801e4 <map_value>:
/*
* Mapping values from one range to another, be warned this function will 
* probably run dead slow on the arduino due. Its not intended to be used
* where speed is essential.  
*/
uint32_t map_value(uint32_t x, uint32_t in_min, uint32_t in_max, uint32_t out_min, uint32_t out_max){
   801e4:	b410      	push	{r4}
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
   801e6:	1a40      	subs	r0, r0, r1
   801e8:	9c01      	ldr	r4, [sp, #4]
   801ea:	1ae4      	subs	r4, r4, r3
   801ec:	fb04 f400 	mul.w	r4, r4, r0
   801f0:	1a52      	subs	r2, r2, r1
   801f2:	fbb4 f0f2 	udiv	r0, r4, r2
   801f6:	4418      	add	r0, r3
   801f8:	f85d 4b04 	ldr.w	r4, [sp], #4
   801fc:	4770      	bx	lr
   801fe:	bf00      	nop

00080200 <pwm_set_duty>:
		pwm_set_duty(0);
	}
}


void pwm_set_duty(uint32_t duty_cycle){
   80200:	b508      	push	{r3, lr}
   80202:	4602      	mov	r2, r0
	/*Set duty cycle*/
	pwm_channel_update_duty(PWM,&pwm_channel_instance,duty_cycle);
   80204:	4802      	ldr	r0, [pc, #8]	; (80210 <pwm_set_duty+0x10>)
   80206:	4903      	ldr	r1, [pc, #12]	; (80214 <pwm_set_duty+0x14>)
   80208:	4b03      	ldr	r3, [pc, #12]	; (80218 <pwm_set_duty+0x18>)
   8020a:	4798      	blx	r3
   8020c:	bd08      	pop	{r3, pc}
   8020e:	bf00      	nop
   80210:	40094000 	.word	0x40094000
   80214:	20070a08 	.word	0x20070a08
   80218:	00080831 	.word	0x00080831

0008021c <pwm_setup>:
#include <pwm.h>
#include "analog_output.h"

static pwm_channel_t pwm_channel_instance;

void pwm_setup(){
   8021c:	b530      	push	{r4, r5, lr}
   8021e:	b085      	sub	sp, #20
	/* Enable the specified peripheral clock (PWM clock).
	   If function returns 0, then we can proceed... */
	if (pmc_enable_periph_clk(ID_PWM) == 0) {
   80220:	2024      	movs	r0, #36	; 0x24
   80222:	4b17      	ldr	r3, [pc, #92]	; (80280 <pwm_setup+0x64>)
   80224:	4798      	blx	r3
   80226:	2800      	cmp	r0, #0
   80228:	d128      	bne.n	8027c <pwm_setup+0x60>
		pwm_channel_disable(PWM, PWM_CHANNEL_0);
   8022a:	4d16      	ldr	r5, [pc, #88]	; (80284 <pwm_setup+0x68>)
   8022c:	4628      	mov	r0, r5
   8022e:	2100      	movs	r1, #0
   80230:	4b15      	ldr	r3, [pc, #84]	; (80288 <pwm_setup+0x6c>)
   80232:	4798      	blx	r3
		pwm_clock_t clock_setting = {
   80234:	4b15      	ldr	r3, [pc, #84]	; (8028c <pwm_setup+0x70>)
   80236:	9301      	str	r3, [sp, #4]
   80238:	2400      	movs	r4, #0
   8023a:	9402      	str	r4, [sp, #8]
   8023c:	4b14      	ldr	r3, [pc, #80]	; (80290 <pwm_setup+0x74>)
   8023e:	9303      	str	r3, [sp, #12]
			.ul_clka = PWM_FREQUENCY * PWM_RESOLUTION,
			.ul_clkb = 0,
			.ul_mck = sysclk_get_cpu_hz()
		};
		pwm_init(PWM, &clock_setting);
   80240:	4628      	mov	r0, r5
   80242:	a901      	add	r1, sp, #4
   80244:	4b13      	ldr	r3, [pc, #76]	; (80294 <pwm_setup+0x78>)
   80246:	4798      	blx	r3
		pwm_channel_instance.alignment = PWM_ALIGN_LEFT;
   80248:	4913      	ldr	r1, [pc, #76]	; (80298 <pwm_setup+0x7c>)
   8024a:	810c      	strh	r4, [r1, #8]
		pwm_channel_instance.polarity = PWM_POLARITY;
   8024c:	728c      	strb	r4, [r1, #10]
		pwm_channel_instance.ul_prescaler = PWM_CMR_CPRE_CLKA;
   8024e:	230b      	movs	r3, #11
   80250:	604b      	str	r3, [r1, #4]
		pwm_channel_instance.ul_period = PWM_RESOLUTION;
   80252:	23ff      	movs	r3, #255	; 0xff
   80254:	610b      	str	r3, [r1, #16]
		pwm_channel_instance.ul_duty = 0;
   80256:	60cc      	str	r4, [r1, #12]
		pwm_channel_instance.channel = PWM_CHANNEL_0;
   80258:	600c      	str	r4, [r1, #0]
		pwm_channel_init(PWM, &pwm_channel_instance);
   8025a:	4628      	mov	r0, r5
   8025c:	4b0f      	ldr	r3, [pc, #60]	; (8029c <pwm_setup+0x80>)
   8025e:	4798      	blx	r3
		/* setup PWM for pin */
		pio_set_peripheral(PWM_PIO, PWM_PERIPHERAL, PWM_PIN);
   80260:	480f      	ldr	r0, [pc, #60]	; (802a0 <pwm_setup+0x84>)
   80262:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80266:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   8026a:	4b0e      	ldr	r3, [pc, #56]	; (802a4 <pwm_setup+0x88>)
   8026c:	4798      	blx	r3
		/* enable PWM channel */
		pwm_channel_enable(PWM, PWM_CHANNEL_0);	
   8026e:	4628      	mov	r0, r5
   80270:	4621      	mov	r1, r4
   80272:	4b0d      	ldr	r3, [pc, #52]	; (802a8 <pwm_setup+0x8c>)
   80274:	4798      	blx	r3
		pwm_set_duty(0);
   80276:	4620      	mov	r0, r4
   80278:	4b0c      	ldr	r3, [pc, #48]	; (802ac <pwm_setup+0x90>)
   8027a:	4798      	blx	r3
	}
}
   8027c:	b005      	add	sp, #20
   8027e:	bd30      	pop	{r4, r5, pc}
   80280:	00080d95 	.word	0x00080d95
   80284:	40094000 	.word	0x40094000
   80288:	00080861 	.word	0x00080861
   8028c:	0003e418 	.word	0x0003e418
   80290:	0501bd00 	.word	0x0501bd00
   80294:	000806ed 	.word	0x000806ed
   80298:	20070a08 	.word	0x20070a08
   8029c:	0008072d 	.word	0x0008072d
   802a0:	400e1000 	.word	0x400e1000
   802a4:	000809ed 	.word	0x000809ed
   802a8:	00080855 	.word	0x00080855
   802ac:	00080201 	.word	0x00080201

000802b0 <dac_setup>:
 */ 
 #include <asf.h>
 #include "io_control/dac.h"
 #include "common/pin_mapper.h"

 void dac_setup() {
   802b0:	b538      	push	{r3, r4, r5, lr}
	 pmc_enable_periph_clk(ID_DACC);
   802b2:	2026      	movs	r0, #38	; 0x26
   802b4:	4b0c      	ldr	r3, [pc, #48]	; (802e8 <dac_setup+0x38>)
   802b6:	4798      	blx	r3
	 dacc_reset(DACC);
   802b8:	4c0c      	ldr	r4, [pc, #48]	; (802ec <dac_setup+0x3c>)
   802ba:	4620      	mov	r0, r4
   802bc:	4b0c      	ldr	r3, [pc, #48]	; (802f0 <dac_setup+0x40>)
   802be:	4798      	blx	r3
	 dacc_set_transfer_mode(DACC, 0);
   802c0:	4620      	mov	r0, r4
   802c2:	2100      	movs	r1, #0
   802c4:	4b0b      	ldr	r3, [pc, #44]	; (802f4 <dac_setup+0x44>)
   802c6:	4798      	blx	r3
	 dacc_set_timing(DACC,1,1,0);			//1 is shortest refresh period, 1 max. speed, 0 startup time
   802c8:	4620      	mov	r0, r4
   802ca:	2101      	movs	r1, #1
   802cc:	460a      	mov	r2, r1
   802ce:	2300      	movs	r3, #0
   802d0:	4d09      	ldr	r5, [pc, #36]	; (802f8 <dac_setup+0x48>)
   802d2:	47a8      	blx	r5
	 
	 dacc_set_channel_selection(DACC,0);	//Channel DAC0
   802d4:	4620      	mov	r0, r4
   802d6:	2100      	movs	r1, #0
   802d8:	4b08      	ldr	r3, [pc, #32]	; (802fc <dac_setup+0x4c>)
   802da:	4798      	blx	r3
	 dacc_enable_channel(DACC, 0);			//enable DAC0
   802dc:	4620      	mov	r0, r4
   802de:	2100      	movs	r1, #0
   802e0:	4b07      	ldr	r3, [pc, #28]	; (80300 <dac_setup+0x50>)
   802e2:	4798      	blx	r3
   802e4:	bd38      	pop	{r3, r4, r5, pc}
   802e6:	bf00      	nop
   802e8:	00080d95 	.word	0x00080d95
   802ec:	400c8000 	.word	0x400c8000
   802f0:	00080615 	.word	0x00080615
   802f4:	0008061d 	.word	0x0008061d
   802f8:	00080651 	.word	0x00080651
   802fc:	00080639 	.word	0x00080639
   80300:	00080681 	.word	0x00080681

00080304 <dac_write>:
 }

 void dac_write(uint32_t value){
   80304:	b510      	push	{r4, lr}
   80306:	b082      	sub	sp, #8
	uint32_t dac_val;
	dac_val = map_value(value,0,255,0,4095);
   80308:	f640 73ff 	movw	r3, #4095	; 0xfff
   8030c:	9300      	str	r3, [sp, #0]
   8030e:	2100      	movs	r1, #0
   80310:	22ff      	movs	r2, #255	; 0xff
   80312:	460b      	mov	r3, r1
   80314:	4c03      	ldr	r4, [pc, #12]	; (80324 <dac_write+0x20>)
   80316:	47a0      	blx	r4
   80318:	4601      	mov	r1, r0
	dacc_write_conversion_data(DACC,dac_val);
   8031a:	4803      	ldr	r0, [pc, #12]	; (80328 <dac_write+0x24>)
   8031c:	4b03      	ldr	r3, [pc, #12]	; (8032c <dac_write+0x28>)
   8031e:	4798      	blx	r3
   80320:	b002      	add	sp, #8
   80322:	bd10      	pop	{r4, pc}
   80324:	000801e5 	.word	0x000801e5
   80328:	400c8000 	.word	0x400c8000
   8032c:	00080635 	.word	0x00080635

00080330 <uart_config>:
void uart_config(uint32_t baud)
{
	/* reset and disable receiver & transmitter */
	UART_CR = UART_CR_RSTRX | UART_CR_RSTTX	| UART_CR_RXDIS | UART_CR_TXDIS;
	/* configure baud rate */
	UART_BRGR = (MCK >> 4) / baud;
   80330:	4b0c      	ldr	r3, [pc, #48]	; (80364 <uart_config+0x34>)
   80332:	fbb3 f0f0 	udiv	r0, r3, r0
   80336:	4a0c      	ldr	r2, [pc, #48]	; (80368 <uart_config+0x38>)
   80338:	6010      	str	r0, [r2, #0]
	/* configure mode */
	UART_MR = UART_MR_PAR_NO | UART_MR_CHMODE_NORMAL;
   8033a:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8033e:	4b0b      	ldr	r3, [pc, #44]	; (8036c <uart_config+0x3c>)
   80340:	601a      	str	r2, [r3, #0]
	/* enable receiver and transmitter */
	UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80342:	2250      	movs	r2, #80	; 0x50
   80344:	3b04      	subs	r3, #4
   80346:	601a      	str	r2, [r3, #0]
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   80348:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
   8034c:	f44f 7280 	mov.w	r2, #256	; 0x100
   80350:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80352:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80354:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80356:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   8035a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8035c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   80360:	671a      	str	r2, [r3, #112]	; 0x70
   80362:	4770      	bx	lr
   80364:	00501bd0 	.word	0x00501bd0
   80368:	400e0820 	.word	0x400e0820
   8036c:	400e0804 	.word	0x400e0804

00080370 <uart_transmitter_ready>:
 * Transmitter Ready?
 * Return 1 if "Transmitter Ready" flag is set, otherwise 0.
 */
int uart_transmitter_ready(void)
{
	return (UART_SR & UART_SR_TXRDY);
   80370:	4b02      	ldr	r3, [pc, #8]	; (8037c <uart_transmitter_ready+0xc>)
   80372:	6818      	ldr	r0, [r3, #0]
}
   80374:	f000 0002 	and.w	r0, r0, #2
   80378:	4770      	bx	lr
   8037a:	bf00      	nop
   8037c:	400e0814 	.word	0x400e0814

00080380 <uart_receiver_ready>:
 * Receiver Ready?
 * Return 1 if "Receiver Ready" flag is set, otherwise 0.
 */
int uart_receiver_ready(void)
{
	return (UART_SR & UART_SR_RXRDY);
   80380:	4b02      	ldr	r3, [pc, #8]	; (8038c <uart_receiver_ready+0xc>)
   80382:	6818      	ldr	r0, [r3, #0]
}
   80384:	f000 0001 	and.w	r0, r0, #1
   80388:	4770      	bx	lr
   8038a:	bf00      	nop
   8038c:	400e0814 	.word	0x400e0814

00080390 <uart_send_char>:
 * Send character
 * Write character to Transmit Holding Register.
 */
void uart_send_char(uint8_t chr)
{
	UART_THR = chr;
   80390:	4b01      	ldr	r3, [pc, #4]	; (80398 <uart_send_char+0x8>)
   80392:	6018      	str	r0, [r3, #0]
   80394:	4770      	bx	lr
   80396:	bf00      	nop
   80398:	400e081c 	.word	0x400e081c

0008039c <uart_receive_char>:
 */
char uart_receive_char(void)
{
	char chr = UART_RHR;
	return chr;
   8039c:	4b01      	ldr	r3, [pc, #4]	; (803a4 <uart_receive_char+0x8>)
   8039e:	7818      	ldrb	r0, [r3, #0]
   803a0:	4770      	bx	lr
   803a2:	bf00      	nop
   803a4:	400e0818 	.word	0x400e0818

000803a8 <io_pin_dir>:
#include "common/pin_mapper.h"
#include "io_control/analog_output.h"
#include "io_control/adc.h"
#include "io_control/dac.h"

void io_pin_dir(uint8_t pin,int8_t dir){
   803a8:	b510      	push	{r4, lr}
   803aa:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   803ac:	4b0f      	ldr	r3, [pc, #60]	; (803ec <io_pin_dir+0x44>)
   803ae:	4798      	blx	r3
	ioport_set_pin_dir(mapp_pin,dir);
   803b0:	b2e1      	uxtb	r1, r4
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   803b2:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   803b4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   803b8:	f203 7307 	addw	r3, r3, #1799	; 0x707
   803bc:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
   803be:	2901      	cmp	r1, #1
   803c0:	d105      	bne.n	803ce <io_pin_dir+0x26>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803c2:	f000 021f 	and.w	r2, r0, #31
   803c6:	fa01 f202 	lsl.w	r2, r1, r2
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803ca:	611a      	str	r2, [r3, #16]
   803cc:	e006      	b.n	803dc <io_pin_dir+0x34>
	} else if (dir == IOPORT_DIR_INPUT) {
   803ce:	b929      	cbnz	r1, 803dc <io_pin_dir+0x34>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803d0:	f000 021f 	and.w	r2, r0, #31
   803d4:	2101      	movs	r1, #1
   803d6:	fa01 f202 	lsl.w	r2, r1, r2
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   803da:	615a      	str	r2, [r3, #20]
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803dc:	f000 001f 	and.w	r0, r0, #31
   803e0:	2201      	movs	r2, #1
   803e2:	fa02 f000 	lsl.w	r0, r2, r0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803e6:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
   803ea:	bd10      	pop	{r4, pc}
   803ec:	000801d9 	.word	0x000801d9

000803f0 <io_pin_level>:
}

void io_pin_level(int8_t pin,int8_t level){
   803f0:	b510      	push	{r4, lr}
   803f2:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   803f4:	b2c0      	uxtb	r0, r0
   803f6:	4b0b      	ldr	r3, [pc, #44]	; (80424 <io_pin_level+0x34>)
   803f8:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   803fa:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   803fc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80400:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80404:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   80406:	b134      	cbz	r4, 80416 <io_pin_level+0x26>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80408:	f000 001f 	and.w	r0, r0, #31
   8040c:	2201      	movs	r2, #1
   8040e:	fa02 f000 	lsl.w	r0, r2, r0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80412:	6318      	str	r0, [r3, #48]	; 0x30
   80414:	bd10      	pop	{r4, pc}
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80416:	f000 001f 	and.w	r0, r0, #31
   8041a:	2201      	movs	r2, #1
   8041c:	fa02 f000 	lsl.w	r0, r2, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80420:	6358      	str	r0, [r3, #52]	; 0x34
   80422:	bd10      	pop	{r4, pc}
   80424:	000801d9 	.word	0x000801d9

00080428 <io_pin_status>:
	ioport_set_pin_level(mapp_pin,level);
}

int8_t io_pin_status(int8_t pin){
   80428:	b508      	push	{r3, lr}
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   8042a:	b2c0      	uxtb	r0, r0
   8042c:	4b09      	ldr	r3, [pc, #36]	; (80454 <io_pin_status+0x2c>)
   8042e:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   80430:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80432:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80436:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8043a:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8043c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   8043e:	f000 001f 	and.w	r0, r0, #31
   80442:	2201      	movs	r2, #1
   80444:	fa02 f000 	lsl.w	r0, r2, r0
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80448:	4218      	tst	r0, r3
	return ioport_get_pin_level(mapp_pin);
}
   8044a:	bf0c      	ite	eq
   8044c:	2000      	moveq	r0, #0
   8044e:	2001      	movne	r0, #1
   80450:	bd08      	pop	{r3, pc}
   80452:	bf00      	nop
   80454:	000801d9 	.word	0x000801d9

00080458 <io_pwm_duty>:

void io_pwm_duty(uint8_t duty){
   80458:	b508      	push	{r3, lr}
	pwm_set_duty(duty);
   8045a:	4b01      	ldr	r3, [pc, #4]	; (80460 <io_pwm_duty+0x8>)
   8045c:	4798      	blx	r3
   8045e:	bd08      	pop	{r3, pc}
   80460:	00080201 	.word	0x00080201

00080464 <io_adc_value>:
}

uint16_t io_adc_value(uint32_t channel){
   80464:	b508      	push	{r3, lr}
	return read_adc_value(channel);
   80466:	4b01      	ldr	r3, [pc, #4]	; (8046c <io_adc_value+0x8>)
   80468:	4798      	blx	r3
}
   8046a:	bd08      	pop	{r3, pc}
   8046c:	000808e9 	.word	0x000808e9

00080470 <send_char_term>:

void send_char_term(uint8_t chr){
   80470:	b538      	push	{r3, r4, r5, lr}
   80472:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   80474:	4c07      	ldr	r4, [pc, #28]	; (80494 <send_char_term+0x24>)
   80476:	47a0      	blx	r4
   80478:	2800      	cmp	r0, #0
   8047a:	d0fc      	beq.n	80476 <send_char_term+0x6>
	uart_send_char(chr);
   8047c:	4628      	mov	r0, r5
   8047e:	4b06      	ldr	r3, [pc, #24]	; (80498 <send_char_term+0x28>)
   80480:	4798      	blx	r3
	/*Line terminator*/
	while (!uart_transmitter_ready());
   80482:	4c04      	ldr	r4, [pc, #16]	; (80494 <send_char_term+0x24>)
   80484:	47a0      	blx	r4
   80486:	2800      	cmp	r0, #0
   80488:	d0fc      	beq.n	80484 <send_char_term+0x14>
	uart_send_char(10);
   8048a:	200a      	movs	r0, #10
   8048c:	4b02      	ldr	r3, [pc, #8]	; (80498 <send_char_term+0x28>)
   8048e:	4798      	blx	r3
   80490:	bd38      	pop	{r3, r4, r5, pc}
   80492:	bf00      	nop
   80494:	00080371 	.word	0x00080371
   80498:	00080391 	.word	0x00080391

0008049c <send_char_no_term>:
}

void send_char_no_term(uint8_t chr){
   8049c:	b538      	push	{r3, r4, r5, lr}
   8049e:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   804a0:	4c03      	ldr	r4, [pc, #12]	; (804b0 <send_char_no_term+0x14>)
   804a2:	47a0      	blx	r4
   804a4:	2800      	cmp	r0, #0
   804a6:	d0fc      	beq.n	804a2 <send_char_no_term+0x6>
	uart_send_char(chr);
   804a8:	4628      	mov	r0, r5
   804aa:	4b02      	ldr	r3, [pc, #8]	; (804b4 <send_char_no_term+0x18>)
   804ac:	4798      	blx	r3
   804ae:	bd38      	pop	{r3, r4, r5, pc}
   804b0:	00080371 	.word	0x00080371
   804b4:	00080391 	.word	0x00080391

000804b8 <read_char>:
}

uint8_t read_char(void){
   804b8:	b508      	push	{r3, lr}
	/*Read char if receiver is ready*/
	if (uart_receiver_ready())
   804ba:	4b04      	ldr	r3, [pc, #16]	; (804cc <read_char+0x14>)
   804bc:	4798      	blx	r3
   804be:	b110      	cbz	r0, 804c6 <read_char+0xe>
	{
		return uart_receive_char();
   804c0:	4b03      	ldr	r3, [pc, #12]	; (804d0 <read_char+0x18>)
   804c2:	4798      	blx	r3
   804c4:	bd08      	pop	{r3, pc}
	}
	/*failed to read char*/
	return 0;
   804c6:	2000      	movs	r0, #0
}
   804c8:	bd08      	pop	{r3, pc}
   804ca:	bf00      	nop
   804cc:	00080381 	.word	0x00080381
   804d0:	0008039d 	.word	0x0008039d

000804d4 <read_when_ready>:

uint8_t read_when_ready(void){
   804d4:	b510      	push	{r4, lr}
	while (!uart_receiver_ready());
   804d6:	4c03      	ldr	r4, [pc, #12]	; (804e4 <read_when_ready+0x10>)
   804d8:	47a0      	blx	r4
   804da:	2800      	cmp	r0, #0
   804dc:	d0fc      	beq.n	804d8 <read_when_ready+0x4>
	return read_char();
   804de:	4b02      	ldr	r3, [pc, #8]	; (804e8 <read_when_ready+0x14>)
   804e0:	4798      	blx	r3
}
   804e2:	bd10      	pop	{r4, pc}
   804e4:	00080381 	.word	0x00080381
   804e8:	000804b9 	.word	0x000804b9

000804ec <send_number>:

void send_number(uint16_t nbr){
   804ec:	b530      	push	{r4, r5, lr}
   804ee:	b085      	sub	sp, #20
   804f0:	4602      	mov	r2, r0
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
   804f2:	a801      	add	r0, sp, #4
   804f4:	4908      	ldr	r1, [pc, #32]	; (80518 <send_number+0x2c>)
   804f6:	4b09      	ldr	r3, [pc, #36]	; (8051c <send_number+0x30>)
   804f8:	4798      	blx	r3
	
	while (string[i] != '\0')
   804fa:	f89d 0004 	ldrb.w	r0, [sp, #4]
   804fe:	b130      	cbz	r0, 8050e <send_number+0x22>
   80500:	ac01      	add	r4, sp, #4
	{
		send_char_no_term(string[i]);
   80502:	4d07      	ldr	r5, [pc, #28]	; (80520 <send_number+0x34>)
   80504:	47a8      	blx	r5
void send_number(uint16_t nbr){
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
	
	while (string[i] != '\0')
   80506:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   8050a:	2800      	cmp	r0, #0
   8050c:	d1fa      	bne.n	80504 <send_number+0x18>
	{
		send_char_no_term(string[i]);
		i++;
	}
	
	send_char_term(13); //Carriage Return and terminator;
   8050e:	200d      	movs	r0, #13
   80510:	4b04      	ldr	r3, [pc, #16]	; (80524 <send_number+0x38>)
   80512:	4798      	blx	r3
}
   80514:	b005      	add	sp, #20
   80516:	bd30      	pop	{r4, r5, pc}
   80518:	00085b2c 	.word	0x00085b2c
   8051c:	00081119 	.word	0x00081119
   80520:	0008049d 	.word	0x0008049d
   80524:	00080471 	.word	0x00080471

00080528 <io_dac_value>:

void io_dac_value(uint8_t value){
   80528:	b508      	push	{r3, lr}
	dac_write(value);
   8052a:	4b01      	ldr	r3, [pc, #4]	; (80530 <io_dac_value+0x8>)
   8052c:	4798      	blx	r3
   8052e:	bd08      	pop	{r3, pc}
   80530:	00080305 	.word	0x00080305

00080534 <start_coms>:
#include "io_control/io_uart.h"
#include "matlab_coms/matlab_functions.h"
#include "matlab_coms/matlab_state.h"


void start_coms(){
   80534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint16_t adc_val;
	pin = 0;
	val = 0;
	adc_val = 0;
	
	state next_state = STANDBY;
   80536:	2400      	movs	r4, #0
			val = 0;
			next_state = STANDBY;
			break;
			
			case A_READ:
			pin = read_when_ready();
   80538:	4d2c      	ldr	r5, [pc, #176]	; (805ec <start_coms+0xb8>)
			adc_val = io_adc_value(pin);
   8053a:	4f2d      	ldr	r7, [pc, #180]	; (805f0 <start_coms+0xbc>)
			send_number(adc_val);
   8053c:	4e2d      	ldr	r6, [pc, #180]	; (805f4 <start_coms+0xc0>)
	state next_state = STANDBY;
	state current_state = STANDBY;
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
   8053e:	2c07      	cmp	r4, #7
   80540:	d8fd      	bhi.n	8053e <start_coms+0xa>
   80542:	e8df f004 	tbb	[pc, r4]
   80546:	2104      	.short	0x2104
   80548:	443c3126 	.word	0x443c3126
   8054c:	4e49      	.short	0x4e49
			case STANDBY:
			switch (read_char())
   8054e:	4b2a      	ldr	r3, [pc, #168]	; (805f8 <start_coms+0xc4>)
   80550:	4798      	blx	r3
   80552:	2858      	cmp	r0, #88	; 0x58
   80554:	d012      	beq.n	8057c <start_coms+0x48>
   80556:	d806      	bhi.n	80566 <start_coms+0x32>
   80558:	2856      	cmp	r0, #86	; 0x56
   8055a:	d00b      	beq.n	80574 <start_coms+0x40>
   8055c:	d80c      	bhi.n	80578 <start_coms+0x44>
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
   8055e:	2805      	cmp	r0, #5
   80560:	bf08      	it	eq
   80562:	2401      	moveq	r4, #1
   80564:	e7eb      	b.n	8053e <start_coms+0xa>
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
			case STANDBY:
			switch (read_char())
   80566:	285a      	cmp	r0, #90	; 0x5a
   80568:	d00c      	beq.n	80584 <start_coms+0x50>
   8056a:	d309      	bcc.n	80580 <start_coms+0x4c>
				break;
				case ANALOG_READ:
				next_state = A_READ;
				break;
				case ANALOG_WRITE_D:
				next_state = A_WRITE_DAC;
   8056c:	285b      	cmp	r0, #91	; 0x5b
   8056e:	bf08      	it	eq
   80570:	2406      	moveq	r4, #6
   80572:	e7e4      	b.n	8053e <start_coms+0xa>
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
				break;
				case PIN_MODE:
				next_state = P_MODE;
   80574:	2402      	movs	r4, #2
				break;
   80576:	e7e2      	b.n	8053e <start_coms+0xa>
				case DIGITAL_WRITE:
				next_state = D_WRITE;
   80578:	2403      	movs	r4, #3
				break;
   8057a:	e7e0      	b.n	8053e <start_coms+0xa>
				case DIGITAL_READ:
				next_state = D_READ;
   8057c:	2404      	movs	r4, #4
				break;
   8057e:	e7de      	b.n	8053e <start_coms+0xa>
				case ANALOG_WRITE:
				next_state = A_WRITE;
   80580:	2405      	movs	r4, #5
				break;
   80582:	e7dc      	b.n	8053e <start_coms+0xa>
				case ANALOG_READ:
				next_state = A_READ;
   80584:	2407      	movs	r4, #7
				break;
   80586:	e7da      	b.n	8053e <start_coms+0xa>
				break;
			}
			break;
			
			case HANDSHAKE: /*Handshake with matlab*/
			send_char_term(ACK);
   80588:	2006      	movs	r0, #6
   8058a:	4b1c      	ldr	r3, [pc, #112]	; (805fc <start_coms+0xc8>)
   8058c:	4798      	blx	r3
			next_state = STANDBY;
   8058e:	2400      	movs	r4, #0
			break;
   80590:	e7d5      	b.n	8053e <start_coms+0xa>
			
			case P_MODE: 
			pin = read_when_ready();
   80592:	47a8      	blx	r5
   80594:	4604      	mov	r4, r0
			val = read_when_ready();
   80596:	47a8      	blx	r5
			io_pin_dir(pin,(val-10));	//calculate value
   80598:	f1a0 010a 	sub.w	r1, r0, #10
   8059c:	4620      	mov	r0, r4
   8059e:	b249      	sxtb	r1, r1
   805a0:	4b17      	ldr	r3, [pc, #92]	; (80600 <start_coms+0xcc>)
   805a2:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   805a4:	2400      	movs	r4, #0
			break;
   805a6:	e7ca      	b.n	8053e <start_coms+0xa>
			
			case D_WRITE:
			pin = read_when_ready();
   805a8:	47a8      	blx	r5
   805aa:	4604      	mov	r4, r0
			val = read_when_ready();
   805ac:	47a8      	blx	r5
			io_pin_level(pin,(val-10));	//calculate value
   805ae:	f1a0 010a 	sub.w	r1, r0, #10
   805b2:	b260      	sxtb	r0, r4
   805b4:	b249      	sxtb	r1, r1
   805b6:	4b13      	ldr	r3, [pc, #76]	; (80604 <start_coms+0xd0>)
   805b8:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   805ba:	2400      	movs	r4, #0
			break;
   805bc:	e7bf      	b.n	8053e <start_coms+0xa>
			
			case D_READ:
			pin = read_when_ready();
   805be:	47a8      	blx	r5
			val = io_pin_status(pin);
   805c0:	b240      	sxtb	r0, r0
   805c2:	4b11      	ldr	r3, [pc, #68]	; (80608 <start_coms+0xd4>)
   805c4:	4798      	blx	r3
			send_number(val);
   805c6:	b2c0      	uxtb	r0, r0
   805c8:	47b0      	blx	r6
			pin = 0;
			val = 0;
			next_state = STANDBY;
   805ca:	2400      	movs	r4, #0
			break;
   805cc:	e7b7      	b.n	8053e <start_coms+0xa>
			
			case A_WRITE:
			val = read_when_ready();
   805ce:	47a8      	blx	r5
			io_pwm_duty(val);
   805d0:	4b0e      	ldr	r3, [pc, #56]	; (8060c <start_coms+0xd8>)
   805d2:	4798      	blx	r3
			val = 0;
			next_state = STANDBY;
   805d4:	2400      	movs	r4, #0
			break;
   805d6:	e7b2      	b.n	8053e <start_coms+0xa>

			case A_WRITE_DAC:
			val = read_when_ready();
   805d8:	47a8      	blx	r5
			io_dac_value(val);
   805da:	4b0d      	ldr	r3, [pc, #52]	; (80610 <start_coms+0xdc>)
   805dc:	4798      	blx	r3
			val = 0;
			next_state = STANDBY;
   805de:	2400      	movs	r4, #0
			break;
   805e0:	e7ad      	b.n	8053e <start_coms+0xa>
			
			case A_READ:
			pin = read_when_ready();
   805e2:	47a8      	blx	r5
			adc_val = io_adc_value(pin);
   805e4:	47b8      	blx	r7
			send_number(adc_val);
   805e6:	47b0      	blx	r6
			pin = 0;
			adc_val = 0;
			next_state = STANDBY;
   805e8:	2400      	movs	r4, #0
			break;
   805ea:	e7a8      	b.n	8053e <start_coms+0xa>
   805ec:	000804d5 	.word	0x000804d5
   805f0:	00080465 	.word	0x00080465
   805f4:	000804ed 	.word	0x000804ed
   805f8:	000804b9 	.word	0x000804b9
   805fc:	00080471 	.word	0x00080471
   80600:	000803a9 	.word	0x000803a9
   80604:	000803f1 	.word	0x000803f1
   80608:	00080429 	.word	0x00080429
   8060c:	00080459 	.word	0x00080459
   80610:	00080529 	.word	0x00080529

00080614 <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   80614:	2301      	movs	r3, #1
   80616:	6003      	str	r3, [r0, #0]
   80618:	4770      	bx	lr
   8061a:	bf00      	nop

0008061c <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   8061c:	b121      	cbz	r1, 80628 <dacc_set_transfer_mode+0xc>
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR |= DACC_MR_WORD;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   8061e:	6843      	ldr	r3, [r0, #4]
   80620:	f043 0310 	orr.w	r3, r3, #16
   80624:	6043      	str	r3, [r0, #4]
   80626:	e003      	b.n	80630 <dacc_set_transfer_mode+0x14>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   80628:	6843      	ldr	r3, [r0, #4]
   8062a:	f023 0310 	bic.w	r3, r3, #16
   8062e:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   80630:	2000      	movs	r0, #0
   80632:	4770      	bx	lr

00080634 <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   80634:	6201      	str	r1, [r0, #32]
   80636:	4770      	bx	lr

00080638 <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   80638:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   8063a:	2901      	cmp	r1, #1
   8063c:	d806      	bhi.n	8064c <dacc_set_channel_selection+0x14>
		return DACC_RC_INVALID_PARAM;
	}
	mr &= ~(DACC_MR_TAG);
   8063e:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   80642:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   80646:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   80648:	2000      	movs	r0, #0
   8064a:	4770      	bx	lr
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
	if (ul_channel > MAX_CH_NB) {
		return DACC_RC_INVALID_PARAM;
   8064c:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   8064e:	4770      	bx	lr

00080650 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80650:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   80652:	6844      	ldr	r4, [r0, #4]
   80654:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   80658:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   8065c:	0209      	lsls	r1, r1, #8
   8065e:	b289      	uxth	r1, r1
   80660:	430c      	orrs	r4, r1
	if (ul_maxs) {
   80662:	b112      	cbz	r2, 8066a <dacc_set_timing+0x1a>
		mr |= DACC_MR_MAXS;
   80664:	f444 1400 	orr.w	r4, r4, #2097152	; 0x200000
   80668:	e001      	b.n	8066e <dacc_set_timing+0x1e>
	} else {
		mr &= ~DACC_MR_MAXS;
   8066a:	f424 1400 	bic.w	r4, r4, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   8066e:	061b      	lsls	r3, r3, #24
   80670:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   80674:	431c      	orrs	r4, r3
	p_dacc->DACC_MR = mr;
   80676:	6044      	str	r4, [r0, #4]
	return DACC_RC_OK;
}
   80678:	2000      	movs	r0, #0
   8067a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8067e:	4770      	bx	lr

00080680 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   80680:	2901      	cmp	r1, #1
   80682:	d805      	bhi.n	80690 <dacc_enable_channel+0x10>
		return DACC_RC_INVALID_PARAM;

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   80684:	2301      	movs	r3, #1
   80686:	fa03 f101 	lsl.w	r1, r3, r1
   8068a:	6101      	str	r1, [r0, #16]
	return DACC_RC_OK;
   8068c:	2000      	movs	r0, #0
   8068e:	4770      	bx	lr
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
		return DACC_RC_INVALID_PARAM;
   80690:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   80692:	4770      	bx	lr

00080694 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
   80694:	b4f0      	push	{r4, r5, r6, r7}
   80696:	b08c      	sub	sp, #48	; 0x30
   80698:	4607      	mov	r7, r0
   8069a:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
   8069c:	ac01      	add	r4, sp, #4
   8069e:	4d12      	ldr	r5, [pc, #72]	; (806e8 <pwm_clocks_generate+0x54>)
   806a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   806a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   806a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   806a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   806a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   806ac:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   806b0:	466a      	mov	r2, sp
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
   806b2:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
   806b4:	f852 4f04 	ldr.w	r4, [r2, #4]!
   806b8:	fbb6 f4f4 	udiv	r4, r6, r4
   806bc:	fbb4 f4f7 	udiv	r4, r4, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
   806c0:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   806c4:	d903      	bls.n	806ce <pwm_clocks_generate+0x3a>
			break;
		}
		ul_pre++;
   806c6:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
   806c8:	2b0b      	cmp	r3, #11
   806ca:	d1f3      	bne.n	806b4 <pwm_clocks_generate+0x20>
   806cc:	e004      	b.n	806d8 <pwm_clocks_generate+0x44>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
   806ce:	2b0a      	cmp	r3, #10
   806d0:	d805      	bhi.n	806de <pwm_clocks_generate+0x4a>
		return ul_div | (ul_pre << 8);
   806d2:	ea44 2003 	orr.w	r0, r4, r3, lsl #8
   806d6:	e004      	b.n	806e2 <pwm_clocks_generate+0x4e>
	} else {
		return PWM_INVALID_ARGUMENT;
   806d8:	f64f 70ff 	movw	r0, #65535	; 0xffff
   806dc:	e001      	b.n	806e2 <pwm_clocks_generate+0x4e>
   806de:	f64f 70ff 	movw	r0, #65535	; 0xffff
	}
}
   806e2:	b00c      	add	sp, #48	; 0x30
   806e4:	bcf0      	pop	{r4, r5, r6, r7}
   806e6:	4770      	bx	lr
   806e8:	00085b30 	.word	0x00085b30

000806ec <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
   806ec:	b570      	push	{r4, r5, r6, lr}
   806ee:	4606      	mov	r6, r0
   806f0:	460c      	mov	r4, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
   806f2:	6808      	ldr	r0, [r1, #0]
   806f4:	b140      	cbz	r0, 80708 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
   806f6:	6889      	ldr	r1, [r1, #8]
   806f8:	4b0b      	ldr	r3, [pc, #44]	; (80728 <pwm_init+0x3c>)
   806fa:	4798      	blx	r3
   806fc:	4605      	mov	r5, r0
		if (result == PWM_INVALID_ARGUMENT) {
   806fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80702:	4298      	cmp	r0, r3
   80704:	d101      	bne.n	8070a <pwm_init+0x1e>
   80706:	e00e      	b.n	80726 <pwm_init+0x3a>
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
	uint32_t clock = 0;
   80708:	2500      	movs	r5, #0

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
   8070a:	6860      	ldr	r0, [r4, #4]
   8070c:	b140      	cbz	r0, 80720 <pwm_init+0x34>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
   8070e:	68a1      	ldr	r1, [r4, #8]
   80710:	4b05      	ldr	r3, [pc, #20]	; (80728 <pwm_init+0x3c>)
   80712:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
   80714:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80718:	4298      	cmp	r0, r3
   8071a:	d004      	beq.n	80726 <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
   8071c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
   80720:	6035      	str	r5, [r6, #0]
#endif
	return 0;
   80722:	2000      	movs	r0, #0
   80724:	bd70      	pop	{r4, r5, r6, pc}
}
   80726:	bd70      	pop	{r4, r5, r6, pc}
   80728:	00080695 	.word	0x00080695

0008072c <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
   8072c:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
   8072e:	680b      	ldr	r3, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   80730:	8a8c      	ldrh	r4, [r1, #20]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80732:	684a      	ldr	r2, [r1, #4]
   80734:	f002 020f 	and.w	r2, r2, #15
   80738:	4314      	orrs	r4, r2
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
   8073a:	890d      	ldrh	r5, [r1, #8]
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   8073c:	432c      	orrs	r4, r5
   8073e:	7a8a      	ldrb	r2, [r1, #10]
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
   80740:	ea44 2442 	orr.w	r4, r4, r2, lsl #9
			(p_channel->b_deadtime_generator << 16) |
   80744:	7d8a      	ldrb	r2, [r1, #22]
   80746:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
   8074a:	7dca      	ldrb	r2, [r1, #23]
   8074c:	ea44 4442 	orr.w	r4, r4, r2, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
   80750:	7e0a      	ldrb	r2, [r1, #24]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80752:	ea44 4482 	orr.w	r4, r4, r2, lsl #18
   80756:	eb00 1243 	add.w	r2, r0, r3, lsl #5
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
   8075a:	f8c2 4200 	str.w	r4, [r2, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
   8075e:	68cc      	ldr	r4, [r1, #12]
   80760:	f8c2 4204 	str.w	r4, [r2, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
   80764:	690c      	ldr	r4, [r1, #16]
   80766:	f8c2 420c 	str.w	r4, [r2, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
   8076a:	7d8a      	ldrb	r2, [r1, #22]
   8076c:	b13a      	cbz	r2, 8077e <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
   8076e:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
   80770:	8b4a      	ldrh	r2, [r1, #26]
   80772:	ea42 4404 	orr.w	r4, r2, r4, lsl #16
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
   80776:	eb00 1243 	add.w	r2, r0, r3, lsl #5
   8077a:	f8c2 4218 	str.w	r4, [r2, #536]	; 0x218
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
   8077e:	6c85      	ldr	r5, [r0, #72]	; 0x48
   80780:	f04f 1201 	mov.w	r2, #65537	; 0x10001
   80784:	409a      	lsls	r2, r3
   80786:	43d2      	mvns	r2, r2
   80788:	4015      	ands	r5, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
   8078a:	7fce      	ldrb	r6, [r1, #31]
   8078c:	409e      	lsls	r6, r3
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
   8078e:	7f8c      	ldrb	r4, [r1, #30]
   80790:	409c      	lsls	r4, r3
   80792:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   80796:	432c      	orrs	r4, r5
			(((p_channel->output_selection.b_override_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
   80798:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
   8079a:	6c44      	ldr	r4, [r0, #68]	; 0x44
   8079c:	4022      	ands	r2, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
   8079e:	f891 5021 	ldrb.w	r5, [r1, #33]	; 0x21
   807a2:	409d      	lsls	r5, r3
					<< 16);
	p_pwm->PWM_OS = tmp_reg;

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
   807a4:	f891 4020 	ldrb.w	r4, [r1, #32]
   807a8:	409c      	lsls	r4, r3
   807aa:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   807ae:	4322      	orrs	r2, r4
			(((p_channel->output_selection.override_level_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
   807b0:	6442      	str	r2, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
   807b2:	2201      	movs	r2, #1
   807b4:	409a      	lsls	r2, r3
	if (p_channel->b_sync_ch) {
   807b6:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   807ba:	b11c      	cbz	r4, 807c4 <pwm_channel_init+0x98>
		p_pwm->PWM_SCM |= channel;
   807bc:	6a04      	ldr	r4, [r0, #32]
   807be:	4314      	orrs	r4, r2
   807c0:	6204      	str	r4, [r0, #32]
   807c2:	e003      	b.n	807cc <pwm_channel_init+0xa0>
	} else {
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
   807c4:	6a04      	ldr	r4, [r0, #32]
   807c6:	ea24 0402 	bic.w	r4, r4, r2
   807ca:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
   807cc:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   807d0:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
   807d2:	6e84      	ldr	r4, [r0, #104]	; 0x68
   807d4:	bf0c      	ite	eq
   807d6:	4314      	orreq	r4, r2
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
   807d8:	4394      	bicne	r4, r2
   807da:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
   807dc:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   807e0:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
   807e2:	6e84      	ldr	r4, [r0, #104]	; 0x68
   807e4:	bf0c      	ite	eq
   807e6:	ea44 4202 	orreq.w	r2, r4, r2, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
   807ea:	ea24 4202 	bicne.w	r2, r4, r2, lsl #16
   807ee:	6682      	str	r2, [r0, #104]	; 0x68
	}
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
   807f0:	2b03      	cmp	r3, #3
   807f2:	d80c      	bhi.n	8080e <pwm_channel_init+0xe2>
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE1;
   807f4:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
		ch_num *= 8;
   807f6:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE1;
		fault_enable_reg &= ~(0xFF << ch_num);
   807f8:	22ff      	movs	r2, #255	; 0xff
   807fa:	409a      	lsls	r2, r3
   807fc:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   80800:	f891 1023 	ldrb.w	r1, [r1, #35]	; 0x23
   80804:	fa01 f303 	lsl.w	r3, r1, r3
   80808:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE1 = fault_enable_reg;
   8080a:	66c3      	str	r3, [r0, #108]	; 0x6c
   8080c:	e00c      	b.n	80828 <pwm_channel_init+0xfc>
	} else {
		ch_num -= 4;
   8080e:	3b04      	subs	r3, #4
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE2;
   80810:	6f04      	ldr	r4, [r0, #112]	; 0x70
		fault_enable_reg &= ~(0xFF << ch_num);
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
		p_pwm->PWM_FPE1 = fault_enable_reg;
	} else {
		ch_num -= 4;
		ch_num *= 8;
   80812:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE2;
		fault_enable_reg &= ~(0xFF << ch_num);
   80814:	22ff      	movs	r2, #255	; 0xff
   80816:	409a      	lsls	r2, r3
   80818:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   8081c:	f891 1023 	ldrb.w	r1, [r1, #35]	; 0x23
   80820:	fa01 f303 	lsl.w	r3, r1, r3
   80824:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE2 = fault_enable_reg;
   80826:	6703      	str	r3, [r0, #112]	; 0x70
			PWM_CAE_ADEDGV(p_channel->ul_additional_edge) |
			p_channel->additional_edge_mode;
#endif

	return 0;
}
   80828:	2000      	movs	r0, #0
   8082a:	bc70      	pop	{r4, r5, r6}
   8082c:	4770      	bx	lr
   8082e:	bf00      	nop

00080830 <pwm_channel_update_duty>:
 *
 * \retval 0 if changing succeeds, otherwise fails.
 */
uint32_t pwm_channel_update_duty(Pwm *p_pwm, pwm_channel_t *p_channel,
		uint32_t ul_duty)
{
   80830:	b410      	push	{r4}
	uint32_t ch_num = p_channel->channel;
   80832:	680c      	ldr	r4, [r1, #0]

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
   80834:	690b      	ldr	r3, [r1, #16]
   80836:	4293      	cmp	r3, r2
   80838:	d306      	bcc.n	80848 <pwm_channel_update_duty+0x18>
		return PWM_INVALID_ARGUMENT;
	} else {
		/* Save new duty cycle value */
		p_channel->ul_duty = ul_duty;
   8083a:	60ca      	str	r2, [r1, #12]
		mode &= ~PWM_CMR_CPD;
		p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = mode;

		p_pwm->PWM_CH_NUM[ch_num].PWM_CUPD = ul_duty;
#else
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
   8083c:	eb00 1044 	add.w	r0, r0, r4, lsl #5
   80840:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
#endif
	}

	return 0;
   80844:	2000      	movs	r0, #0
   80846:	e001      	b.n	8084c <pwm_channel_update_duty+0x1c>
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
		return PWM_INVALID_ARGUMENT;
   80848:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
   8084c:	f85d 4b04 	ldr.w	r4, [sp], #4
   80850:	4770      	bx	lr
   80852:	bf00      	nop

00080854 <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
   80854:	2301      	movs	r3, #1
   80856:	fa03 f101 	lsl.w	r1, r3, r1
   8085a:	6041      	str	r1, [r0, #4]
   8085c:	4770      	bx	lr
   8085e:	bf00      	nop

00080860 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
   80860:	2301      	movs	r3, #1
   80862:	fa03 f101 	lsl.w	r1, r3, r1
   80866:	6081      	str	r1, [r0, #8]
   80868:	4770      	bx	lr
   8086a:	bf00      	nop

0008086c <init_adc>:
 */ 
#include <adc.h>
#include <asf.h>
#include "io_control/adc.h"

void init_adc(){
   8086c:	b538      	push	{r3, r4, r5, lr}
	pmc_enable_periph_clk(ID_ADC);
   8086e:	2025      	movs	r0, #37	; 0x25
   80870:	4b13      	ldr	r3, [pc, #76]	; (808c0 <init_adc+0x54>)
   80872:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz()/2, ADC_CLOCK, 8);
   80874:	4c13      	ldr	r4, [pc, #76]	; (808c4 <init_adc+0x58>)
   80876:	4620      	mov	r0, r4
   80878:	4913      	ldr	r1, [pc, #76]	; (808c8 <init_adc+0x5c>)
   8087a:	4a14      	ldr	r2, [pc, #80]	; (808cc <init_adc+0x60>)
   8087c:	2308      	movs	r3, #8
   8087e:	4d14      	ldr	r5, [pc, #80]	; (808d0 <init_adc+0x64>)
   80880:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, ADC_SETTLING_TIME_3, 1);
   80882:	4620      	mov	r0, r4
   80884:	2100      	movs	r1, #0
   80886:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
   8088a:	2301      	movs	r3, #1
   8088c:	4d11      	ldr	r5, [pc, #68]	; (808d4 <init_adc+0x68>)
   8088e:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_10);
   80890:	4620      	mov	r0, r4
   80892:	2110      	movs	r1, #16
   80894:	4b10      	ldr	r3, [pc, #64]	; (808d8 <init_adc+0x6c>)
   80896:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_7);	//A0
   80898:	4620      	mov	r0, r4
   8089a:	2107      	movs	r1, #7
   8089c:	4d0f      	ldr	r5, [pc, #60]	; (808dc <init_adc+0x70>)
   8089e:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_6);	//A1
   808a0:	4620      	mov	r0, r4
   808a2:	2106      	movs	r1, #6
   808a4:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_5);	//A2
   808a6:	4620      	mov	r0, r4
   808a8:	2105      	movs	r1, #5
   808aa:	47a8      	blx	r5
	adc_enable_all_channel(ADC);
   808ac:	4620      	mov	r0, r4
   808ae:	4b0c      	ldr	r3, [pc, #48]	; (808e0 <init_adc+0x74>)
   808b0:	4798      	blx	r3
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
   808b2:	4620      	mov	r0, r4
   808b4:	2100      	movs	r1, #0
   808b6:	460a      	mov	r2, r1
   808b8:	4b0a      	ldr	r3, [pc, #40]	; (808e4 <init_adc+0x78>)
   808ba:	4798      	blx	r3
   808bc:	bd38      	pop	{r3, r4, r5, pc}
   808be:	bf00      	nop
   808c0:	00080d95 	.word	0x00080d95
   808c4:	400c0000 	.word	0x400c0000
   808c8:	0501bd00 	.word	0x0501bd00
   808cc:	000f4240 	.word	0x000f4240
   808d0:	00080149 	.word	0x00080149
   808d4:	0008019d 	.word	0x0008019d
   808d8:	0008017d 	.word	0x0008017d
   808dc:	000801c5 	.word	0x000801c5
   808e0:	000801d1 	.word	0x000801d1
   808e4:	0008018d 	.word	0x0008018d

000808e8 <read_adc_value>:
}

uint16_t read_adc_value(uint32_t channel){
   808e8:	b538      	push	{r3, r4, r5, lr}
   808ea:	4605      	mov	r5, r0
	adc_start(ADC);
   808ec:	4c04      	ldr	r4, [pc, #16]	; (80900 <read_adc_value+0x18>)
   808ee:	4620      	mov	r0, r4
   808f0:	4b04      	ldr	r3, [pc, #16]	; (80904 <read_adc_value+0x1c>)
   808f2:	4798      	blx	r3
	return ADC->ADC_CDR[channel];
   808f4:	3514      	adds	r5, #20
   808f6:	f854 0025 	ldr.w	r0, [r4, r5, lsl #2]
   808fa:	b280      	uxth	r0, r0
   808fc:	bd38      	pop	{r3, r4, r5, pc}
   808fe:	bf00      	nop
   80900:	400c0000 	.word	0x400c0000
   80904:	000801bd 	.word	0x000801bd

00080908 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80908:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8090a:	480e      	ldr	r0, [pc, #56]	; (80944 <sysclk_init+0x3c>)
   8090c:	4b0e      	ldr	r3, [pc, #56]	; (80948 <sysclk_init+0x40>)
   8090e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80910:	2000      	movs	r0, #0
   80912:	213e      	movs	r1, #62	; 0x3e
   80914:	4b0d      	ldr	r3, [pc, #52]	; (8094c <sysclk_init+0x44>)
   80916:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80918:	4c0d      	ldr	r4, [pc, #52]	; (80950 <sysclk_init+0x48>)
   8091a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   8091c:	2800      	cmp	r0, #0
   8091e:	d0fc      	beq.n	8091a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80920:	4b0c      	ldr	r3, [pc, #48]	; (80954 <sysclk_init+0x4c>)
   80922:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80924:	4a0c      	ldr	r2, [pc, #48]	; (80958 <sysclk_init+0x50>)
   80926:	4b0d      	ldr	r3, [pc, #52]	; (8095c <sysclk_init+0x54>)
   80928:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   8092a:	4c0d      	ldr	r4, [pc, #52]	; (80960 <sysclk_init+0x58>)
   8092c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   8092e:	2800      	cmp	r0, #0
   80930:	d0fc      	beq.n	8092c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80932:	2010      	movs	r0, #16
   80934:	4b0b      	ldr	r3, [pc, #44]	; (80964 <sysclk_init+0x5c>)
   80936:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80938:	4b0b      	ldr	r3, [pc, #44]	; (80968 <sysclk_init+0x60>)
   8093a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   8093c:	4801      	ldr	r0, [pc, #4]	; (80944 <sysclk_init+0x3c>)
   8093e:	4b02      	ldr	r3, [pc, #8]	; (80948 <sysclk_init+0x40>)
   80940:	4798      	blx	r3
   80942:	bd10      	pop	{r4, pc}
   80944:	0501bd00 	.word	0x0501bd00
   80948:	200700a5 	.word	0x200700a5
   8094c:	00080d11 	.word	0x00080d11
   80950:	00080d65 	.word	0x00080d65
   80954:	00080d75 	.word	0x00080d75
   80958:	200d3f01 	.word	0x200d3f01
   8095c:	400e0600 	.word	0x400e0600
   80960:	00080d85 	.word	0x00080d85
   80964:	00080cad 	.word	0x00080cad
   80968:	00080ea1 	.word	0x00080ea1

0008096c <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   8096c:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   8096e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80972:	4b16      	ldr	r3, [pc, #88]	; (809cc <board_init+0x60>)
   80974:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80976:	200b      	movs	r0, #11
   80978:	4c15      	ldr	r4, [pc, #84]	; (809d0 <board_init+0x64>)
   8097a:	47a0      	blx	r4
   8097c:	200c      	movs	r0, #12
   8097e:	47a0      	blx	r4
   80980:	200d      	movs	r0, #13
   80982:	47a0      	blx	r4
   80984:	200e      	movs	r0, #14
   80986:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80988:	203b      	movs	r0, #59	; 0x3b
   8098a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8098e:	4c11      	ldr	r4, [pc, #68]	; (809d4 <board_init+0x68>)
   80990:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80992:	2055      	movs	r0, #85	; 0x55
   80994:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80998:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8099a:	2056      	movs	r0, #86	; 0x56
   8099c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   809a0:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   809a2:	2068      	movs	r0, #104	; 0x68
   809a4:	490c      	ldr	r1, [pc, #48]	; (809d8 <board_init+0x6c>)
   809a6:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   809a8:	205c      	movs	r0, #92	; 0x5c
   809aa:	490c      	ldr	r1, [pc, #48]	; (809dc <board_init+0x70>)
   809ac:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   809ae:	480c      	ldr	r0, [pc, #48]	; (809e0 <board_init+0x74>)
   809b0:	f44f 7140 	mov.w	r1, #768	; 0x300
   809b4:	4a0b      	ldr	r2, [pc, #44]	; (809e4 <board_init+0x78>)
   809b6:	4b0c      	ldr	r3, [pc, #48]	; (809e8 <board_init+0x7c>)
   809b8:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   809ba:	202b      	movs	r0, #43	; 0x2b
   809bc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809c0:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   809c2:	202a      	movs	r0, #42	; 0x2a
   809c4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809c8:	47a0      	blx	r4
   809ca:	bd10      	pop	{r4, pc}
   809cc:	400e1a50 	.word	0x400e1a50
   809d0:	00080d95 	.word	0x00080d95
   809d4:	00080a91 	.word	0x00080a91
   809d8:	28000079 	.word	0x28000079
   809dc:	28000001 	.word	0x28000001
   809e0:	400e0e00 	.word	0x400e0e00
   809e4:	08000001 	.word	0x08000001
   809e8:	00080b65 	.word	0x00080b65

000809ec <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   809ec:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   809ee:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   809f2:	d016      	beq.n	80a22 <pio_set_peripheral+0x36>
   809f4:	d804      	bhi.n	80a00 <pio_set_peripheral+0x14>
   809f6:	b1c1      	cbz	r1, 80a2a <pio_set_peripheral+0x3e>
   809f8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   809fc:	d00a      	beq.n	80a14 <pio_set_peripheral+0x28>
   809fe:	e013      	b.n	80a28 <pio_set_peripheral+0x3c>
   80a00:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80a04:	d011      	beq.n	80a2a <pio_set_peripheral+0x3e>
   80a06:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80a0a:	d00e      	beq.n	80a2a <pio_set_peripheral+0x3e>
   80a0c:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80a10:	d10a      	bne.n	80a28 <pio_set_peripheral+0x3c>
   80a12:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80a14:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80a16:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80a18:	400b      	ands	r3, r1
   80a1a:	ea23 0302 	bic.w	r3, r3, r2
   80a1e:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80a20:	e002      	b.n	80a28 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   80a22:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80a24:	4313      	orrs	r3, r2
   80a26:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80a28:	6042      	str	r2, [r0, #4]
   80a2a:	4770      	bx	lr

00080a2c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80a2c:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a2e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80a32:	bf14      	ite	ne
   80a34:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a36:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80a38:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80a3c:	bf14      	ite	ne
   80a3e:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80a40:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80a42:	f012 0f02 	tst.w	r2, #2
   80a46:	d002      	beq.n	80a4e <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80a48:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80a4c:	e004      	b.n	80a58 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80a4e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80a52:	bf18      	it	ne
   80a54:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80a58:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80a5a:	6001      	str	r1, [r0, #0]
   80a5c:	4770      	bx	lr
   80a5e:	bf00      	nop

00080a60 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80a60:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80a62:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a64:	9c01      	ldr	r4, [sp, #4]
   80a66:	b10c      	cbz	r4, 80a6c <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80a68:	6641      	str	r1, [r0, #100]	; 0x64
   80a6a:	e000      	b.n	80a6e <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a6c:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80a6e:	b10b      	cbz	r3, 80a74 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80a70:	6501      	str	r1, [r0, #80]	; 0x50
   80a72:	e000      	b.n	80a76 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80a74:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80a76:	b10a      	cbz	r2, 80a7c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80a78:	6301      	str	r1, [r0, #48]	; 0x30
   80a7a:	e000      	b.n	80a7e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80a7c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80a7e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80a80:	6001      	str	r1, [r0, #0]
}
   80a82:	f85d 4b04 	ldr.w	r4, [sp], #4
   80a86:	4770      	bx	lr

00080a88 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80a88:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80a8a:	4770      	bx	lr

00080a8c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80a8c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80a8e:	4770      	bx	lr

00080a90 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80a90:	b570      	push	{r4, r5, r6, lr}
   80a92:	b082      	sub	sp, #8
   80a94:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80a96:	0944      	lsrs	r4, r0, #5
   80a98:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80a9c:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80aa0:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80aa2:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80aa6:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80aaa:	d030      	beq.n	80b0e <pio_configure_pin+0x7e>
   80aac:	d806      	bhi.n	80abc <pio_configure_pin+0x2c>
   80aae:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80ab2:	d00a      	beq.n	80aca <pio_configure_pin+0x3a>
   80ab4:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80ab8:	d018      	beq.n	80aec <pio_configure_pin+0x5c>
   80aba:	e049      	b.n	80b50 <pio_configure_pin+0xc0>
   80abc:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80ac0:	d030      	beq.n	80b24 <pio_configure_pin+0x94>
   80ac2:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80ac6:	d02d      	beq.n	80b24 <pio_configure_pin+0x94>
   80ac8:	e042      	b.n	80b50 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80aca:	f000 001f 	and.w	r0, r0, #31
   80ace:	2401      	movs	r4, #1
   80ad0:	4084      	lsls	r4, r0
   80ad2:	4630      	mov	r0, r6
   80ad4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80ad8:	4622      	mov	r2, r4
   80ada:	4b1f      	ldr	r3, [pc, #124]	; (80b58 <pio_configure_pin+0xc8>)
   80adc:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ade:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ae2:	bf14      	ite	ne
   80ae4:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ae6:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80ae8:	2001      	movs	r0, #1
   80aea:	e032      	b.n	80b52 <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80aec:	f000 001f 	and.w	r0, r0, #31
   80af0:	2401      	movs	r4, #1
   80af2:	4084      	lsls	r4, r0
   80af4:	4630      	mov	r0, r6
   80af6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80afa:	4622      	mov	r2, r4
   80afc:	4b16      	ldr	r3, [pc, #88]	; (80b58 <pio_configure_pin+0xc8>)
   80afe:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b00:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80b04:	bf14      	ite	ne
   80b06:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80b08:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80b0a:	2001      	movs	r0, #1
   80b0c:	e021      	b.n	80b52 <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80b0e:	f000 011f 	and.w	r1, r0, #31
   80b12:	2401      	movs	r4, #1
   80b14:	4630      	mov	r0, r6
   80b16:	fa04 f101 	lsl.w	r1, r4, r1
   80b1a:	462a      	mov	r2, r5
   80b1c:	4b0f      	ldr	r3, [pc, #60]	; (80b5c <pio_configure_pin+0xcc>)
   80b1e:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80b20:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80b22:	e016      	b.n	80b52 <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80b24:	f000 011f 	and.w	r1, r0, #31
   80b28:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80b2a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80b2e:	ea05 0304 	and.w	r3, r5, r4
   80b32:	9300      	str	r3, [sp, #0]
   80b34:	4630      	mov	r0, r6
   80b36:	fa04 f101 	lsl.w	r1, r4, r1
   80b3a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80b3e:	bf14      	ite	ne
   80b40:	2200      	movne	r2, #0
   80b42:	2201      	moveq	r2, #1
   80b44:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80b48:	4d05      	ldr	r5, [pc, #20]	; (80b60 <pio_configure_pin+0xd0>)
   80b4a:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80b4c:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80b4e:	e000      	b.n	80b52 <pio_configure_pin+0xc2>

	default:
		return 0;
   80b50:	2000      	movs	r0, #0
	}

	return 1;
}
   80b52:	b002      	add	sp, #8
   80b54:	bd70      	pop	{r4, r5, r6, pc}
   80b56:	bf00      	nop
   80b58:	000809ed 	.word	0x000809ed
   80b5c:	00080a2d 	.word	0x00080a2d
   80b60:	00080a61 	.word	0x00080a61

00080b64 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80b64:	b5f0      	push	{r4, r5, r6, r7, lr}
   80b66:	b083      	sub	sp, #12
   80b68:	4607      	mov	r7, r0
   80b6a:	460e      	mov	r6, r1
   80b6c:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80b6e:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80b72:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80b76:	d026      	beq.n	80bc6 <pio_configure_pin_group+0x62>
   80b78:	d806      	bhi.n	80b88 <pio_configure_pin_group+0x24>
   80b7a:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80b7e:	d00a      	beq.n	80b96 <pio_configure_pin_group+0x32>
   80b80:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80b84:	d013      	beq.n	80bae <pio_configure_pin_group+0x4a>
   80b86:	e034      	b.n	80bf2 <pio_configure_pin_group+0x8e>
   80b88:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80b8c:	d01f      	beq.n	80bce <pio_configure_pin_group+0x6a>
   80b8e:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80b92:	d01c      	beq.n	80bce <pio_configure_pin_group+0x6a>
   80b94:	e02d      	b.n	80bf2 <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80b96:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80b9a:	4632      	mov	r2, r6
   80b9c:	4b16      	ldr	r3, [pc, #88]	; (80bf8 <pio_configure_pin_group+0x94>)
   80b9e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ba0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ba4:	bf14      	ite	ne
   80ba6:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ba8:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80baa:	2001      	movs	r0, #1
   80bac:	e022      	b.n	80bf4 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80bae:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80bb2:	4632      	mov	r2, r6
   80bb4:	4b10      	ldr	r3, [pc, #64]	; (80bf8 <pio_configure_pin_group+0x94>)
   80bb6:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80bb8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80bbc:	bf14      	ite	ne
   80bbe:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80bc0:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80bc2:	2001      	movs	r0, #1
   80bc4:	e016      	b.n	80bf4 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80bc6:	4b0d      	ldr	r3, [pc, #52]	; (80bfc <pio_configure_pin_group+0x98>)
   80bc8:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80bca:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80bcc:	e012      	b.n	80bf4 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80bce:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80bd2:	f005 0301 	and.w	r3, r5, #1
   80bd6:	9300      	str	r3, [sp, #0]
   80bd8:	4638      	mov	r0, r7
   80bda:	4631      	mov	r1, r6
   80bdc:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80be0:	bf14      	ite	ne
   80be2:	2200      	movne	r2, #0
   80be4:	2201      	moveq	r2, #1
   80be6:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80bea:	4c05      	ldr	r4, [pc, #20]	; (80c00 <pio_configure_pin_group+0x9c>)
   80bec:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80bee:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80bf0:	e000      	b.n	80bf4 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80bf2:	2000      	movs	r0, #0
	}

	return 1;
}
   80bf4:	b003      	add	sp, #12
   80bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80bf8:	000809ed 	.word	0x000809ed
   80bfc:	00080a2d 	.word	0x00080a2d
   80c00:	00080a61 	.word	0x00080a61

00080c04 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80c08:	4604      	mov	r4, r0
   80c0a:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80c0c:	4b10      	ldr	r3, [pc, #64]	; (80c50 <pio_handler_process+0x4c>)
   80c0e:	4798      	blx	r3
   80c10:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80c12:	4620      	mov	r0, r4
   80c14:	4b0f      	ldr	r3, [pc, #60]	; (80c54 <pio_handler_process+0x50>)
   80c16:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80c18:	4005      	ands	r5, r0
   80c1a:	d017      	beq.n	80c4c <pio_handler_process+0x48>
   80c1c:	4f0e      	ldr	r7, [pc, #56]	; (80c58 <pio_handler_process+0x54>)
   80c1e:	f107 040c 	add.w	r4, r7, #12
   80c22:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80c24:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80c28:	42b3      	cmp	r3, r6
   80c2a:	d10a      	bne.n	80c42 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c2c:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80c30:	4229      	tst	r1, r5
   80c32:	d006      	beq.n	80c42 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c34:	6823      	ldr	r3, [r4, #0]
   80c36:	4630      	mov	r0, r6
   80c38:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80c3a:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80c3e:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80c42:	42bc      	cmp	r4, r7
   80c44:	d002      	beq.n	80c4c <pio_handler_process+0x48>
   80c46:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80c48:	2d00      	cmp	r5, #0
   80c4a:	d1eb      	bne.n	80c24 <pio_handler_process+0x20>
   80c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80c50:	00080a89 	.word	0x00080a89
   80c54:	00080a8d 	.word	0x00080a8d
   80c58:	20070a30 	.word	0x20070a30

00080c5c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80c5c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80c5e:	4802      	ldr	r0, [pc, #8]	; (80c68 <PIOA_Handler+0xc>)
   80c60:	210b      	movs	r1, #11
   80c62:	4b02      	ldr	r3, [pc, #8]	; (80c6c <PIOA_Handler+0x10>)
   80c64:	4798      	blx	r3
   80c66:	bd08      	pop	{r3, pc}
   80c68:	400e0e00 	.word	0x400e0e00
   80c6c:	00080c05 	.word	0x00080c05

00080c70 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80c70:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80c72:	4802      	ldr	r0, [pc, #8]	; (80c7c <PIOB_Handler+0xc>)
   80c74:	210c      	movs	r1, #12
   80c76:	4b02      	ldr	r3, [pc, #8]	; (80c80 <PIOB_Handler+0x10>)
   80c78:	4798      	blx	r3
   80c7a:	bd08      	pop	{r3, pc}
   80c7c:	400e1000 	.word	0x400e1000
   80c80:	00080c05 	.word	0x00080c05

00080c84 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80c84:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80c86:	4802      	ldr	r0, [pc, #8]	; (80c90 <PIOC_Handler+0xc>)
   80c88:	210d      	movs	r1, #13
   80c8a:	4b02      	ldr	r3, [pc, #8]	; (80c94 <PIOC_Handler+0x10>)
   80c8c:	4798      	blx	r3
   80c8e:	bd08      	pop	{r3, pc}
   80c90:	400e1200 	.word	0x400e1200
   80c94:	00080c05 	.word	0x00080c05

00080c98 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80c98:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80c9a:	4802      	ldr	r0, [pc, #8]	; (80ca4 <PIOD_Handler+0xc>)
   80c9c:	210e      	movs	r1, #14
   80c9e:	4b02      	ldr	r3, [pc, #8]	; (80ca8 <PIOD_Handler+0x10>)
   80ca0:	4798      	blx	r3
   80ca2:	bd08      	pop	{r3, pc}
   80ca4:	400e1400 	.word	0x400e1400
   80ca8:	00080c05 	.word	0x00080c05

00080cac <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80cac:	4b17      	ldr	r3, [pc, #92]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80cb0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80cb4:	4310      	orrs	r0, r2
   80cb6:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cb8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80cba:	f013 0f08 	tst.w	r3, #8
   80cbe:	d109      	bne.n	80cd4 <pmc_switch_mck_to_pllack+0x28>
   80cc0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cc4:	4911      	ldr	r1, [pc, #68]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cc6:	e001      	b.n	80ccc <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80cc8:	3b01      	subs	r3, #1
   80cca:	d019      	beq.n	80d00 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80ccc:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cce:	f012 0f08 	tst.w	r2, #8
   80cd2:	d0f9      	beq.n	80cc8 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80cd4:	4b0d      	ldr	r3, [pc, #52]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80cd8:	f022 0203 	bic.w	r2, r2, #3
   80cdc:	f042 0202 	orr.w	r2, r2, #2
   80ce0:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80ce2:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80ce4:	f010 0008 	ands.w	r0, r0, #8
   80ce8:	d10c      	bne.n	80d04 <pmc_switch_mck_to_pllack+0x58>
   80cea:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cee:	4907      	ldr	r1, [pc, #28]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cf0:	e001      	b.n	80cf6 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80cf2:	3b01      	subs	r3, #1
   80cf4:	d008      	beq.n	80d08 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cf6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cf8:	f012 0f08 	tst.w	r2, #8
   80cfc:	d0f9      	beq.n	80cf2 <pmc_switch_mck_to_pllack+0x46>
   80cfe:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80d00:	2001      	movs	r0, #1
   80d02:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80d04:	2000      	movs	r0, #0
   80d06:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80d08:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80d0a:	4770      	bx	lr
   80d0c:	400e0600 	.word	0x400e0600

00080d10 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80d10:	b138      	cbz	r0, 80d22 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d12:	4911      	ldr	r1, [pc, #68]	; (80d58 <pmc_switch_mainck_to_xtal+0x48>)
   80d14:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80d16:	4a11      	ldr	r2, [pc, #68]	; (80d5c <pmc_switch_mainck_to_xtal+0x4c>)
   80d18:	401a      	ands	r2, r3
   80d1a:	4b11      	ldr	r3, [pc, #68]	; (80d60 <pmc_switch_mainck_to_xtal+0x50>)
   80d1c:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d1e:	620b      	str	r3, [r1, #32]
   80d20:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d22:	4a0d      	ldr	r2, [pc, #52]	; (80d58 <pmc_switch_mainck_to_xtal+0x48>)
   80d24:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80d26:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80d2a:	f023 0303 	bic.w	r3, r3, #3
   80d2e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80d32:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80d36:	0209      	lsls	r1, r1, #8
   80d38:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80d3a:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d3c:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80d3e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80d40:	f013 0f01 	tst.w	r3, #1
   80d44:	d0fb      	beq.n	80d3e <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80d46:	4a04      	ldr	r2, [pc, #16]	; (80d58 <pmc_switch_mainck_to_xtal+0x48>)
   80d48:	6a13      	ldr	r3, [r2, #32]
   80d4a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80d4e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80d52:	6213      	str	r3, [r2, #32]
   80d54:	4770      	bx	lr
   80d56:	bf00      	nop
   80d58:	400e0600 	.word	0x400e0600
   80d5c:	fec8fffc 	.word	0xfec8fffc
   80d60:	01370002 	.word	0x01370002

00080d64 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80d64:	4b02      	ldr	r3, [pc, #8]	; (80d70 <pmc_osc_is_ready_mainck+0xc>)
   80d66:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d68:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80d6c:	4770      	bx	lr
   80d6e:	bf00      	nop
   80d70:	400e0600 	.word	0x400e0600

00080d74 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80d74:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80d78:	4b01      	ldr	r3, [pc, #4]	; (80d80 <pmc_disable_pllack+0xc>)
   80d7a:	629a      	str	r2, [r3, #40]	; 0x28
   80d7c:	4770      	bx	lr
   80d7e:	bf00      	nop
   80d80:	400e0600 	.word	0x400e0600

00080d84 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80d84:	4b02      	ldr	r3, [pc, #8]	; (80d90 <pmc_is_locked_pllack+0xc>)
   80d86:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d88:	f000 0002 	and.w	r0, r0, #2
   80d8c:	4770      	bx	lr
   80d8e:	bf00      	nop
   80d90:	400e0600 	.word	0x400e0600

00080d94 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80d94:	282c      	cmp	r0, #44	; 0x2c
   80d96:	d820      	bhi.n	80dda <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80d98:	281f      	cmp	r0, #31
   80d9a:	d80d      	bhi.n	80db8 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80d9c:	4b12      	ldr	r3, [pc, #72]	; (80de8 <pmc_enable_periph_clk+0x54>)
   80d9e:	699a      	ldr	r2, [r3, #24]
   80da0:	2301      	movs	r3, #1
   80da2:	4083      	lsls	r3, r0
   80da4:	401a      	ands	r2, r3
   80da6:	4293      	cmp	r3, r2
   80da8:	d019      	beq.n	80dde <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80daa:	2301      	movs	r3, #1
   80dac:	fa03 f000 	lsl.w	r0, r3, r0
   80db0:	4b0d      	ldr	r3, [pc, #52]	; (80de8 <pmc_enable_periph_clk+0x54>)
   80db2:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80db4:	2000      	movs	r0, #0
   80db6:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80db8:	4b0b      	ldr	r3, [pc, #44]	; (80de8 <pmc_enable_periph_clk+0x54>)
   80dba:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   80dbe:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80dc0:	2301      	movs	r3, #1
   80dc2:	4083      	lsls	r3, r0
   80dc4:	401a      	ands	r2, r3
   80dc6:	4293      	cmp	r3, r2
   80dc8:	d00b      	beq.n	80de2 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80dca:	2301      	movs	r3, #1
   80dcc:	fa03 f000 	lsl.w	r0, r3, r0
   80dd0:	4b05      	ldr	r3, [pc, #20]	; (80de8 <pmc_enable_periph_clk+0x54>)
   80dd2:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80dd6:	2000      	movs	r0, #0
   80dd8:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80dda:	2001      	movs	r0, #1
   80ddc:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80dde:	2000      	movs	r0, #0
   80de0:	4770      	bx	lr
   80de2:	2000      	movs	r0, #0
}
   80de4:	4770      	bx	lr
   80de6:	bf00      	nop
   80de8:	400e0600 	.word	0x400e0600

00080dec <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80dec:	e7fe      	b.n	80dec <Dummy_Handler>
   80dee:	bf00      	nop

00080df0 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80df0:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80df2:	4b1e      	ldr	r3, [pc, #120]	; (80e6c <Reset_Handler+0x7c>)
   80df4:	4a1e      	ldr	r2, [pc, #120]	; (80e70 <Reset_Handler+0x80>)
   80df6:	429a      	cmp	r2, r3
   80df8:	d003      	beq.n	80e02 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80dfa:	4b1e      	ldr	r3, [pc, #120]	; (80e74 <Reset_Handler+0x84>)
   80dfc:	4a1b      	ldr	r2, [pc, #108]	; (80e6c <Reset_Handler+0x7c>)
   80dfe:	429a      	cmp	r2, r3
   80e00:	d304      	bcc.n	80e0c <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e02:	4b1d      	ldr	r3, [pc, #116]	; (80e78 <Reset_Handler+0x88>)
   80e04:	4a1d      	ldr	r2, [pc, #116]	; (80e7c <Reset_Handler+0x8c>)
   80e06:	429a      	cmp	r2, r3
   80e08:	d30f      	bcc.n	80e2a <Reset_Handler+0x3a>
   80e0a:	e01a      	b.n	80e42 <Reset_Handler+0x52>
   80e0c:	4b1c      	ldr	r3, [pc, #112]	; (80e80 <Reset_Handler+0x90>)
   80e0e:	4c1d      	ldr	r4, [pc, #116]	; (80e84 <Reset_Handler+0x94>)
   80e10:	1ae4      	subs	r4, r4, r3
   80e12:	f024 0403 	bic.w	r4, r4, #3
   80e16:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e18:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80e1a:	4814      	ldr	r0, [pc, #80]	; (80e6c <Reset_Handler+0x7c>)
   80e1c:	4914      	ldr	r1, [pc, #80]	; (80e70 <Reset_Handler+0x80>)
   80e1e:	585a      	ldr	r2, [r3, r1]
   80e20:	501a      	str	r2, [r3, r0]
   80e22:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e24:	42a3      	cmp	r3, r4
   80e26:	d1fa      	bne.n	80e1e <Reset_Handler+0x2e>
   80e28:	e7eb      	b.n	80e02 <Reset_Handler+0x12>
   80e2a:	4b17      	ldr	r3, [pc, #92]	; (80e88 <Reset_Handler+0x98>)
   80e2c:	4917      	ldr	r1, [pc, #92]	; (80e8c <Reset_Handler+0x9c>)
   80e2e:	1ac9      	subs	r1, r1, r3
   80e30:	f021 0103 	bic.w	r1, r1, #3
   80e34:	1d1a      	adds	r2, r3, #4
   80e36:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80e38:	2200      	movs	r2, #0
   80e3a:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e3e:	428b      	cmp	r3, r1
   80e40:	d1fb      	bne.n	80e3a <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80e42:	4a13      	ldr	r2, [pc, #76]	; (80e90 <Reset_Handler+0xa0>)
   80e44:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80e48:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80e4c:	4911      	ldr	r1, [pc, #68]	; (80e94 <Reset_Handler+0xa4>)
   80e4e:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80e50:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80e54:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80e58:	d203      	bcs.n	80e62 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80e5a:	688a      	ldr	r2, [r1, #8]
   80e5c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80e60:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80e62:	4b0d      	ldr	r3, [pc, #52]	; (80e98 <Reset_Handler+0xa8>)
   80e64:	4798      	blx	r3

	/* Branch to main function */
	main();
   80e66:	4b0d      	ldr	r3, [pc, #52]	; (80e9c <Reset_Handler+0xac>)
   80e68:	4798      	blx	r3
   80e6a:	e7fe      	b.n	80e6a <Reset_Handler+0x7a>
   80e6c:	20070000 	.word	0x20070000
   80e70:	00085d10 	.word	0x00085d10
   80e74:	200709ec 	.word	0x200709ec
   80e78:	20070adc 	.word	0x20070adc
   80e7c:	200709ec 	.word	0x200709ec
   80e80:	20070004 	.word	0x20070004
   80e84:	200709ef 	.word	0x200709ef
   80e88:	200709e8 	.word	0x200709e8
   80e8c:	20070ad7 	.word	0x20070ad7
   80e90:	00080000 	.word	0x00080000
   80e94:	e000ed00 	.word	0xe000ed00
   80e98:	00081035 	.word	0x00081035
   80e9c:	00080ff1 	.word	0x00080ff1

00080ea0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80ea0:	4b3e      	ldr	r3, [pc, #248]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80ea2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80ea4:	f003 0303 	and.w	r3, r3, #3
   80ea8:	2b03      	cmp	r3, #3
   80eaa:	d85f      	bhi.n	80f6c <SystemCoreClockUpdate+0xcc>
   80eac:	e8df f003 	tbb	[pc, r3]
   80eb0:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80eb4:	4b3a      	ldr	r3, [pc, #232]	; (80fa0 <SystemCoreClockUpdate+0x100>)
   80eb6:	695b      	ldr	r3, [r3, #20]
   80eb8:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80ebc:	bf14      	ite	ne
   80ebe:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80ec2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80ec6:	4b37      	ldr	r3, [pc, #220]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80ec8:	601a      	str	r2, [r3, #0]
   80eca:	e04f      	b.n	80f6c <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80ecc:	4b33      	ldr	r3, [pc, #204]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80ece:	6a1b      	ldr	r3, [r3, #32]
   80ed0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80ed4:	d003      	beq.n	80ede <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80ed6:	4a34      	ldr	r2, [pc, #208]	; (80fa8 <SystemCoreClockUpdate+0x108>)
   80ed8:	4b32      	ldr	r3, [pc, #200]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80eda:	601a      	str	r2, [r3, #0]
   80edc:	e046      	b.n	80f6c <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80ede:	4a33      	ldr	r2, [pc, #204]	; (80fac <SystemCoreClockUpdate+0x10c>)
   80ee0:	4b30      	ldr	r3, [pc, #192]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80ee2:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80ee4:	4b2d      	ldr	r3, [pc, #180]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80ee6:	6a1b      	ldr	r3, [r3, #32]
   80ee8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80eec:	2b10      	cmp	r3, #16
   80eee:	d002      	beq.n	80ef6 <SystemCoreClockUpdate+0x56>
   80ef0:	2b20      	cmp	r3, #32
   80ef2:	d004      	beq.n	80efe <SystemCoreClockUpdate+0x5e>
   80ef4:	e03a      	b.n	80f6c <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80ef6:	4a2e      	ldr	r2, [pc, #184]	; (80fb0 <SystemCoreClockUpdate+0x110>)
   80ef8:	4b2a      	ldr	r3, [pc, #168]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80efa:	601a      	str	r2, [r3, #0]
				break;
   80efc:	e036      	b.n	80f6c <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80efe:	4a2a      	ldr	r2, [pc, #168]	; (80fa8 <SystemCoreClockUpdate+0x108>)
   80f00:	4b28      	ldr	r3, [pc, #160]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f02:	601a      	str	r2, [r3, #0]
				break;
   80f04:	e032      	b.n	80f6c <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80f06:	4b25      	ldr	r3, [pc, #148]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80f08:	6a1b      	ldr	r3, [r3, #32]
   80f0a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80f0e:	d003      	beq.n	80f18 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80f10:	4a25      	ldr	r2, [pc, #148]	; (80fa8 <SystemCoreClockUpdate+0x108>)
   80f12:	4b24      	ldr	r3, [pc, #144]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f14:	601a      	str	r2, [r3, #0]
   80f16:	e012      	b.n	80f3e <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80f18:	4a24      	ldr	r2, [pc, #144]	; (80fac <SystemCoreClockUpdate+0x10c>)
   80f1a:	4b22      	ldr	r3, [pc, #136]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f1c:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80f1e:	4b1f      	ldr	r3, [pc, #124]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80f20:	6a1b      	ldr	r3, [r3, #32]
   80f22:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f26:	2b10      	cmp	r3, #16
   80f28:	d002      	beq.n	80f30 <SystemCoreClockUpdate+0x90>
   80f2a:	2b20      	cmp	r3, #32
   80f2c:	d004      	beq.n	80f38 <SystemCoreClockUpdate+0x98>
   80f2e:	e006      	b.n	80f3e <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80f30:	4a1f      	ldr	r2, [pc, #124]	; (80fb0 <SystemCoreClockUpdate+0x110>)
   80f32:	4b1c      	ldr	r3, [pc, #112]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f34:	601a      	str	r2, [r3, #0]
				break;
   80f36:	e002      	b.n	80f3e <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80f38:	4a1b      	ldr	r2, [pc, #108]	; (80fa8 <SystemCoreClockUpdate+0x108>)
   80f3a:	4b1a      	ldr	r3, [pc, #104]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f3c:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80f3e:	4b17      	ldr	r3, [pc, #92]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80f40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f42:	f003 0303 	and.w	r3, r3, #3
   80f46:	2b02      	cmp	r3, #2
   80f48:	d10d      	bne.n	80f66 <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f4a:	4b14      	ldr	r3, [pc, #80]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80f4c:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f4e:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80f50:	4b14      	ldr	r3, [pc, #80]	; (80fa4 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f52:	f3c0 400a 	ubfx	r0, r0, #16, #11
   80f56:	681a      	ldr	r2, [r3, #0]
   80f58:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f5c:	b2c9      	uxtb	r1, r1
   80f5e:	fbb2 f2f1 	udiv	r2, r2, r1
   80f62:	601a      	str	r2, [r3, #0]
   80f64:	e002      	b.n	80f6c <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80f66:	4a13      	ldr	r2, [pc, #76]	; (80fb4 <SystemCoreClockUpdate+0x114>)
   80f68:	4b0e      	ldr	r3, [pc, #56]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f6a:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80f6c:	4b0b      	ldr	r3, [pc, #44]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80f6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f70:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f74:	2b70      	cmp	r3, #112	; 0x70
   80f76:	d107      	bne.n	80f88 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80f78:	4b0a      	ldr	r3, [pc, #40]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f7a:	681a      	ldr	r2, [r3, #0]
   80f7c:	490e      	ldr	r1, [pc, #56]	; (80fb8 <SystemCoreClockUpdate+0x118>)
   80f7e:	fba1 0202 	umull	r0, r2, r1, r2
   80f82:	0852      	lsrs	r2, r2, #1
   80f84:	601a      	str	r2, [r3, #0]
   80f86:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80f88:	4b04      	ldr	r3, [pc, #16]	; (80f9c <SystemCoreClockUpdate+0xfc>)
   80f8a:	6b19      	ldr	r1, [r3, #48]	; 0x30
   80f8c:	4b05      	ldr	r3, [pc, #20]	; (80fa4 <SystemCoreClockUpdate+0x104>)
   80f8e:	f3c1 1102 	ubfx	r1, r1, #4, #3
   80f92:	681a      	ldr	r2, [r3, #0]
   80f94:	40ca      	lsrs	r2, r1
   80f96:	601a      	str	r2, [r3, #0]
   80f98:	4770      	bx	lr
   80f9a:	bf00      	nop
   80f9c:	400e0600 	.word	0x400e0600
   80fa0:	400e1a10 	.word	0x400e1a10
   80fa4:	20070170 	.word	0x20070170
   80fa8:	00b71b00 	.word	0x00b71b00
   80fac:	003d0900 	.word	0x003d0900
   80fb0:	007a1200 	.word	0x007a1200
   80fb4:	0e4e1c00 	.word	0x0e4e1c00
   80fb8:	aaaaaaab 	.word	0xaaaaaaab

00080fbc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80fbc:	4b09      	ldr	r3, [pc, #36]	; (80fe4 <_sbrk+0x28>)
   80fbe:	681b      	ldr	r3, [r3, #0]
   80fc0:	b913      	cbnz	r3, 80fc8 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80fc2:	4a09      	ldr	r2, [pc, #36]	; (80fe8 <_sbrk+0x2c>)
   80fc4:	4b07      	ldr	r3, [pc, #28]	; (80fe4 <_sbrk+0x28>)
   80fc6:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80fc8:	4b06      	ldr	r3, [pc, #24]	; (80fe4 <_sbrk+0x28>)
   80fca:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80fcc:	181a      	adds	r2, r3, r0
   80fce:	4907      	ldr	r1, [pc, #28]	; (80fec <_sbrk+0x30>)
   80fd0:	4291      	cmp	r1, r2
   80fd2:	db04      	blt.n	80fde <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80fd4:	4610      	mov	r0, r2
   80fd6:	4a03      	ldr	r2, [pc, #12]	; (80fe4 <_sbrk+0x28>)
   80fd8:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80fda:	4618      	mov	r0, r3
   80fdc:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80fde:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80fe2:	4770      	bx	lr
   80fe4:	20070aa0 	.word	0x20070aa0
   80fe8:	20072ae0 	.word	0x20072ae0
   80fec:	20087ffc 	.word	0x20087ffc

00080ff0 <main>:
#include "io_control/dac.h"

#define UART_BAUDRATE	115200		//Baud must be the same in Matlab

int main (void)
{
   80ff0:	b508      	push	{r3, lr}
	sysclk_init();
   80ff2:	4b09      	ldr	r3, [pc, #36]	; (81018 <main+0x28>)
   80ff4:	4798      	blx	r3
	board_init();
   80ff6:	4b09      	ldr	r3, [pc, #36]	; (8101c <main+0x2c>)
   80ff8:	4798      	blx	r3
	uart_config((uint32_t)UART_BAUDRATE);
   80ffa:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80ffe:	4b08      	ldr	r3, [pc, #32]	; (81020 <main+0x30>)
   81000:	4798      	blx	r3
	init_adc();
   81002:	4b08      	ldr	r3, [pc, #32]	; (81024 <main+0x34>)
   81004:	4798      	blx	r3
	pwm_setup();
   81006:	4b08      	ldr	r3, [pc, #32]	; (81028 <main+0x38>)
   81008:	4798      	blx	r3
	dac_setup();
   8100a:	4b08      	ldr	r3, [pc, #32]	; (8102c <main+0x3c>)
   8100c:	4798      	blx	r3
	start_coms();					//Run state machine
   8100e:	4b08      	ldr	r3, [pc, #32]	; (81030 <main+0x40>)
   81010:	4798      	blx	r3
	
	
}
   81012:	2000      	movs	r0, #0
   81014:	bd08      	pop	{r3, pc}
   81016:	bf00      	nop
   81018:	00080909 	.word	0x00080909
   8101c:	0008096d 	.word	0x0008096d
   81020:	00080331 	.word	0x00080331
   81024:	0008086d 	.word	0x0008086d
   81028:	0008021d 	.word	0x0008021d
   8102c:	000802b1 	.word	0x000802b1
   81030:	00080535 	.word	0x00080535

00081034 <__libc_init_array>:
   81034:	b570      	push	{r4, r5, r6, lr}
   81036:	4e0f      	ldr	r6, [pc, #60]	; (81074 <__libc_init_array+0x40>)
   81038:	4d0f      	ldr	r5, [pc, #60]	; (81078 <__libc_init_array+0x44>)
   8103a:	1b76      	subs	r6, r6, r5
   8103c:	10b6      	asrs	r6, r6, #2
   8103e:	d007      	beq.n	81050 <__libc_init_array+0x1c>
   81040:	3d04      	subs	r5, #4
   81042:	2400      	movs	r4, #0
   81044:	3401      	adds	r4, #1
   81046:	f855 3f04 	ldr.w	r3, [r5, #4]!
   8104a:	4798      	blx	r3
   8104c:	42a6      	cmp	r6, r4
   8104e:	d1f9      	bne.n	81044 <__libc_init_array+0x10>
   81050:	4e0a      	ldr	r6, [pc, #40]	; (8107c <__libc_init_array+0x48>)
   81052:	4d0b      	ldr	r5, [pc, #44]	; (81080 <__libc_init_array+0x4c>)
   81054:	f004 fe46 	bl	85ce4 <_init>
   81058:	1b76      	subs	r6, r6, r5
   8105a:	10b6      	asrs	r6, r6, #2
   8105c:	d008      	beq.n	81070 <__libc_init_array+0x3c>
   8105e:	3d04      	subs	r5, #4
   81060:	2400      	movs	r4, #0
   81062:	3401      	adds	r4, #1
   81064:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81068:	4798      	blx	r3
   8106a:	42a6      	cmp	r6, r4
   8106c:	d1f9      	bne.n	81062 <__libc_init_array+0x2e>
   8106e:	bd70      	pop	{r4, r5, r6, pc}
   81070:	bd70      	pop	{r4, r5, r6, pc}
   81072:	bf00      	nop
   81074:	00085cf0 	.word	0x00085cf0
   81078:	00085cf0 	.word	0x00085cf0
   8107c:	00085cf8 	.word	0x00085cf8
   81080:	00085cf0 	.word	0x00085cf0

00081084 <memset>:
   81084:	b4f0      	push	{r4, r5, r6, r7}
   81086:	0784      	lsls	r4, r0, #30
   81088:	d043      	beq.n	81112 <memset+0x8e>
   8108a:	1e54      	subs	r4, r2, #1
   8108c:	2a00      	cmp	r2, #0
   8108e:	d03e      	beq.n	8110e <memset+0x8a>
   81090:	b2cd      	uxtb	r5, r1
   81092:	4603      	mov	r3, r0
   81094:	e003      	b.n	8109e <memset+0x1a>
   81096:	1e62      	subs	r2, r4, #1
   81098:	2c00      	cmp	r4, #0
   8109a:	d038      	beq.n	8110e <memset+0x8a>
   8109c:	4614      	mov	r4, r2
   8109e:	f803 5b01 	strb.w	r5, [r3], #1
   810a2:	079a      	lsls	r2, r3, #30
   810a4:	d1f7      	bne.n	81096 <memset+0x12>
   810a6:	2c03      	cmp	r4, #3
   810a8:	d92a      	bls.n	81100 <memset+0x7c>
   810aa:	b2cd      	uxtb	r5, r1
   810ac:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   810b0:	2c0f      	cmp	r4, #15
   810b2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   810b6:	d915      	bls.n	810e4 <memset+0x60>
   810b8:	f1a4 0710 	sub.w	r7, r4, #16
   810bc:	093f      	lsrs	r7, r7, #4
   810be:	f103 0610 	add.w	r6, r3, #16
   810c2:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   810c6:	461a      	mov	r2, r3
   810c8:	6015      	str	r5, [r2, #0]
   810ca:	6055      	str	r5, [r2, #4]
   810cc:	6095      	str	r5, [r2, #8]
   810ce:	60d5      	str	r5, [r2, #12]
   810d0:	3210      	adds	r2, #16
   810d2:	42b2      	cmp	r2, r6
   810d4:	d1f8      	bne.n	810c8 <memset+0x44>
   810d6:	f004 040f 	and.w	r4, r4, #15
   810da:	3701      	adds	r7, #1
   810dc:	2c03      	cmp	r4, #3
   810de:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   810e2:	d90d      	bls.n	81100 <memset+0x7c>
   810e4:	461e      	mov	r6, r3
   810e6:	4622      	mov	r2, r4
   810e8:	3a04      	subs	r2, #4
   810ea:	2a03      	cmp	r2, #3
   810ec:	f846 5b04 	str.w	r5, [r6], #4
   810f0:	d8fa      	bhi.n	810e8 <memset+0x64>
   810f2:	1f22      	subs	r2, r4, #4
   810f4:	f022 0203 	bic.w	r2, r2, #3
   810f8:	3204      	adds	r2, #4
   810fa:	4413      	add	r3, r2
   810fc:	f004 0403 	and.w	r4, r4, #3
   81100:	b12c      	cbz	r4, 8110e <memset+0x8a>
   81102:	b2c9      	uxtb	r1, r1
   81104:	441c      	add	r4, r3
   81106:	f803 1b01 	strb.w	r1, [r3], #1
   8110a:	42a3      	cmp	r3, r4
   8110c:	d1fb      	bne.n	81106 <memset+0x82>
   8110e:	bcf0      	pop	{r4, r5, r6, r7}
   81110:	4770      	bx	lr
   81112:	4614      	mov	r4, r2
   81114:	4603      	mov	r3, r0
   81116:	e7c6      	b.n	810a6 <memset+0x22>

00081118 <sprintf>:
   81118:	b40e      	push	{r1, r2, r3}
   8111a:	b5f0      	push	{r4, r5, r6, r7, lr}
   8111c:	b09c      	sub	sp, #112	; 0x70
   8111e:	ac21      	add	r4, sp, #132	; 0x84
   81120:	f854 2b04 	ldr.w	r2, [r4], #4
   81124:	490e      	ldr	r1, [pc, #56]	; (81160 <sprintf+0x48>)
   81126:	4606      	mov	r6, r0
   81128:	4623      	mov	r3, r4
   8112a:	f44f 7e02 	mov.w	lr, #520	; 0x208
   8112e:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   81132:	6808      	ldr	r0, [r1, #0]
   81134:	f64f 77ff 	movw	r7, #65535	; 0xffff
   81138:	a902      	add	r1, sp, #8
   8113a:	9602      	str	r6, [sp, #8]
   8113c:	9606      	str	r6, [sp, #24]
   8113e:	9401      	str	r4, [sp, #4]
   81140:	f8ad e014 	strh.w	lr, [sp, #20]
   81144:	9504      	str	r5, [sp, #16]
   81146:	9507      	str	r5, [sp, #28]
   81148:	f8ad 7016 	strh.w	r7, [sp, #22]
   8114c:	f000 f83a 	bl	811c4 <_svfprintf_r>
   81150:	9b02      	ldr	r3, [sp, #8]
   81152:	2200      	movs	r2, #0
   81154:	701a      	strb	r2, [r3, #0]
   81156:	b01c      	add	sp, #112	; 0x70
   81158:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8115c:	b003      	add	sp, #12
   8115e:	4770      	bx	lr
   81160:	200705a0 	.word	0x200705a0

00081164 <strlen>:
   81164:	f020 0103 	bic.w	r1, r0, #3
   81168:	f010 0003 	ands.w	r0, r0, #3
   8116c:	f1c0 0000 	rsb	r0, r0, #0
   81170:	f851 3b04 	ldr.w	r3, [r1], #4
   81174:	f100 0c04 	add.w	ip, r0, #4
   81178:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   8117c:	f06f 0200 	mvn.w	r2, #0
   81180:	bf1c      	itt	ne
   81182:	fa22 f20c 	lsrne.w	r2, r2, ip
   81186:	4313      	orrne	r3, r2
   81188:	f04f 0c01 	mov.w	ip, #1
   8118c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81190:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81194:	eba3 020c 	sub.w	r2, r3, ip
   81198:	ea22 0203 	bic.w	r2, r2, r3
   8119c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   811a0:	bf04      	itt	eq
   811a2:	f851 3b04 	ldreq.w	r3, [r1], #4
   811a6:	3004      	addeq	r0, #4
   811a8:	d0f4      	beq.n	81194 <strlen+0x30>
   811aa:	f013 0fff 	tst.w	r3, #255	; 0xff
   811ae:	bf1f      	itttt	ne
   811b0:	3001      	addne	r0, #1
   811b2:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   811b6:	3001      	addne	r0, #1
   811b8:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   811bc:	bf18      	it	ne
   811be:	3001      	addne	r0, #1
   811c0:	4770      	bx	lr
   811c2:	bf00      	nop

000811c4 <_svfprintf_r>:
   811c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   811c8:	b0c9      	sub	sp, #292	; 0x124
   811ca:	9310      	str	r3, [sp, #64]	; 0x40
   811cc:	910c      	str	r1, [sp, #48]	; 0x30
   811ce:	4691      	mov	r9, r2
   811d0:	900d      	str	r0, [sp, #52]	; 0x34
   811d2:	f002 fb5f 	bl	83894 <_localeconv_r>
   811d6:	6800      	ldr	r0, [r0, #0]
   811d8:	9015      	str	r0, [sp, #84]	; 0x54
   811da:	f7ff ffc3 	bl	81164 <strlen>
   811de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   811e0:	9018      	str	r0, [sp, #96]	; 0x60
   811e2:	89a3      	ldrh	r3, [r4, #12]
   811e4:	061e      	lsls	r6, r3, #24
   811e6:	d503      	bpl.n	811f0 <_svfprintf_r+0x2c>
   811e8:	6923      	ldr	r3, [r4, #16]
   811ea:	2b00      	cmp	r3, #0
   811ec:	f001 8081 	beq.w	822f2 <_svfprintf_r+0x112e>
   811f0:	ac38      	add	r4, sp, #224	; 0xe0
   811f2:	46a4      	mov	ip, r4
   811f4:	9408      	str	r4, [sp, #32]
   811f6:	942b      	str	r4, [sp, #172]	; 0xac
   811f8:	2500      	movs	r5, #0
   811fa:	2400      	movs	r4, #0
   811fc:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   81200:	2300      	movs	r3, #0
   81202:	9311      	str	r3, [sp, #68]	; 0x44
   81204:	932d      	str	r3, [sp, #180]	; 0xb4
   81206:	932c      	str	r3, [sp, #176]	; 0xb0
   81208:	931a      	str	r3, [sp, #104]	; 0x68
   8120a:	9319      	str	r3, [sp, #100]	; 0x64
   8120c:	930e      	str	r3, [sp, #56]	; 0x38
   8120e:	4666      	mov	r6, ip
   81210:	f899 3000 	ldrb.w	r3, [r9]
   81214:	2b00      	cmp	r3, #0
   81216:	f000 80f8 	beq.w	8140a <_svfprintf_r+0x246>
   8121a:	2b25      	cmp	r3, #37	; 0x25
   8121c:	f000 80f5 	beq.w	8140a <_svfprintf_r+0x246>
   81220:	f109 0201 	add.w	r2, r9, #1
   81224:	e001      	b.n	8122a <_svfprintf_r+0x66>
   81226:	2b25      	cmp	r3, #37	; 0x25
   81228:	d004      	beq.n	81234 <_svfprintf_r+0x70>
   8122a:	7813      	ldrb	r3, [r2, #0]
   8122c:	4614      	mov	r4, r2
   8122e:	3201      	adds	r2, #1
   81230:	2b00      	cmp	r3, #0
   81232:	d1f8      	bne.n	81226 <_svfprintf_r+0x62>
   81234:	ebc9 0504 	rsb	r5, r9, r4
   81238:	b17d      	cbz	r5, 8125a <_svfprintf_r+0x96>
   8123a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8123c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   8123e:	3301      	adds	r3, #1
   81240:	442a      	add	r2, r5
   81242:	2b07      	cmp	r3, #7
   81244:	f8c6 9000 	str.w	r9, [r6]
   81248:	6075      	str	r5, [r6, #4]
   8124a:	922d      	str	r2, [sp, #180]	; 0xb4
   8124c:	932c      	str	r3, [sp, #176]	; 0xb0
   8124e:	f300 80c2 	bgt.w	813d6 <_svfprintf_r+0x212>
   81252:	3608      	adds	r6, #8
   81254:	980e      	ldr	r0, [sp, #56]	; 0x38
   81256:	4428      	add	r0, r5
   81258:	900e      	str	r0, [sp, #56]	; 0x38
   8125a:	7823      	ldrb	r3, [r4, #0]
   8125c:	2b00      	cmp	r3, #0
   8125e:	f000 80c2 	beq.w	813e6 <_svfprintf_r+0x222>
   81262:	2300      	movs	r3, #0
   81264:	f894 8001 	ldrb.w	r8, [r4, #1]
   81268:	461a      	mov	r2, r3
   8126a:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   8126e:	930f      	str	r3, [sp, #60]	; 0x3c
   81270:	9309      	str	r3, [sp, #36]	; 0x24
   81272:	f104 0901 	add.w	r9, r4, #1
   81276:	f04f 34ff 	mov.w	r4, #4294967295
   8127a:	940a      	str	r4, [sp, #40]	; 0x28
   8127c:	f109 0901 	add.w	r9, r9, #1
   81280:	f1a8 0320 	sub.w	r3, r8, #32
   81284:	2b58      	cmp	r3, #88	; 0x58
   81286:	f200 83c5 	bhi.w	81a14 <_svfprintf_r+0x850>
   8128a:	e8df f013 	tbh	[pc, r3, lsl #1]
   8128e:	026a      	.short	0x026a
   81290:	03c303c3 	.word	0x03c303c3
   81294:	03c30271 	.word	0x03c30271
   81298:	03c303c3 	.word	0x03c303c3
   8129c:	03c303c3 	.word	0x03c303c3
   812a0:	031403c3 	.word	0x031403c3
   812a4:	03c30366 	.word	0x03c30366
   812a8:	00c0009d 	.word	0x00c0009d
   812ac:	027803c3 	.word	0x027803c3
   812b0:	027f027f 	.word	0x027f027f
   812b4:	027f027f 	.word	0x027f027f
   812b8:	027f027f 	.word	0x027f027f
   812bc:	027f027f 	.word	0x027f027f
   812c0:	03c3027f 	.word	0x03c3027f
   812c4:	03c303c3 	.word	0x03c303c3
   812c8:	03c303c3 	.word	0x03c303c3
   812cc:	03c303c3 	.word	0x03c303c3
   812d0:	03c303c3 	.word	0x03c303c3
   812d4:	029003c3 	.word	0x029003c3
   812d8:	03c30371 	.word	0x03c30371
   812dc:	03c30371 	.word	0x03c30371
   812e0:	03c303c3 	.word	0x03c303c3
   812e4:	036a03c3 	.word	0x036a03c3
   812e8:	03c303c3 	.word	0x03c303c3
   812ec:	03c30078 	.word	0x03c30078
   812f0:	03c303c3 	.word	0x03c303c3
   812f4:	03c303c3 	.word	0x03c303c3
   812f8:	03c30059 	.word	0x03c30059
   812fc:	02af03c3 	.word	0x02af03c3
   81300:	03c303c3 	.word	0x03c303c3
   81304:	03c303c3 	.word	0x03c303c3
   81308:	03c303c3 	.word	0x03c303c3
   8130c:	03c303c3 	.word	0x03c303c3
   81310:	03c303c3 	.word	0x03c303c3
   81314:	03480337 	.word	0x03480337
   81318:	03710371 	.word	0x03710371
   8131c:	02ff0371 	.word	0x02ff0371
   81320:	03c30348 	.word	0x03c30348
   81324:	030803c3 	.word	0x030803c3
   81328:	02c503c3 	.word	0x02c503c3
   8132c:	0320007c 	.word	0x0320007c
   81330:	03c303a3 	.word	0x03c303a3
   81334:	03c302d9 	.word	0x03c302d9
   81338:	03c3005f 	.word	0x03c3005f
   8133c:	00de03c3 	.word	0x00de03c3
   81340:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81344:	f04c 0c10 	orr.w	ip, ip, #16
   81348:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8134c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8134e:	06a2      	lsls	r2, r4, #26
   81350:	f100 8354 	bmi.w	819fc <_svfprintf_r+0x838>
   81354:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81356:	06e3      	lsls	r3, r4, #27
   81358:	f100 85bd 	bmi.w	81ed6 <_svfprintf_r+0xd12>
   8135c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81360:	f01c 0f40 	tst.w	ip, #64	; 0x40
   81364:	f000 85b7 	beq.w	81ed6 <_svfprintf_r+0xd12>
   81368:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8136c:	2500      	movs	r5, #0
   8136e:	f8bc 4000 	ldrh.w	r4, [ip]
   81372:	f10c 0c04 	add.w	ip, ip, #4
   81376:	2301      	movs	r3, #1
   81378:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   8137c:	e08c      	b.n	81498 <_svfprintf_r+0x2d4>
   8137e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81380:	f045 0510 	orr.w	r5, r5, #16
   81384:	9509      	str	r5, [sp, #36]	; 0x24
   81386:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8138a:	f01c 0320 	ands.w	r3, ip, #32
   8138e:	f040 832a 	bne.w	819e6 <_svfprintf_r+0x822>
   81392:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81396:	f01c 0210 	ands.w	r2, ip, #16
   8139a:	f040 85a4 	bne.w	81ee6 <_svfprintf_r+0xd22>
   8139e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   813a2:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
   813a6:	f000 859e 	beq.w	81ee6 <_svfprintf_r+0xd22>
   813aa:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   813ae:	4613      	mov	r3, r2
   813b0:	f8bc 4000 	ldrh.w	r4, [ip]
   813b4:	f10c 0c04 	add.w	ip, ip, #4
   813b8:	2500      	movs	r5, #0
   813ba:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   813be:	e06b      	b.n	81498 <_svfprintf_r+0x2d4>
   813c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   813c2:	9310      	str	r3, [sp, #64]	; 0x40
   813c4:	4264      	negs	r4, r4
   813c6:	940f      	str	r4, [sp, #60]	; 0x3c
   813c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   813ca:	f045 0504 	orr.w	r5, r5, #4
   813ce:	9509      	str	r5, [sp, #36]	; 0x24
   813d0:	f899 8000 	ldrb.w	r8, [r9]
   813d4:	e752      	b.n	8127c <_svfprintf_r+0xb8>
   813d6:	980d      	ldr	r0, [sp, #52]	; 0x34
   813d8:	990c      	ldr	r1, [sp, #48]	; 0x30
   813da:	aa2b      	add	r2, sp, #172	; 0xac
   813dc:	f003 fb48 	bl	84a70 <__ssprint_r>
   813e0:	b940      	cbnz	r0, 813f4 <_svfprintf_r+0x230>
   813e2:	ae38      	add	r6, sp, #224	; 0xe0
   813e4:	e736      	b.n	81254 <_svfprintf_r+0x90>
   813e6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   813e8:	b123      	cbz	r3, 813f4 <_svfprintf_r+0x230>
   813ea:	980d      	ldr	r0, [sp, #52]	; 0x34
   813ec:	990c      	ldr	r1, [sp, #48]	; 0x30
   813ee:	aa2b      	add	r2, sp, #172	; 0xac
   813f0:	f003 fb3e 	bl	84a70 <__ssprint_r>
   813f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   813f6:	980e      	ldr	r0, [sp, #56]	; 0x38
   813f8:	89a3      	ldrh	r3, [r4, #12]
   813fa:	f013 0f40 	tst.w	r3, #64	; 0x40
   813fe:	bf18      	it	ne
   81400:	f04f 30ff 	movne.w	r0, #4294967295
   81404:	b049      	add	sp, #292	; 0x124
   81406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8140a:	464c      	mov	r4, r9
   8140c:	e725      	b.n	8125a <_svfprintf_r+0x96>
   8140e:	f899 8000 	ldrb.w	r8, [r9]
   81412:	f109 0001 	add.w	r0, r9, #1
   81416:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   8141a:	f001 810c 	beq.w	82636 <_svfprintf_r+0x1472>
   8141e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81422:	2b09      	cmp	r3, #9
   81424:	bf98      	it	ls
   81426:	2100      	movls	r1, #0
   81428:	f201 806b 	bhi.w	82502 <_svfprintf_r+0x133e>
   8142c:	f810 8b01 	ldrb.w	r8, [r0], #1
   81430:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81434:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   81438:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   8143c:	2b09      	cmp	r3, #9
   8143e:	d9f5      	bls.n	8142c <_svfprintf_r+0x268>
   81440:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   81444:	910a      	str	r1, [sp, #40]	; 0x28
   81446:	4681      	mov	r9, r0
   81448:	e71a      	b.n	81280 <_svfprintf_r+0xbc>
   8144a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8144c:	4ca1      	ldr	r4, [pc, #644]	; (816d4 <_svfprintf_r+0x510>)
   8144e:	06af      	lsls	r7, r5, #26
   81450:	941a      	str	r4, [sp, #104]	; 0x68
   81452:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81456:	f140 81d1 	bpl.w	817fc <_svfprintf_r+0x638>
   8145a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8145e:	f10c 0307 	add.w	r3, ip, #7
   81462:	f023 0307 	bic.w	r3, r3, #7
   81466:	f103 0408 	add.w	r4, r3, #8
   8146a:	9410      	str	r4, [sp, #64]	; 0x40
   8146c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81470:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81474:	f01c 0f01 	tst.w	ip, #1
   81478:	f000 8462 	beq.w	81d40 <_svfprintf_r+0xb7c>
   8147c:	ea54 0005 	orrs.w	r0, r4, r5
   81480:	f000 845e 	beq.w	81d40 <_svfprintf_r+0xb7c>
   81484:	2330      	movs	r3, #48	; 0x30
   81486:	f04c 0c02 	orr.w	ip, ip, #2
   8148a:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   8148e:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   81492:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81496:	2302      	movs	r3, #2
   81498:	f04f 0a00 	mov.w	sl, #0
   8149c:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   814a0:	990a      	ldr	r1, [sp, #40]	; 0x28
   814a2:	2900      	cmp	r1, #0
   814a4:	db05      	blt.n	814b2 <_svfprintf_r+0x2ee>
   814a6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   814aa:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
   814ae:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   814b2:	ea54 0005 	orrs.w	r0, r4, r5
   814b6:	f040 82c5 	bne.w	81a44 <_svfprintf_r+0x880>
   814ba:	990a      	ldr	r1, [sp, #40]	; 0x28
   814bc:	2900      	cmp	r1, #0
   814be:	f040 82c1 	bne.w	81a44 <_svfprintf_r+0x880>
   814c2:	2b00      	cmp	r3, #0
   814c4:	f040 8438 	bne.w	81d38 <_svfprintf_r+0xb74>
   814c8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   814cc:	f01c 0f01 	tst.w	ip, #1
   814d0:	f000 8432 	beq.w	81d38 <_svfprintf_r+0xb74>
   814d4:	af48      	add	r7, sp, #288	; 0x120
   814d6:	2330      	movs	r3, #48	; 0x30
   814d8:	9d08      	ldr	r5, [sp, #32]
   814da:	f807 3d41 	strb.w	r3, [r7, #-65]!
   814de:	1bec      	subs	r4, r5, r7
   814e0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   814e4:	2500      	movs	r5, #0
   814e6:	4564      	cmp	r4, ip
   814e8:	bfa8      	it	ge
   814ea:	46a4      	movge	ip, r4
   814ec:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   814f0:	9514      	str	r5, [sp, #80]	; 0x50
   814f2:	f1ba 0f00 	cmp.w	sl, #0
   814f6:	d002      	beq.n	814fe <_svfprintf_r+0x33a>
   814f8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   814fa:	3501      	adds	r5, #1
   814fc:	950b      	str	r5, [sp, #44]	; 0x2c
   814fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81500:	f013 0302 	ands.w	r3, r3, #2
   81504:	9312      	str	r3, [sp, #72]	; 0x48
   81506:	d002      	beq.n	8150e <_svfprintf_r+0x34a>
   81508:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8150a:	3502      	adds	r5, #2
   8150c:	950b      	str	r5, [sp, #44]	; 0x2c
   8150e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81512:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
   81516:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
   8151a:	f040 8290 	bne.w	81a3e <_svfprintf_r+0x87a>
   8151e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81520:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
   81524:	ebcc 0b05 	rsb	fp, ip, r5
   81528:	f1bb 0f00 	cmp.w	fp, #0
   8152c:	f340 8287 	ble.w	81a3e <_svfprintf_r+0x87a>
   81530:	f1bb 0f10 	cmp.w	fp, #16
   81534:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81536:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   81538:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 816dc <_svfprintf_r+0x518>
   8153c:	dd2c      	ble.n	81598 <_svfprintf_r+0x3d4>
   8153e:	971b      	str	r7, [sp, #108]	; 0x6c
   81540:	4630      	mov	r0, r6
   81542:	4657      	mov	r7, sl
   81544:	2510      	movs	r5, #16
   81546:	46ca      	mov	sl, r9
   81548:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   8154a:	46a1      	mov	r9, r4
   8154c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   8154e:	e006      	b.n	8155e <_svfprintf_r+0x39a>
   81550:	f1ab 0b10 	sub.w	fp, fp, #16
   81554:	f1bb 0f10 	cmp.w	fp, #16
   81558:	f100 0008 	add.w	r0, r0, #8
   8155c:	dd17      	ble.n	8158e <_svfprintf_r+0x3ca>
   8155e:	3201      	adds	r2, #1
   81560:	3110      	adds	r1, #16
   81562:	2a07      	cmp	r2, #7
   81564:	912d      	str	r1, [sp, #180]	; 0xb4
   81566:	922c      	str	r2, [sp, #176]	; 0xb0
   81568:	6007      	str	r7, [r0, #0]
   8156a:	6045      	str	r5, [r0, #4]
   8156c:	ddf0      	ble.n	81550 <_svfprintf_r+0x38c>
   8156e:	4620      	mov	r0, r4
   81570:	4631      	mov	r1, r6
   81572:	aa2b      	add	r2, sp, #172	; 0xac
   81574:	f003 fa7c 	bl	84a70 <__ssprint_r>
   81578:	2800      	cmp	r0, #0
   8157a:	f47f af3b 	bne.w	813f4 <_svfprintf_r+0x230>
   8157e:	f1ab 0b10 	sub.w	fp, fp, #16
   81582:	f1bb 0f10 	cmp.w	fp, #16
   81586:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81588:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   8158a:	a838      	add	r0, sp, #224	; 0xe0
   8158c:	dce7      	bgt.n	8155e <_svfprintf_r+0x39a>
   8158e:	464c      	mov	r4, r9
   81590:	46d1      	mov	r9, sl
   81592:	46ba      	mov	sl, r7
   81594:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
   81596:	4606      	mov	r6, r0
   81598:	3201      	adds	r2, #1
   8159a:	eb0b 0c01 	add.w	ip, fp, r1
   8159e:	2a07      	cmp	r2, #7
   815a0:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   815a4:	922c      	str	r2, [sp, #176]	; 0xb0
   815a6:	e886 0c00 	stmia.w	r6, {sl, fp}
   815aa:	f300 841a 	bgt.w	81de2 <_svfprintf_r+0xc1e>
   815ae:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   815b2:	3608      	adds	r6, #8
   815b4:	f1ba 0f00 	cmp.w	sl, #0
   815b8:	d00f      	beq.n	815da <_svfprintf_r+0x416>
   815ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   815bc:	f10c 0c01 	add.w	ip, ip, #1
   815c0:	3301      	adds	r3, #1
   815c2:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
   815c6:	2201      	movs	r2, #1
   815c8:	2b07      	cmp	r3, #7
   815ca:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   815ce:	932c      	str	r3, [sp, #176]	; 0xb0
   815d0:	e886 0006 	stmia.w	r6, {r1, r2}
   815d4:	f300 83a4 	bgt.w	81d20 <_svfprintf_r+0xb5c>
   815d8:	3608      	adds	r6, #8
   815da:	9b12      	ldr	r3, [sp, #72]	; 0x48
   815dc:	b173      	cbz	r3, 815fc <_svfprintf_r+0x438>
   815de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   815e0:	f10c 0c02 	add.w	ip, ip, #2
   815e4:	3301      	adds	r3, #1
   815e6:	a924      	add	r1, sp, #144	; 0x90
   815e8:	2202      	movs	r2, #2
   815ea:	2b07      	cmp	r3, #7
   815ec:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   815f0:	932c      	str	r3, [sp, #176]	; 0xb0
   815f2:	e886 0006 	stmia.w	r6, {r1, r2}
   815f6:	f300 8387 	bgt.w	81d08 <_svfprintf_r+0xb44>
   815fa:	3608      	adds	r6, #8
   815fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   815fe:	2d80      	cmp	r5, #128	; 0x80
   81600:	f000 82ca 	beq.w	81b98 <_svfprintf_r+0x9d4>
   81604:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81606:	ebc4 0a05 	rsb	sl, r4, r5
   8160a:	f1ba 0f00 	cmp.w	sl, #0
   8160e:	dd3b      	ble.n	81688 <_svfprintf_r+0x4c4>
   81610:	f1ba 0f10 	cmp.w	sl, #16
   81614:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81616:	4d30      	ldr	r5, [pc, #192]	; (816d8 <_svfprintf_r+0x514>)
   81618:	dd2b      	ble.n	81672 <_svfprintf_r+0x4ae>
   8161a:	940a      	str	r4, [sp, #40]	; 0x28
   8161c:	4632      	mov	r2, r6
   8161e:	f04f 0b10 	mov.w	fp, #16
   81622:	462e      	mov	r6, r5
   81624:	4661      	mov	r1, ip
   81626:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81628:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8162a:	e006      	b.n	8163a <_svfprintf_r+0x476>
   8162c:	f1aa 0a10 	sub.w	sl, sl, #16
   81630:	f1ba 0f10 	cmp.w	sl, #16
   81634:	f102 0208 	add.w	r2, r2, #8
   81638:	dd17      	ble.n	8166a <_svfprintf_r+0x4a6>
   8163a:	3301      	adds	r3, #1
   8163c:	3110      	adds	r1, #16
   8163e:	2b07      	cmp	r3, #7
   81640:	912d      	str	r1, [sp, #180]	; 0xb4
   81642:	932c      	str	r3, [sp, #176]	; 0xb0
   81644:	e882 0840 	stmia.w	r2, {r6, fp}
   81648:	ddf0      	ble.n	8162c <_svfprintf_r+0x468>
   8164a:	4620      	mov	r0, r4
   8164c:	4629      	mov	r1, r5
   8164e:	aa2b      	add	r2, sp, #172	; 0xac
   81650:	f003 fa0e 	bl	84a70 <__ssprint_r>
   81654:	2800      	cmp	r0, #0
   81656:	f47f aecd 	bne.w	813f4 <_svfprintf_r+0x230>
   8165a:	f1aa 0a10 	sub.w	sl, sl, #16
   8165e:	f1ba 0f10 	cmp.w	sl, #16
   81662:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81664:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81666:	aa38      	add	r2, sp, #224	; 0xe0
   81668:	dce7      	bgt.n	8163a <_svfprintf_r+0x476>
   8166a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8166c:	4635      	mov	r5, r6
   8166e:	468c      	mov	ip, r1
   81670:	4616      	mov	r6, r2
   81672:	3301      	adds	r3, #1
   81674:	44d4      	add	ip, sl
   81676:	2b07      	cmp	r3, #7
   81678:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8167c:	932c      	str	r3, [sp, #176]	; 0xb0
   8167e:	e886 0420 	stmia.w	r6, {r5, sl}
   81682:	f300 8335 	bgt.w	81cf0 <_svfprintf_r+0xb2c>
   81686:	3608      	adds	r6, #8
   81688:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8168a:	05ed      	lsls	r5, r5, #23
   8168c:	f100 8224 	bmi.w	81ad8 <_svfprintf_r+0x914>
   81690:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81692:	44a4      	add	ip, r4
   81694:	3301      	adds	r3, #1
   81696:	2b07      	cmp	r3, #7
   81698:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8169c:	6037      	str	r7, [r6, #0]
   8169e:	6074      	str	r4, [r6, #4]
   816a0:	932c      	str	r3, [sp, #176]	; 0xb0
   816a2:	f300 830f 	bgt.w	81cc4 <_svfprintf_r+0xb00>
   816a6:	3608      	adds	r6, #8
   816a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   816aa:	0763      	lsls	r3, r4, #29
   816ac:	d549      	bpl.n	81742 <_svfprintf_r+0x57e>
   816ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   816b0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   816b2:	1a2c      	subs	r4, r5, r0
   816b4:	2c00      	cmp	r4, #0
   816b6:	dd44      	ble.n	81742 <_svfprintf_r+0x57e>
   816b8:	2c10      	cmp	r4, #16
   816ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   816bc:	f8df a01c 	ldr.w	sl, [pc, #28]	; 816dc <_svfprintf_r+0x518>
   816c0:	dd2b      	ble.n	8171a <_svfprintf_r+0x556>
   816c2:	4657      	mov	r7, sl
   816c4:	2510      	movs	r5, #16
   816c6:	4662      	mov	r2, ip
   816c8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   816cc:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   816d0:	e00b      	b.n	816ea <_svfprintf_r+0x526>
   816d2:	bf00      	nop
   816d4:	00085b98 	.word	0x00085b98
   816d8:	00085b64 	.word	0x00085b64
   816dc:	00085bb8 	.word	0x00085bb8
   816e0:	3c10      	subs	r4, #16
   816e2:	2c10      	cmp	r4, #16
   816e4:	f106 0608 	add.w	r6, r6, #8
   816e8:	dd15      	ble.n	81716 <_svfprintf_r+0x552>
   816ea:	3301      	adds	r3, #1
   816ec:	3210      	adds	r2, #16
   816ee:	2b07      	cmp	r3, #7
   816f0:	922d      	str	r2, [sp, #180]	; 0xb4
   816f2:	932c      	str	r3, [sp, #176]	; 0xb0
   816f4:	6037      	str	r7, [r6, #0]
   816f6:	6075      	str	r5, [r6, #4]
   816f8:	ddf2      	ble.n	816e0 <_svfprintf_r+0x51c>
   816fa:	4650      	mov	r0, sl
   816fc:	4641      	mov	r1, r8
   816fe:	aa2b      	add	r2, sp, #172	; 0xac
   81700:	f003 f9b6 	bl	84a70 <__ssprint_r>
   81704:	2800      	cmp	r0, #0
   81706:	f47f ae75 	bne.w	813f4 <_svfprintf_r+0x230>
   8170a:	3c10      	subs	r4, #16
   8170c:	2c10      	cmp	r4, #16
   8170e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81710:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81712:	ae38      	add	r6, sp, #224	; 0xe0
   81714:	dce9      	bgt.n	816ea <_svfprintf_r+0x526>
   81716:	4694      	mov	ip, r2
   81718:	46ba      	mov	sl, r7
   8171a:	3301      	adds	r3, #1
   8171c:	44a4      	add	ip, r4
   8171e:	2b07      	cmp	r3, #7
   81720:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81724:	932c      	str	r3, [sp, #176]	; 0xb0
   81726:	f8c6 a000 	str.w	sl, [r6]
   8172a:	6074      	str	r4, [r6, #4]
   8172c:	dd09      	ble.n	81742 <_svfprintf_r+0x57e>
   8172e:	980d      	ldr	r0, [sp, #52]	; 0x34
   81730:	990c      	ldr	r1, [sp, #48]	; 0x30
   81732:	aa2b      	add	r2, sp, #172	; 0xac
   81734:	f003 f99c 	bl	84a70 <__ssprint_r>
   81738:	2800      	cmp	r0, #0
   8173a:	f47f ae5b 	bne.w	813f4 <_svfprintf_r+0x230>
   8173e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81742:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81744:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81746:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81748:	42a8      	cmp	r0, r5
   8174a:	bfac      	ite	ge
   8174c:	1824      	addge	r4, r4, r0
   8174e:	1964      	addlt	r4, r4, r5
   81750:	940e      	str	r4, [sp, #56]	; 0x38
   81752:	f1bc 0f00 	cmp.w	ip, #0
   81756:	f040 82c1 	bne.w	81cdc <_svfprintf_r+0xb18>
   8175a:	2300      	movs	r3, #0
   8175c:	932c      	str	r3, [sp, #176]	; 0xb0
   8175e:	ae38      	add	r6, sp, #224	; 0xe0
   81760:	e556      	b.n	81210 <_svfprintf_r+0x4c>
   81762:	f899 8000 	ldrb.w	r8, [r9]
   81766:	2a00      	cmp	r2, #0
   81768:	f47f ad88 	bne.w	8127c <_svfprintf_r+0xb8>
   8176c:	2220      	movs	r2, #32
   8176e:	e585      	b.n	8127c <_svfprintf_r+0xb8>
   81770:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81772:	f045 0501 	orr.w	r5, r5, #1
   81776:	9509      	str	r5, [sp, #36]	; 0x24
   81778:	f899 8000 	ldrb.w	r8, [r9]
   8177c:	e57e      	b.n	8127c <_svfprintf_r+0xb8>
   8177e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81780:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   81784:	9509      	str	r5, [sp, #36]	; 0x24
   81786:	f899 8000 	ldrb.w	r8, [r9]
   8178a:	e577      	b.n	8127c <_svfprintf_r+0xb8>
   8178c:	2400      	movs	r4, #0
   8178e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81792:	940f      	str	r4, [sp, #60]	; 0x3c
   81794:	4621      	mov	r1, r4
   81796:	f819 8b01 	ldrb.w	r8, [r9], #1
   8179a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   8179e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   817a2:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   817a6:	2b09      	cmp	r3, #9
   817a8:	d9f5      	bls.n	81796 <_svfprintf_r+0x5d2>
   817aa:	910f      	str	r1, [sp, #60]	; 0x3c
   817ac:	e568      	b.n	81280 <_svfprintf_r+0xbc>
   817ae:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   817b2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   817b6:	f04c 0c10 	orr.w	ip, ip, #16
   817ba:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   817be:	9c09      	ldr	r4, [sp, #36]	; 0x24
   817c0:	06a5      	lsls	r5, r4, #26
   817c2:	f140 80b2 	bpl.w	8192a <_svfprintf_r+0x766>
   817c6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   817c8:	1de9      	adds	r1, r5, #7
   817ca:	f021 0107 	bic.w	r1, r1, #7
   817ce:	e9d1 2300 	ldrd	r2, r3, [r1]
   817d2:	3108      	adds	r1, #8
   817d4:	9110      	str	r1, [sp, #64]	; 0x40
   817d6:	4614      	mov	r4, r2
   817d8:	461d      	mov	r5, r3
   817da:	2a00      	cmp	r2, #0
   817dc:	f173 0c00 	sbcs.w	ip, r3, #0
   817e0:	f2c0 8394 	blt.w	81f0c <_svfprintf_r+0xd48>
   817e4:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   817e8:	2301      	movs	r3, #1
   817ea:	e659      	b.n	814a0 <_svfprintf_r+0x2dc>
   817ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
   817ee:	4cb6      	ldr	r4, [pc, #728]	; (81ac8 <_svfprintf_r+0x904>)
   817f0:	06af      	lsls	r7, r5, #26
   817f2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   817f6:	941a      	str	r4, [sp, #104]	; 0x68
   817f8:	f53f ae2f 	bmi.w	8145a <_svfprintf_r+0x296>
   817fc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   817fe:	06ed      	lsls	r5, r5, #27
   81800:	f140 8443 	bpl.w	8208a <_svfprintf_r+0xec6>
   81804:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81808:	2500      	movs	r5, #0
   8180a:	f8dc 4000 	ldr.w	r4, [ip]
   8180e:	f10c 0c04 	add.w	ip, ip, #4
   81812:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81816:	e62b      	b.n	81470 <_svfprintf_r+0x2ac>
   81818:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8181c:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81820:	f01c 0f20 	tst.w	ip, #32
   81824:	f000 8440 	beq.w	820a8 <_svfprintf_r+0xee4>
   81828:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8182a:	6821      	ldr	r1, [r4, #0]
   8182c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8182e:	17e5      	asrs	r5, r4, #31
   81830:	462b      	mov	r3, r5
   81832:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81834:	4622      	mov	r2, r4
   81836:	3504      	adds	r5, #4
   81838:	9510      	str	r5, [sp, #64]	; 0x40
   8183a:	e9c1 2300 	strd	r2, r3, [r1]
   8183e:	e4e7      	b.n	81210 <_svfprintf_r+0x4c>
   81840:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81842:	f04f 0a00 	mov.w	sl, #0
   81846:	6827      	ldr	r7, [r4, #0]
   81848:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   8184c:	1d25      	adds	r5, r4, #4
   8184e:	2f00      	cmp	r7, #0
   81850:	f000 85e9 	beq.w	82426 <_svfprintf_r+0x1262>
   81854:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81856:	4638      	mov	r0, r7
   81858:	2c00      	cmp	r4, #0
   8185a:	f2c0 859b 	blt.w	82394 <_svfprintf_r+0x11d0>
   8185e:	4651      	mov	r1, sl
   81860:	4622      	mov	r2, r4
   81862:	f002 fab7 	bl	83dd4 <memchr>
   81866:	2800      	cmp	r0, #0
   81868:	f000 8613 	beq.w	82492 <_svfprintf_r+0x12ce>
   8186c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8186e:	1bc0      	subs	r0, r0, r7
   81870:	42a0      	cmp	r0, r4
   81872:	bfb8      	it	lt
   81874:	4604      	movlt	r4, r0
   81876:	9510      	str	r5, [sp, #64]	; 0x40
   81878:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
   8187c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   81880:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   81884:	950b      	str	r5, [sp, #44]	; 0x2c
   81886:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8188a:	e632      	b.n	814f2 <_svfprintf_r+0x32e>
   8188c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81890:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
   81894:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81898:	f899 8000 	ldrb.w	r8, [r9]
   8189c:	e4ee      	b.n	8127c <_svfprintf_r+0xb8>
   8189e:	f899 8000 	ldrb.w	r8, [r9]
   818a2:	464b      	mov	r3, r9
   818a4:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   818a8:	f000 847f 	beq.w	821aa <_svfprintf_r+0xfe6>
   818ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
   818ae:	f045 0510 	orr.w	r5, r5, #16
   818b2:	9509      	str	r5, [sp, #36]	; 0x24
   818b4:	e4e2      	b.n	8127c <_svfprintf_r+0xb8>
   818b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
   818b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   818ba:	6824      	ldr	r4, [r4, #0]
   818bc:	1d2b      	adds	r3, r5, #4
   818be:	2c00      	cmp	r4, #0
   818c0:	940f      	str	r4, [sp, #60]	; 0x3c
   818c2:	f6ff ad7d 	blt.w	813c0 <_svfprintf_r+0x1fc>
   818c6:	9310      	str	r3, [sp, #64]	; 0x40
   818c8:	f899 8000 	ldrb.w	r8, [r9]
   818cc:	e4d6      	b.n	8127c <_svfprintf_r+0xb8>
   818ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
   818d0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   818d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
   818d6:	487d      	ldr	r0, [pc, #500]	; (81acc <_svfprintf_r+0x908>)
   818d8:	3504      	adds	r5, #4
   818da:	681c      	ldr	r4, [r3, #0]
   818dc:	f04f 0878 	mov.w	r8, #120	; 0x78
   818e0:	2330      	movs	r3, #48	; 0x30
   818e2:	f04c 0c02 	orr.w	ip, ip, #2
   818e6:	9510      	str	r5, [sp, #64]	; 0x40
   818e8:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   818ec:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   818f0:	2500      	movs	r5, #0
   818f2:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   818f6:	901a      	str	r0, [sp, #104]	; 0x68
   818f8:	2302      	movs	r3, #2
   818fa:	e5cd      	b.n	81498 <_svfprintf_r+0x2d4>
   818fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
   818fe:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81900:	681a      	ldr	r2, [r3, #0]
   81902:	2401      	movs	r4, #1
   81904:	2300      	movs	r3, #0
   81906:	3504      	adds	r5, #4
   81908:	469a      	mov	sl, r3
   8190a:	940b      	str	r4, [sp, #44]	; 0x2c
   8190c:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
   81910:	9510      	str	r5, [sp, #64]	; 0x40
   81912:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   81916:	930a      	str	r3, [sp, #40]	; 0x28
   81918:	9314      	str	r3, [sp, #80]	; 0x50
   8191a:	af2e      	add	r7, sp, #184	; 0xb8
   8191c:	e5ef      	b.n	814fe <_svfprintf_r+0x33a>
   8191e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81920:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81924:	06a5      	lsls	r5, r4, #26
   81926:	f53f af4e 	bmi.w	817c6 <_svfprintf_r+0x602>
   8192a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8192e:	f01c 0f10 	tst.w	ip, #16
   81932:	f040 82df 	bne.w	81ef4 <_svfprintf_r+0xd30>
   81936:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8193a:	f01c 0f40 	tst.w	ip, #64	; 0x40
   8193e:	f000 82d9 	beq.w	81ef4 <_svfprintf_r+0xd30>
   81942:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81946:	f9bc 4000 	ldrsh.w	r4, [ip]
   8194a:	f10c 0c04 	add.w	ip, ip, #4
   8194e:	17e5      	asrs	r5, r4, #31
   81950:	4622      	mov	r2, r4
   81952:	462b      	mov	r3, r5
   81954:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81958:	e73f      	b.n	817da <_svfprintf_r+0x616>
   8195a:	f899 8000 	ldrb.w	r8, [r9]
   8195e:	222b      	movs	r2, #43	; 0x2b
   81960:	e48c      	b.n	8127c <_svfprintf_r+0xb8>
   81962:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81964:	f045 0508 	orr.w	r5, r5, #8
   81968:	9509      	str	r5, [sp, #36]	; 0x24
   8196a:	f899 8000 	ldrb.w	r8, [r9]
   8196e:	e485      	b.n	8127c <_svfprintf_r+0xb8>
   81970:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81972:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81976:	1deb      	adds	r3, r5, #7
   81978:	f023 0307 	bic.w	r3, r3, #7
   8197c:	f103 0c08 	add.w	ip, r3, #8
   81980:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81984:	e9d3 4500 	ldrd	r4, r5, [r3]
   81988:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   8198c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81990:	f003 f834 	bl	849fc <__fpclassifyd>
   81994:	2801      	cmp	r0, #1
   81996:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8199a:	f040 835c 	bne.w	82056 <_svfprintf_r+0xe92>
   8199e:	2200      	movs	r2, #0
   819a0:	2300      	movs	r3, #0
   819a2:	f003 fd93 	bl	854cc <__aeabi_dcmplt>
   819a6:	2800      	cmp	r0, #0
   819a8:	f040 8563 	bne.w	82472 <_svfprintf_r+0x12ae>
   819ac:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   819b0:	2503      	movs	r5, #3
   819b2:	950b      	str	r5, [sp, #44]	; 0x2c
   819b4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   819b6:	4f46      	ldr	r7, [pc, #280]	; (81ad0 <_svfprintf_r+0x90c>)
   819b8:	f025 0580 	bic.w	r5, r5, #128	; 0x80
   819bc:	4b45      	ldr	r3, [pc, #276]	; (81ad4 <_svfprintf_r+0x910>)
   819be:	2400      	movs	r4, #0
   819c0:	9509      	str	r5, [sp, #36]	; 0x24
   819c2:	2500      	movs	r5, #0
   819c4:	940a      	str	r4, [sp, #40]	; 0x28
   819c6:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   819ca:	bfd8      	it	le
   819cc:	461f      	movle	r7, r3
   819ce:	2403      	movs	r4, #3
   819d0:	9514      	str	r5, [sp, #80]	; 0x50
   819d2:	e58e      	b.n	814f2 <_svfprintf_r+0x32e>
   819d4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   819d8:	f04c 0c20 	orr.w	ip, ip, #32
   819dc:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   819e0:	f899 8000 	ldrb.w	r8, [r9]
   819e4:	e44a      	b.n	8127c <_svfprintf_r+0xb8>
   819e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
   819e8:	1de3      	adds	r3, r4, #7
   819ea:	f023 0307 	bic.w	r3, r3, #7
   819ee:	f103 0508 	add.w	r5, r3, #8
   819f2:	9510      	str	r5, [sp, #64]	; 0x40
   819f4:	e9d3 4500 	ldrd	r4, r5, [r3]
   819f8:	2300      	movs	r3, #0
   819fa:	e54d      	b.n	81498 <_svfprintf_r+0x2d4>
   819fc:	9d10      	ldr	r5, [sp, #64]	; 0x40
   819fe:	1deb      	adds	r3, r5, #7
   81a00:	f023 0307 	bic.w	r3, r3, #7
   81a04:	f103 0c08 	add.w	ip, r3, #8
   81a08:	e9d3 4500 	ldrd	r4, r5, [r3]
   81a0c:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81a10:	2301      	movs	r3, #1
   81a12:	e541      	b.n	81498 <_svfprintf_r+0x2d4>
   81a14:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81a18:	f1b8 0f00 	cmp.w	r8, #0
   81a1c:	f43f ace3 	beq.w	813e6 <_svfprintf_r+0x222>
   81a20:	2300      	movs	r3, #0
   81a22:	f04f 0c01 	mov.w	ip, #1
   81a26:	469a      	mov	sl, r3
   81a28:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   81a2c:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
   81a30:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   81a34:	930a      	str	r3, [sp, #40]	; 0x28
   81a36:	9314      	str	r3, [sp, #80]	; 0x50
   81a38:	4664      	mov	r4, ip
   81a3a:	af2e      	add	r7, sp, #184	; 0xb8
   81a3c:	e55f      	b.n	814fe <_svfprintf_r+0x33a>
   81a3e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81a42:	e5b7      	b.n	815b4 <_svfprintf_r+0x3f0>
   81a44:	2b01      	cmp	r3, #1
   81a46:	f000 80ec 	beq.w	81c22 <_svfprintf_r+0xa5e>
   81a4a:	2b02      	cmp	r3, #2
   81a4c:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
   81a50:	d118      	bne.n	81a84 <_svfprintf_r+0x8c0>
   81a52:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   81a56:	4619      	mov	r1, r3
   81a58:	f004 000f 	and.w	r0, r4, #15
   81a5c:	0922      	lsrs	r2, r4, #4
   81a5e:	f81c 0000 	ldrb.w	r0, [ip, r0]
   81a62:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   81a66:	092b      	lsrs	r3, r5, #4
   81a68:	7008      	strb	r0, [r1, #0]
   81a6a:	ea52 0003 	orrs.w	r0, r2, r3
   81a6e:	460f      	mov	r7, r1
   81a70:	4614      	mov	r4, r2
   81a72:	461d      	mov	r5, r3
   81a74:	f101 31ff 	add.w	r1, r1, #4294967295
   81a78:	d1ee      	bne.n	81a58 <_svfprintf_r+0x894>
   81a7a:	9d08      	ldr	r5, [sp, #32]
   81a7c:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
   81a80:	1bec      	subs	r4, r5, r7
   81a82:	e52d      	b.n	814e0 <_svfprintf_r+0x31c>
   81a84:	08e0      	lsrs	r0, r4, #3
   81a86:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   81a8a:	f004 0207 	and.w	r2, r4, #7
   81a8e:	08e9      	lsrs	r1, r5, #3
   81a90:	3230      	adds	r2, #48	; 0x30
   81a92:	ea50 0c01 	orrs.w	ip, r0, r1
   81a96:	461f      	mov	r7, r3
   81a98:	701a      	strb	r2, [r3, #0]
   81a9a:	4604      	mov	r4, r0
   81a9c:	460d      	mov	r5, r1
   81a9e:	f103 33ff 	add.w	r3, r3, #4294967295
   81aa2:	d1ef      	bne.n	81a84 <_svfprintf_r+0x8c0>
   81aa4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81aa6:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
   81aaa:	07e0      	lsls	r0, r4, #31
   81aac:	4639      	mov	r1, r7
   81aae:	f140 80c1 	bpl.w	81c34 <_svfprintf_r+0xa70>
   81ab2:	2a30      	cmp	r2, #48	; 0x30
   81ab4:	f000 80be 	beq.w	81c34 <_svfprintf_r+0xa70>
   81ab8:	9d08      	ldr	r5, [sp, #32]
   81aba:	461f      	mov	r7, r3
   81abc:	2330      	movs	r3, #48	; 0x30
   81abe:	1bec      	subs	r4, r5, r7
   81ac0:	f801 3c01 	strb.w	r3, [r1, #-1]
   81ac4:	e50c      	b.n	814e0 <_svfprintf_r+0x31c>
   81ac6:	bf00      	nop
   81ac8:	00085b84 	.word	0x00085b84
   81acc:	00085b98 	.word	0x00085b98
   81ad0:	00085b78 	.word	0x00085b78
   81ad4:	00085b74 	.word	0x00085b74
   81ad8:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   81adc:	f340 80ad 	ble.w	81c3a <_svfprintf_r+0xa76>
   81ae0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81ae4:	2200      	movs	r2, #0
   81ae6:	2300      	movs	r3, #0
   81ae8:	f8cd c01c 	str.w	ip, [sp, #28]
   81aec:	f003 fce4 	bl	854b8 <__aeabi_dcmpeq>
   81af0:	f8dd c01c 	ldr.w	ip, [sp, #28]
   81af4:	2800      	cmp	r0, #0
   81af6:	f000 8126 	beq.w	81d46 <_svfprintf_r+0xb82>
   81afa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81afc:	49aa      	ldr	r1, [pc, #680]	; (81da8 <_svfprintf_r+0xbe4>)
   81afe:	3301      	adds	r3, #1
   81b00:	f10c 0c01 	add.w	ip, ip, #1
   81b04:	2201      	movs	r2, #1
   81b06:	2b07      	cmp	r3, #7
   81b08:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81b0c:	932c      	str	r3, [sp, #176]	; 0xb0
   81b0e:	e886 0006 	stmia.w	r6, {r1, r2}
   81b12:	f300 82ed 	bgt.w	820f0 <_svfprintf_r+0xf2c>
   81b16:	3608      	adds	r6, #8
   81b18:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81b1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81b1c:	42a3      	cmp	r3, r4
   81b1e:	db03      	blt.n	81b28 <_svfprintf_r+0x964>
   81b20:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81b22:	07ec      	lsls	r4, r5, #31
   81b24:	f57f adc0 	bpl.w	816a8 <_svfprintf_r+0x4e4>
   81b28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81b2a:	9c18      	ldr	r4, [sp, #96]	; 0x60
   81b2c:	3301      	adds	r3, #1
   81b2e:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81b30:	44a4      	add	ip, r4
   81b32:	2b07      	cmp	r3, #7
   81b34:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81b38:	6035      	str	r5, [r6, #0]
   81b3a:	6074      	str	r4, [r6, #4]
   81b3c:	932c      	str	r3, [sp, #176]	; 0xb0
   81b3e:	f300 833e 	bgt.w	821be <_svfprintf_r+0xffa>
   81b42:	3608      	adds	r6, #8
   81b44:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81b46:	1e6c      	subs	r4, r5, #1
   81b48:	2c00      	cmp	r4, #0
   81b4a:	f77f adad 	ble.w	816a8 <_svfprintf_r+0x4e4>
   81b4e:	2c10      	cmp	r4, #16
   81b50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81b52:	4d96      	ldr	r5, [pc, #600]	; (81dac <_svfprintf_r+0xbe8>)
   81b54:	f340 8197 	ble.w	81e86 <_svfprintf_r+0xcc2>
   81b58:	2710      	movs	r7, #16
   81b5a:	4662      	mov	r2, ip
   81b5c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81b60:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   81b64:	e004      	b.n	81b70 <_svfprintf_r+0x9ac>
   81b66:	3608      	adds	r6, #8
   81b68:	3c10      	subs	r4, #16
   81b6a:	2c10      	cmp	r4, #16
   81b6c:	f340 818a 	ble.w	81e84 <_svfprintf_r+0xcc0>
   81b70:	3301      	adds	r3, #1
   81b72:	3210      	adds	r2, #16
   81b74:	2b07      	cmp	r3, #7
   81b76:	922d      	str	r2, [sp, #180]	; 0xb4
   81b78:	932c      	str	r3, [sp, #176]	; 0xb0
   81b7a:	e886 00a0 	stmia.w	r6, {r5, r7}
   81b7e:	ddf2      	ble.n	81b66 <_svfprintf_r+0x9a2>
   81b80:	4640      	mov	r0, r8
   81b82:	4651      	mov	r1, sl
   81b84:	aa2b      	add	r2, sp, #172	; 0xac
   81b86:	f002 ff73 	bl	84a70 <__ssprint_r>
   81b8a:	2800      	cmp	r0, #0
   81b8c:	f47f ac32 	bne.w	813f4 <_svfprintf_r+0x230>
   81b90:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81b92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81b94:	ae38      	add	r6, sp, #224	; 0xe0
   81b96:	e7e7      	b.n	81b68 <_svfprintf_r+0x9a4>
   81b98:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81b9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81b9c:	ebc0 0a05 	rsb	sl, r0, r5
   81ba0:	f1ba 0f00 	cmp.w	sl, #0
   81ba4:	f77f ad2e 	ble.w	81604 <_svfprintf_r+0x440>
   81ba8:	f1ba 0f10 	cmp.w	sl, #16
   81bac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81bae:	4d7f      	ldr	r5, [pc, #508]	; (81dac <_svfprintf_r+0xbe8>)
   81bb0:	dd2b      	ble.n	81c0a <_svfprintf_r+0xa46>
   81bb2:	9412      	str	r4, [sp, #72]	; 0x48
   81bb4:	4632      	mov	r2, r6
   81bb6:	f04f 0b10 	mov.w	fp, #16
   81bba:	462e      	mov	r6, r5
   81bbc:	4661      	mov	r1, ip
   81bbe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81bc0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81bc2:	e006      	b.n	81bd2 <_svfprintf_r+0xa0e>
   81bc4:	f1aa 0a10 	sub.w	sl, sl, #16
   81bc8:	f1ba 0f10 	cmp.w	sl, #16
   81bcc:	f102 0208 	add.w	r2, r2, #8
   81bd0:	dd17      	ble.n	81c02 <_svfprintf_r+0xa3e>
   81bd2:	3301      	adds	r3, #1
   81bd4:	3110      	adds	r1, #16
   81bd6:	2b07      	cmp	r3, #7
   81bd8:	912d      	str	r1, [sp, #180]	; 0xb4
   81bda:	932c      	str	r3, [sp, #176]	; 0xb0
   81bdc:	e882 0840 	stmia.w	r2, {r6, fp}
   81be0:	ddf0      	ble.n	81bc4 <_svfprintf_r+0xa00>
   81be2:	4620      	mov	r0, r4
   81be4:	4629      	mov	r1, r5
   81be6:	aa2b      	add	r2, sp, #172	; 0xac
   81be8:	f002 ff42 	bl	84a70 <__ssprint_r>
   81bec:	2800      	cmp	r0, #0
   81bee:	f47f ac01 	bne.w	813f4 <_svfprintf_r+0x230>
   81bf2:	f1aa 0a10 	sub.w	sl, sl, #16
   81bf6:	f1ba 0f10 	cmp.w	sl, #16
   81bfa:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81bfc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81bfe:	aa38      	add	r2, sp, #224	; 0xe0
   81c00:	dce7      	bgt.n	81bd2 <_svfprintf_r+0xa0e>
   81c02:	9c12      	ldr	r4, [sp, #72]	; 0x48
   81c04:	4635      	mov	r5, r6
   81c06:	468c      	mov	ip, r1
   81c08:	4616      	mov	r6, r2
   81c0a:	3301      	adds	r3, #1
   81c0c:	44d4      	add	ip, sl
   81c0e:	2b07      	cmp	r3, #7
   81c10:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81c14:	932c      	str	r3, [sp, #176]	; 0xb0
   81c16:	e886 0420 	stmia.w	r6, {r5, sl}
   81c1a:	f300 820f 	bgt.w	8203c <_svfprintf_r+0xe78>
   81c1e:	3608      	adds	r6, #8
   81c20:	e4f0      	b.n	81604 <_svfprintf_r+0x440>
   81c22:	2d00      	cmp	r5, #0
   81c24:	bf08      	it	eq
   81c26:	2c0a      	cmpeq	r4, #10
   81c28:	f080 8138 	bcs.w	81e9c <_svfprintf_r+0xcd8>
   81c2c:	3430      	adds	r4, #48	; 0x30
   81c2e:	af48      	add	r7, sp, #288	; 0x120
   81c30:	f807 4d41 	strb.w	r4, [r7, #-65]!
   81c34:	9d08      	ldr	r5, [sp, #32]
   81c36:	1bec      	subs	r4, r5, r7
   81c38:	e452      	b.n	814e0 <_svfprintf_r+0x31c>
   81c3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81c3c:	2c01      	cmp	r4, #1
   81c3e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81c40:	f340 81d2 	ble.w	81fe8 <_svfprintf_r+0xe24>
   81c44:	3401      	adds	r4, #1
   81c46:	f10c 0301 	add.w	r3, ip, #1
   81c4a:	2201      	movs	r2, #1
   81c4c:	2c07      	cmp	r4, #7
   81c4e:	932d      	str	r3, [sp, #180]	; 0xb4
   81c50:	6037      	str	r7, [r6, #0]
   81c52:	942c      	str	r4, [sp, #176]	; 0xb0
   81c54:	6072      	str	r2, [r6, #4]
   81c56:	f300 81d8 	bgt.w	8200a <_svfprintf_r+0xe46>
   81c5a:	3608      	adds	r6, #8
   81c5c:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81c5e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   81c62:	3401      	adds	r4, #1
   81c64:	6035      	str	r5, [r6, #0]
   81c66:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81c68:	4498      	add	r8, r3
   81c6a:	2c07      	cmp	r4, #7
   81c6c:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81c70:	942c      	str	r4, [sp, #176]	; 0xb0
   81c72:	6075      	str	r5, [r6, #4]
   81c74:	f300 81d5 	bgt.w	82022 <_svfprintf_r+0xe5e>
   81c78:	3608      	adds	r6, #8
   81c7a:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81c7e:	2200      	movs	r2, #0
   81c80:	2300      	movs	r3, #0
   81c82:	f003 fc19 	bl	854b8 <__aeabi_dcmpeq>
   81c86:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81c88:	2800      	cmp	r0, #0
   81c8a:	f040 80b9 	bne.w	81e00 <_svfprintf_r+0xc3c>
   81c8e:	1e6b      	subs	r3, r5, #1
   81c90:	3401      	adds	r4, #1
   81c92:	3701      	adds	r7, #1
   81c94:	4498      	add	r8, r3
   81c96:	2c07      	cmp	r4, #7
   81c98:	942c      	str	r4, [sp, #176]	; 0xb0
   81c9a:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81c9e:	6037      	str	r7, [r6, #0]
   81ca0:	6073      	str	r3, [r6, #4]
   81ca2:	f300 80e2 	bgt.w	81e6a <_svfprintf_r+0xca6>
   81ca6:	3608      	adds	r6, #8
   81ca8:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
   81cac:	3401      	adds	r4, #1
   81cae:	9d19      	ldr	r5, [sp, #100]	; 0x64
   81cb0:	44c4      	add	ip, r8
   81cb2:	ab27      	add	r3, sp, #156	; 0x9c
   81cb4:	2c07      	cmp	r4, #7
   81cb6:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81cba:	942c      	str	r4, [sp, #176]	; 0xb0
   81cbc:	e886 0028 	stmia.w	r6, {r3, r5}
   81cc0:	f77f acf1 	ble.w	816a6 <_svfprintf_r+0x4e2>
   81cc4:	980d      	ldr	r0, [sp, #52]	; 0x34
   81cc6:	990c      	ldr	r1, [sp, #48]	; 0x30
   81cc8:	aa2b      	add	r2, sp, #172	; 0xac
   81cca:	f002 fed1 	bl	84a70 <__ssprint_r>
   81cce:	2800      	cmp	r0, #0
   81cd0:	f47f ab90 	bne.w	813f4 <_svfprintf_r+0x230>
   81cd4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81cd8:	ae38      	add	r6, sp, #224	; 0xe0
   81cda:	e4e5      	b.n	816a8 <_svfprintf_r+0x4e4>
   81cdc:	980d      	ldr	r0, [sp, #52]	; 0x34
   81cde:	990c      	ldr	r1, [sp, #48]	; 0x30
   81ce0:	aa2b      	add	r2, sp, #172	; 0xac
   81ce2:	f002 fec5 	bl	84a70 <__ssprint_r>
   81ce6:	2800      	cmp	r0, #0
   81ce8:	f43f ad37 	beq.w	8175a <_svfprintf_r+0x596>
   81cec:	f7ff bb82 	b.w	813f4 <_svfprintf_r+0x230>
   81cf0:	980d      	ldr	r0, [sp, #52]	; 0x34
   81cf2:	990c      	ldr	r1, [sp, #48]	; 0x30
   81cf4:	aa2b      	add	r2, sp, #172	; 0xac
   81cf6:	f002 febb 	bl	84a70 <__ssprint_r>
   81cfa:	2800      	cmp	r0, #0
   81cfc:	f47f ab7a 	bne.w	813f4 <_svfprintf_r+0x230>
   81d00:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81d04:	ae38      	add	r6, sp, #224	; 0xe0
   81d06:	e4bf      	b.n	81688 <_svfprintf_r+0x4c4>
   81d08:	980d      	ldr	r0, [sp, #52]	; 0x34
   81d0a:	990c      	ldr	r1, [sp, #48]	; 0x30
   81d0c:	aa2b      	add	r2, sp, #172	; 0xac
   81d0e:	f002 feaf 	bl	84a70 <__ssprint_r>
   81d12:	2800      	cmp	r0, #0
   81d14:	f47f ab6e 	bne.w	813f4 <_svfprintf_r+0x230>
   81d18:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81d1c:	ae38      	add	r6, sp, #224	; 0xe0
   81d1e:	e46d      	b.n	815fc <_svfprintf_r+0x438>
   81d20:	980d      	ldr	r0, [sp, #52]	; 0x34
   81d22:	990c      	ldr	r1, [sp, #48]	; 0x30
   81d24:	aa2b      	add	r2, sp, #172	; 0xac
   81d26:	f002 fea3 	bl	84a70 <__ssprint_r>
   81d2a:	2800      	cmp	r0, #0
   81d2c:	f47f ab62 	bne.w	813f4 <_svfprintf_r+0x230>
   81d30:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81d34:	ae38      	add	r6, sp, #224	; 0xe0
   81d36:	e450      	b.n	815da <_svfprintf_r+0x416>
   81d38:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81d3a:	af38      	add	r7, sp, #224	; 0xe0
   81d3c:	f7ff bbd0 	b.w	814e0 <_svfprintf_r+0x31c>
   81d40:	2302      	movs	r3, #2
   81d42:	f7ff bba9 	b.w	81498 <_svfprintf_r+0x2d4>
   81d46:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81d48:	2b00      	cmp	r3, #0
   81d4a:	f340 81dd 	ble.w	82108 <_svfprintf_r+0xf44>
   81d4e:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81d50:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81d52:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
   81d56:	42ac      	cmp	r4, r5
   81d58:	bfa8      	it	ge
   81d5a:	462c      	movge	r4, r5
   81d5c:	2c00      	cmp	r4, #0
   81d5e:	44ba      	add	sl, r7
   81d60:	dd0b      	ble.n	81d7a <_svfprintf_r+0xbb6>
   81d62:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81d64:	44a4      	add	ip, r4
   81d66:	3301      	adds	r3, #1
   81d68:	2b07      	cmp	r3, #7
   81d6a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81d6e:	6037      	str	r7, [r6, #0]
   81d70:	6074      	str	r4, [r6, #4]
   81d72:	932c      	str	r3, [sp, #176]	; 0xb0
   81d74:	f300 831e 	bgt.w	823b4 <_svfprintf_r+0x11f0>
   81d78:	3608      	adds	r6, #8
   81d7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81d7c:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
   81d80:	1b2c      	subs	r4, r5, r4
   81d82:	2c00      	cmp	r4, #0
   81d84:	f340 80d7 	ble.w	81f36 <_svfprintf_r+0xd72>
   81d88:	2c10      	cmp	r4, #16
   81d8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81d8c:	4d07      	ldr	r5, [pc, #28]	; (81dac <_svfprintf_r+0xbe8>)
   81d8e:	f340 81a3 	ble.w	820d8 <_svfprintf_r+0xf14>
   81d92:	970a      	str	r7, [sp, #40]	; 0x28
   81d94:	f04f 0810 	mov.w	r8, #16
   81d98:	462f      	mov	r7, r5
   81d9a:	4662      	mov	r2, ip
   81d9c:	4625      	mov	r5, r4
   81d9e:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
   81da2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81da4:	e009      	b.n	81dba <_svfprintf_r+0xbf6>
   81da6:	bf00      	nop
   81da8:	00085bb4 	.word	0x00085bb4
   81dac:	00085b64 	.word	0x00085b64
   81db0:	3608      	adds	r6, #8
   81db2:	3d10      	subs	r5, #16
   81db4:	2d10      	cmp	r5, #16
   81db6:	f340 818b 	ble.w	820d0 <_svfprintf_r+0xf0c>
   81dba:	3301      	adds	r3, #1
   81dbc:	3210      	adds	r2, #16
   81dbe:	2b07      	cmp	r3, #7
   81dc0:	922d      	str	r2, [sp, #180]	; 0xb4
   81dc2:	932c      	str	r3, [sp, #176]	; 0xb0
   81dc4:	e886 0180 	stmia.w	r6, {r7, r8}
   81dc8:	ddf2      	ble.n	81db0 <_svfprintf_r+0xbec>
   81dca:	4658      	mov	r0, fp
   81dcc:	4621      	mov	r1, r4
   81dce:	aa2b      	add	r2, sp, #172	; 0xac
   81dd0:	f002 fe4e 	bl	84a70 <__ssprint_r>
   81dd4:	2800      	cmp	r0, #0
   81dd6:	f47f ab0d 	bne.w	813f4 <_svfprintf_r+0x230>
   81dda:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81ddc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81dde:	ae38      	add	r6, sp, #224	; 0xe0
   81de0:	e7e7      	b.n	81db2 <_svfprintf_r+0xbee>
   81de2:	980d      	ldr	r0, [sp, #52]	; 0x34
   81de4:	990c      	ldr	r1, [sp, #48]	; 0x30
   81de6:	aa2b      	add	r2, sp, #172	; 0xac
   81de8:	f002 fe42 	bl	84a70 <__ssprint_r>
   81dec:	2800      	cmp	r0, #0
   81dee:	f47f ab01 	bne.w	813f4 <_svfprintf_r+0x230>
   81df2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81df6:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81dfa:	ae38      	add	r6, sp, #224	; 0xe0
   81dfc:	f7ff bbda 	b.w	815b4 <_svfprintf_r+0x3f0>
   81e00:	1e6f      	subs	r7, r5, #1
   81e02:	2f00      	cmp	r7, #0
   81e04:	f77f af50 	ble.w	81ca8 <_svfprintf_r+0xae4>
   81e08:	2f10      	cmp	r7, #16
   81e0a:	4dae      	ldr	r5, [pc, #696]	; (820c4 <_svfprintf_r+0xf00>)
   81e0c:	dd23      	ble.n	81e56 <_svfprintf_r+0xc92>
   81e0e:	4643      	mov	r3, r8
   81e10:	f04f 0a10 	mov.w	sl, #16
   81e14:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81e18:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   81e1c:	e004      	b.n	81e28 <_svfprintf_r+0xc64>
   81e1e:	3f10      	subs	r7, #16
   81e20:	2f10      	cmp	r7, #16
   81e22:	f106 0608 	add.w	r6, r6, #8
   81e26:	dd15      	ble.n	81e54 <_svfprintf_r+0xc90>
   81e28:	3401      	adds	r4, #1
   81e2a:	3310      	adds	r3, #16
   81e2c:	2c07      	cmp	r4, #7
   81e2e:	932d      	str	r3, [sp, #180]	; 0xb4
   81e30:	942c      	str	r4, [sp, #176]	; 0xb0
   81e32:	e886 0420 	stmia.w	r6, {r5, sl}
   81e36:	ddf2      	ble.n	81e1e <_svfprintf_r+0xc5a>
   81e38:	4640      	mov	r0, r8
   81e3a:	4659      	mov	r1, fp
   81e3c:	aa2b      	add	r2, sp, #172	; 0xac
   81e3e:	f002 fe17 	bl	84a70 <__ssprint_r>
   81e42:	2800      	cmp	r0, #0
   81e44:	f47f aad6 	bne.w	813f4 <_svfprintf_r+0x230>
   81e48:	3f10      	subs	r7, #16
   81e4a:	2f10      	cmp	r7, #16
   81e4c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   81e4e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81e50:	ae38      	add	r6, sp, #224	; 0xe0
   81e52:	dce9      	bgt.n	81e28 <_svfprintf_r+0xc64>
   81e54:	4698      	mov	r8, r3
   81e56:	3401      	adds	r4, #1
   81e58:	44b8      	add	r8, r7
   81e5a:	2c07      	cmp	r4, #7
   81e5c:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81e60:	942c      	str	r4, [sp, #176]	; 0xb0
   81e62:	e886 00a0 	stmia.w	r6, {r5, r7}
   81e66:	f77f af1e 	ble.w	81ca6 <_svfprintf_r+0xae2>
   81e6a:	980d      	ldr	r0, [sp, #52]	; 0x34
   81e6c:	990c      	ldr	r1, [sp, #48]	; 0x30
   81e6e:	aa2b      	add	r2, sp, #172	; 0xac
   81e70:	f002 fdfe 	bl	84a70 <__ssprint_r>
   81e74:	2800      	cmp	r0, #0
   81e76:	f47f aabd 	bne.w	813f4 <_svfprintf_r+0x230>
   81e7a:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   81e7e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81e80:	ae38      	add	r6, sp, #224	; 0xe0
   81e82:	e711      	b.n	81ca8 <_svfprintf_r+0xae4>
   81e84:	4694      	mov	ip, r2
   81e86:	3301      	adds	r3, #1
   81e88:	44a4      	add	ip, r4
   81e8a:	2b07      	cmp	r3, #7
   81e8c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81e90:	932c      	str	r3, [sp, #176]	; 0xb0
   81e92:	6035      	str	r5, [r6, #0]
   81e94:	6074      	str	r4, [r6, #4]
   81e96:	f77f ac06 	ble.w	816a6 <_svfprintf_r+0x4e2>
   81e9a:	e713      	b.n	81cc4 <_svfprintf_r+0xb00>
   81e9c:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
   81ea0:	4620      	mov	r0, r4
   81ea2:	4629      	mov	r1, r5
   81ea4:	220a      	movs	r2, #10
   81ea6:	2300      	movs	r3, #0
   81ea8:	f003 fb60 	bl	8556c <__aeabi_uldivmod>
   81eac:	3230      	adds	r2, #48	; 0x30
   81eae:	f88b 2000 	strb.w	r2, [fp]
   81eb2:	4620      	mov	r0, r4
   81eb4:	4629      	mov	r1, r5
   81eb6:	220a      	movs	r2, #10
   81eb8:	2300      	movs	r3, #0
   81eba:	f003 fb57 	bl	8556c <__aeabi_uldivmod>
   81ebe:	4604      	mov	r4, r0
   81ec0:	460d      	mov	r5, r1
   81ec2:	ea54 0c05 	orrs.w	ip, r4, r5
   81ec6:	465f      	mov	r7, fp
   81ec8:	f10b 3bff 	add.w	fp, fp, #4294967295
   81ecc:	d1e8      	bne.n	81ea0 <_svfprintf_r+0xcdc>
   81ece:	9d08      	ldr	r5, [sp, #32]
   81ed0:	1bec      	subs	r4, r5, r7
   81ed2:	f7ff bb05 	b.w	814e0 <_svfprintf_r+0x31c>
   81ed6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81ed8:	2301      	movs	r3, #1
   81eda:	682c      	ldr	r4, [r5, #0]
   81edc:	3504      	adds	r5, #4
   81ede:	9510      	str	r5, [sp, #64]	; 0x40
   81ee0:	2500      	movs	r5, #0
   81ee2:	f7ff bad9 	b.w	81498 <_svfprintf_r+0x2d4>
   81ee6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81ee8:	682c      	ldr	r4, [r5, #0]
   81eea:	3504      	adds	r5, #4
   81eec:	9510      	str	r5, [sp, #64]	; 0x40
   81eee:	2500      	movs	r5, #0
   81ef0:	f7ff bad2 	b.w	81498 <_svfprintf_r+0x2d4>
   81ef4:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81ef6:	682c      	ldr	r4, [r5, #0]
   81ef8:	3504      	adds	r5, #4
   81efa:	9510      	str	r5, [sp, #64]	; 0x40
   81efc:	17e5      	asrs	r5, r4, #31
   81efe:	4622      	mov	r2, r4
   81f00:	462b      	mov	r3, r5
   81f02:	2a00      	cmp	r2, #0
   81f04:	f173 0c00 	sbcs.w	ip, r3, #0
   81f08:	f6bf ac6c 	bge.w	817e4 <_svfprintf_r+0x620>
   81f0c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   81f10:	4264      	negs	r4, r4
   81f12:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   81f16:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   81f1a:	2301      	movs	r3, #1
   81f1c:	f7ff bac0 	b.w	814a0 <_svfprintf_r+0x2dc>
   81f20:	980d      	ldr	r0, [sp, #52]	; 0x34
   81f22:	990c      	ldr	r1, [sp, #48]	; 0x30
   81f24:	aa2b      	add	r2, sp, #172	; 0xac
   81f26:	f002 fda3 	bl	84a70 <__ssprint_r>
   81f2a:	2800      	cmp	r0, #0
   81f2c:	f47f aa62 	bne.w	813f4 <_svfprintf_r+0x230>
   81f30:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81f34:	ae38      	add	r6, sp, #224	; 0xe0
   81f36:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81f38:	9c25      	ldr	r4, [sp, #148]	; 0x94
   81f3a:	442f      	add	r7, r5
   81f3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81f3e:	42ac      	cmp	r4, r5
   81f40:	db42      	blt.n	81fc8 <_svfprintf_r+0xe04>
   81f42:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81f44:	07e9      	lsls	r1, r5, #31
   81f46:	d43f      	bmi.n	81fc8 <_svfprintf_r+0xe04>
   81f48:	9811      	ldr	r0, [sp, #68]	; 0x44
   81f4a:	ebc7 050a 	rsb	r5, r7, sl
   81f4e:	1b04      	subs	r4, r0, r4
   81f50:	42ac      	cmp	r4, r5
   81f52:	bfb8      	it	lt
   81f54:	4625      	movlt	r5, r4
   81f56:	2d00      	cmp	r5, #0
   81f58:	dd0b      	ble.n	81f72 <_svfprintf_r+0xdae>
   81f5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81f5c:	44ac      	add	ip, r5
   81f5e:	3301      	adds	r3, #1
   81f60:	2b07      	cmp	r3, #7
   81f62:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81f66:	6037      	str	r7, [r6, #0]
   81f68:	6075      	str	r5, [r6, #4]
   81f6a:	932c      	str	r3, [sp, #176]	; 0xb0
   81f6c:	f300 824c 	bgt.w	82408 <_svfprintf_r+0x1244>
   81f70:	3608      	adds	r6, #8
   81f72:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   81f76:	1b64      	subs	r4, r4, r5
   81f78:	2c00      	cmp	r4, #0
   81f7a:	f77f ab95 	ble.w	816a8 <_svfprintf_r+0x4e4>
   81f7e:	2c10      	cmp	r4, #16
   81f80:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81f82:	4d50      	ldr	r5, [pc, #320]	; (820c4 <_svfprintf_r+0xf00>)
   81f84:	f77f af7f 	ble.w	81e86 <_svfprintf_r+0xcc2>
   81f88:	2710      	movs	r7, #16
   81f8a:	4662      	mov	r2, ip
   81f8c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81f90:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   81f94:	e004      	b.n	81fa0 <_svfprintf_r+0xddc>
   81f96:	3608      	adds	r6, #8
   81f98:	3c10      	subs	r4, #16
   81f9a:	2c10      	cmp	r4, #16
   81f9c:	f77f af72 	ble.w	81e84 <_svfprintf_r+0xcc0>
   81fa0:	3301      	adds	r3, #1
   81fa2:	3210      	adds	r2, #16
   81fa4:	2b07      	cmp	r3, #7
   81fa6:	922d      	str	r2, [sp, #180]	; 0xb4
   81fa8:	932c      	str	r3, [sp, #176]	; 0xb0
   81faa:	e886 00a0 	stmia.w	r6, {r5, r7}
   81fae:	ddf2      	ble.n	81f96 <_svfprintf_r+0xdd2>
   81fb0:	4640      	mov	r0, r8
   81fb2:	4651      	mov	r1, sl
   81fb4:	aa2b      	add	r2, sp, #172	; 0xac
   81fb6:	f002 fd5b 	bl	84a70 <__ssprint_r>
   81fba:	2800      	cmp	r0, #0
   81fbc:	f47f aa1a 	bne.w	813f4 <_svfprintf_r+0x230>
   81fc0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81fc2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81fc4:	ae38      	add	r6, sp, #224	; 0xe0
   81fc6:	e7e7      	b.n	81f98 <_svfprintf_r+0xdd4>
   81fc8:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81fca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81fcc:	44ac      	add	ip, r5
   81fce:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81fd0:	3301      	adds	r3, #1
   81fd2:	6035      	str	r5, [r6, #0]
   81fd4:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81fd6:	2b07      	cmp	r3, #7
   81fd8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81fdc:	6075      	str	r5, [r6, #4]
   81fde:	932c      	str	r3, [sp, #176]	; 0xb0
   81fe0:	f300 81f4 	bgt.w	823cc <_svfprintf_r+0x1208>
   81fe4:	3608      	adds	r6, #8
   81fe6:	e7af      	b.n	81f48 <_svfprintf_r+0xd84>
   81fe8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81fea:	07ea      	lsls	r2, r5, #31
   81fec:	f53f ae2a 	bmi.w	81c44 <_svfprintf_r+0xa80>
   81ff0:	3401      	adds	r4, #1
   81ff2:	f10c 0801 	add.w	r8, ip, #1
   81ff6:	2301      	movs	r3, #1
   81ff8:	2c07      	cmp	r4, #7
   81ffa:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81ffe:	942c      	str	r4, [sp, #176]	; 0xb0
   82000:	6037      	str	r7, [r6, #0]
   82002:	6073      	str	r3, [r6, #4]
   82004:	f77f ae4f 	ble.w	81ca6 <_svfprintf_r+0xae2>
   82008:	e72f      	b.n	81e6a <_svfprintf_r+0xca6>
   8200a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8200c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8200e:	aa2b      	add	r2, sp, #172	; 0xac
   82010:	f002 fd2e 	bl	84a70 <__ssprint_r>
   82014:	2800      	cmp	r0, #0
   82016:	f47f a9ed 	bne.w	813f4 <_svfprintf_r+0x230>
   8201a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   8201c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   8201e:	ae38      	add	r6, sp, #224	; 0xe0
   82020:	e61c      	b.n	81c5c <_svfprintf_r+0xa98>
   82022:	980d      	ldr	r0, [sp, #52]	; 0x34
   82024:	990c      	ldr	r1, [sp, #48]	; 0x30
   82026:	aa2b      	add	r2, sp, #172	; 0xac
   82028:	f002 fd22 	bl	84a70 <__ssprint_r>
   8202c:	2800      	cmp	r0, #0
   8202e:	f47f a9e1 	bne.w	813f4 <_svfprintf_r+0x230>
   82032:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82036:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82038:	ae38      	add	r6, sp, #224	; 0xe0
   8203a:	e61e      	b.n	81c7a <_svfprintf_r+0xab6>
   8203c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8203e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82040:	aa2b      	add	r2, sp, #172	; 0xac
   82042:	f002 fd15 	bl	84a70 <__ssprint_r>
   82046:	2800      	cmp	r0, #0
   82048:	f47f a9d4 	bne.w	813f4 <_svfprintf_r+0x230>
   8204c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82050:	ae38      	add	r6, sp, #224	; 0xe0
   82052:	f7ff bad7 	b.w	81604 <_svfprintf_r+0x440>
   82056:	f002 fcd1 	bl	849fc <__fpclassifyd>
   8205a:	2800      	cmp	r0, #0
   8205c:	f040 80bb 	bne.w	821d6 <_svfprintf_r+0x1012>
   82060:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82062:	4f19      	ldr	r7, [pc, #100]	; (820c8 <_svfprintf_r+0xf04>)
   82064:	4b19      	ldr	r3, [pc, #100]	; (820cc <_svfprintf_r+0xf08>)
   82066:	f04f 0c03 	mov.w	ip, #3
   8206a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   8206e:	9409      	str	r4, [sp, #36]	; 0x24
   82070:	900a      	str	r0, [sp, #40]	; 0x28
   82072:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82076:	9014      	str	r0, [sp, #80]	; 0x50
   82078:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   8207c:	bfd8      	it	le
   8207e:	461f      	movle	r7, r3
   82080:	4664      	mov	r4, ip
   82082:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82086:	f7ff ba34 	b.w	814f2 <_svfprintf_r+0x32e>
   8208a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8208c:	0664      	lsls	r4, r4, #25
   8208e:	f140 8150 	bpl.w	82332 <_svfprintf_r+0x116e>
   82092:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82096:	2500      	movs	r5, #0
   82098:	f8bc 4000 	ldrh.w	r4, [ip]
   8209c:	f10c 0c04 	add.w	ip, ip, #4
   820a0:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   820a4:	f7ff b9e4 	b.w	81470 <_svfprintf_r+0x2ac>
   820a8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   820ac:	f01c 0f10 	tst.w	ip, #16
   820b0:	f000 8146 	beq.w	82340 <_svfprintf_r+0x117c>
   820b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
   820b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   820b8:	6823      	ldr	r3, [r4, #0]
   820ba:	3404      	adds	r4, #4
   820bc:	9410      	str	r4, [sp, #64]	; 0x40
   820be:	601d      	str	r5, [r3, #0]
   820c0:	f7ff b8a6 	b.w	81210 <_svfprintf_r+0x4c>
   820c4:	00085b64 	.word	0x00085b64
   820c8:	00085b80 	.word	0x00085b80
   820cc:	00085b7c 	.word	0x00085b7c
   820d0:	462c      	mov	r4, r5
   820d2:	463d      	mov	r5, r7
   820d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   820d6:	4694      	mov	ip, r2
   820d8:	3301      	adds	r3, #1
   820da:	44a4      	add	ip, r4
   820dc:	2b07      	cmp	r3, #7
   820de:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   820e2:	932c      	str	r3, [sp, #176]	; 0xb0
   820e4:	6035      	str	r5, [r6, #0]
   820e6:	6074      	str	r4, [r6, #4]
   820e8:	f73f af1a 	bgt.w	81f20 <_svfprintf_r+0xd5c>
   820ec:	3608      	adds	r6, #8
   820ee:	e722      	b.n	81f36 <_svfprintf_r+0xd72>
   820f0:	980d      	ldr	r0, [sp, #52]	; 0x34
   820f2:	990c      	ldr	r1, [sp, #48]	; 0x30
   820f4:	aa2b      	add	r2, sp, #172	; 0xac
   820f6:	f002 fcbb 	bl	84a70 <__ssprint_r>
   820fa:	2800      	cmp	r0, #0
   820fc:	f47f a97a 	bne.w	813f4 <_svfprintf_r+0x230>
   82100:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82104:	ae38      	add	r6, sp, #224	; 0xe0
   82106:	e507      	b.n	81b18 <_svfprintf_r+0x954>
   82108:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   8210a:	49b7      	ldr	r1, [pc, #732]	; (823e8 <_svfprintf_r+0x1224>)
   8210c:	3201      	adds	r2, #1
   8210e:	f10c 0c01 	add.w	ip, ip, #1
   82112:	2001      	movs	r0, #1
   82114:	2a07      	cmp	r2, #7
   82116:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8211a:	922c      	str	r2, [sp, #176]	; 0xb0
   8211c:	6031      	str	r1, [r6, #0]
   8211e:	6070      	str	r0, [r6, #4]
   82120:	f300 80f7 	bgt.w	82312 <_svfprintf_r+0x114e>
   82124:	3608      	adds	r6, #8
   82126:	461c      	mov	r4, r3
   82128:	b92c      	cbnz	r4, 82136 <_svfprintf_r+0xf72>
   8212a:	9d11      	ldr	r5, [sp, #68]	; 0x44
   8212c:	b91d      	cbnz	r5, 82136 <_svfprintf_r+0xf72>
   8212e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82130:	07e8      	lsls	r0, r5, #31
   82132:	f57f aab9 	bpl.w	816a8 <_svfprintf_r+0x4e4>
   82136:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82138:	9d15      	ldr	r5, [sp, #84]	; 0x54
   8213a:	9918      	ldr	r1, [sp, #96]	; 0x60
   8213c:	3301      	adds	r3, #1
   8213e:	6035      	str	r5, [r6, #0]
   82140:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82142:	4461      	add	r1, ip
   82144:	2b07      	cmp	r3, #7
   82146:	912d      	str	r1, [sp, #180]	; 0xb4
   82148:	6075      	str	r5, [r6, #4]
   8214a:	932c      	str	r3, [sp, #176]	; 0xb0
   8214c:	f300 81de 	bgt.w	8250c <_svfprintf_r+0x1348>
   82150:	f106 0208 	add.w	r2, r6, #8
   82154:	4264      	negs	r4, r4
   82156:	2c00      	cmp	r4, #0
   82158:	f340 810b 	ble.w	82372 <_svfprintf_r+0x11ae>
   8215c:	2c10      	cmp	r4, #16
   8215e:	4da3      	ldr	r5, [pc, #652]	; (823ec <_svfprintf_r+0x1228>)
   82160:	f340 8148 	ble.w	823f4 <_svfprintf_r+0x1230>
   82164:	46a3      	mov	fp, r4
   82166:	2610      	movs	r6, #16
   82168:	460c      	mov	r4, r1
   8216a:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   8216e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82172:	e006      	b.n	82182 <_svfprintf_r+0xfbe>
   82174:	3208      	adds	r2, #8
   82176:	f1ab 0b10 	sub.w	fp, fp, #16
   8217a:	f1bb 0f10 	cmp.w	fp, #16
   8217e:	f340 8137 	ble.w	823f0 <_svfprintf_r+0x122c>
   82182:	3301      	adds	r3, #1
   82184:	3410      	adds	r4, #16
   82186:	2b07      	cmp	r3, #7
   82188:	942d      	str	r4, [sp, #180]	; 0xb4
   8218a:	932c      	str	r3, [sp, #176]	; 0xb0
   8218c:	e882 0060 	stmia.w	r2, {r5, r6}
   82190:	ddf0      	ble.n	82174 <_svfprintf_r+0xfb0>
   82192:	4640      	mov	r0, r8
   82194:	4651      	mov	r1, sl
   82196:	aa2b      	add	r2, sp, #172	; 0xac
   82198:	f002 fc6a 	bl	84a70 <__ssprint_r>
   8219c:	2800      	cmp	r0, #0
   8219e:	f47f a929 	bne.w	813f4 <_svfprintf_r+0x230>
   821a2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
   821a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   821a6:	aa38      	add	r2, sp, #224	; 0xe0
   821a8:	e7e5      	b.n	82176 <_svfprintf_r+0xfb2>
   821aa:	9c09      	ldr	r4, [sp, #36]	; 0x24
   821ac:	f109 0901 	add.w	r9, r9, #1
   821b0:	f044 0420 	orr.w	r4, r4, #32
   821b4:	9409      	str	r4, [sp, #36]	; 0x24
   821b6:	f893 8001 	ldrb.w	r8, [r3, #1]
   821ba:	f7ff b85f 	b.w	8127c <_svfprintf_r+0xb8>
   821be:	980d      	ldr	r0, [sp, #52]	; 0x34
   821c0:	990c      	ldr	r1, [sp, #48]	; 0x30
   821c2:	aa2b      	add	r2, sp, #172	; 0xac
   821c4:	f002 fc54 	bl	84a70 <__ssprint_r>
   821c8:	2800      	cmp	r0, #0
   821ca:	f47f a913 	bne.w	813f4 <_svfprintf_r+0x230>
   821ce:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   821d2:	ae38      	add	r6, sp, #224	; 0xe0
   821d4:	e4b6      	b.n	81b44 <_svfprintf_r+0x980>
   821d6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   821d8:	f028 0a20 	bic.w	sl, r8, #32
   821dc:	3501      	adds	r5, #1
   821de:	f000 80a5 	beq.w	8232c <_svfprintf_r+0x1168>
   821e2:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   821e6:	d104      	bne.n	821f2 <_svfprintf_r+0x102e>
   821e8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   821ea:	2d00      	cmp	r5, #0
   821ec:	bf08      	it	eq
   821ee:	2501      	moveq	r5, #1
   821f0:	950a      	str	r5, [sp, #40]	; 0x28
   821f2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821f6:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   821fa:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
   821fe:	2b00      	cmp	r3, #0
   82200:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   82204:	f2c0 819c 	blt.w	82540 <_svfprintf_r+0x137c>
   82208:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   8220c:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
   82210:	f04f 0b00 	mov.w	fp, #0
   82214:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   82218:	f000 819b 	beq.w	82552 <_svfprintf_r+0x138e>
   8221c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
   82220:	f000 81a9 	beq.w	82576 <_svfprintf_r+0x13b2>
   82224:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   82228:	bf0a      	itet	eq
   8222a:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
   8222c:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   8222e:	1c65      	addeq	r5, r4, #1
   82230:	2002      	movs	r0, #2
   82232:	a925      	add	r1, sp, #148	; 0x94
   82234:	aa26      	add	r2, sp, #152	; 0x98
   82236:	ab29      	add	r3, sp, #164	; 0xa4
   82238:	e88d 0021 	stmia.w	sp, {r0, r5}
   8223c:	9203      	str	r2, [sp, #12]
   8223e:	9304      	str	r3, [sp, #16]
   82240:	9102      	str	r1, [sp, #8]
   82242:	980d      	ldr	r0, [sp, #52]	; 0x34
   82244:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82248:	f000 fad6 	bl	827f8 <_dtoa_r>
   8224c:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   82250:	4607      	mov	r7, r0
   82252:	d002      	beq.n	8225a <_svfprintf_r+0x1096>
   82254:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82258:	d105      	bne.n	82266 <_svfprintf_r+0x10a2>
   8225a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8225e:	f01c 0f01 	tst.w	ip, #1
   82262:	f000 819c 	beq.w	8259e <_svfprintf_r+0x13da>
   82266:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   8226a:	eb07 0405 	add.w	r4, r7, r5
   8226e:	f000 811c 	beq.w	824aa <_svfprintf_r+0x12e6>
   82272:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   82276:	2200      	movs	r2, #0
   82278:	2300      	movs	r3, #0
   8227a:	f003 f91d 	bl	854b8 <__aeabi_dcmpeq>
   8227e:	2800      	cmp	r0, #0
   82280:	f040 8105 	bne.w	8248e <_svfprintf_r+0x12ca>
   82284:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82286:	429c      	cmp	r4, r3
   82288:	d906      	bls.n	82298 <_svfprintf_r+0x10d4>
   8228a:	2130      	movs	r1, #48	; 0x30
   8228c:	1c5a      	adds	r2, r3, #1
   8228e:	9229      	str	r2, [sp, #164]	; 0xa4
   82290:	7019      	strb	r1, [r3, #0]
   82292:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82294:	429c      	cmp	r4, r3
   82296:	d8f9      	bhi.n	8228c <_svfprintf_r+0x10c8>
   82298:	1bdb      	subs	r3, r3, r7
   8229a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   8229e:	9311      	str	r3, [sp, #68]	; 0x44
   822a0:	f000 80ed 	beq.w	8247e <_svfprintf_r+0x12ba>
   822a4:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   822a8:	f340 81f2 	ble.w	82690 <_svfprintf_r+0x14cc>
   822ac:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   822b0:	f000 8168 	beq.w	82584 <_svfprintf_r+0x13c0>
   822b4:	9c25      	ldr	r4, [sp, #148]	; 0x94
   822b6:	9414      	str	r4, [sp, #80]	; 0x50
   822b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   822ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
   822bc:	42ac      	cmp	r4, r5
   822be:	f300 8132 	bgt.w	82526 <_svfprintf_r+0x1362>
   822c2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   822c6:	f01c 0f01 	tst.w	ip, #1
   822ca:	f040 81ad 	bne.w	82628 <_svfprintf_r+0x1464>
   822ce:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
   822d2:	462c      	mov	r4, r5
   822d4:	f04f 0867 	mov.w	r8, #103	; 0x67
   822d8:	f1bb 0f00 	cmp.w	fp, #0
   822dc:	f040 80b2 	bne.w	82444 <_svfprintf_r+0x1280>
   822e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
   822e2:	930b      	str	r3, [sp, #44]	; 0x2c
   822e4:	9509      	str	r5, [sp, #36]	; 0x24
   822e6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
   822ea:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   822ee:	f7ff b900 	b.w	814f2 <_svfprintf_r+0x32e>
   822f2:	980d      	ldr	r0, [sp, #52]	; 0x34
   822f4:	2140      	movs	r1, #64	; 0x40
   822f6:	f001 fad1 	bl	8389c <_malloc_r>
   822fa:	6020      	str	r0, [r4, #0]
   822fc:	6120      	str	r0, [r4, #16]
   822fe:	2800      	cmp	r0, #0
   82300:	f000 81bf 	beq.w	82682 <_svfprintf_r+0x14be>
   82304:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   82308:	2340      	movs	r3, #64	; 0x40
   8230a:	f8cc 3014 	str.w	r3, [ip, #20]
   8230e:	f7fe bf6f 	b.w	811f0 <_svfprintf_r+0x2c>
   82312:	980d      	ldr	r0, [sp, #52]	; 0x34
   82314:	990c      	ldr	r1, [sp, #48]	; 0x30
   82316:	aa2b      	add	r2, sp, #172	; 0xac
   82318:	f002 fbaa 	bl	84a70 <__ssprint_r>
   8231c:	2800      	cmp	r0, #0
   8231e:	f47f a869 	bne.w	813f4 <_svfprintf_r+0x230>
   82322:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82324:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82328:	ae38      	add	r6, sp, #224	; 0xe0
   8232a:	e6fd      	b.n	82128 <_svfprintf_r+0xf64>
   8232c:	2406      	movs	r4, #6
   8232e:	940a      	str	r4, [sp, #40]	; 0x28
   82330:	e75f      	b.n	821f2 <_svfprintf_r+0x102e>
   82332:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82334:	682c      	ldr	r4, [r5, #0]
   82336:	3504      	adds	r5, #4
   82338:	9510      	str	r5, [sp, #64]	; 0x40
   8233a:	2500      	movs	r5, #0
   8233c:	f7ff b898 	b.w	81470 <_svfprintf_r+0x2ac>
   82340:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82344:	f01c 0f40 	tst.w	ip, #64	; 0x40
   82348:	f000 8087 	beq.w	8245a <_svfprintf_r+0x1296>
   8234c:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8234e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82350:	6823      	ldr	r3, [r4, #0]
   82352:	3404      	adds	r4, #4
   82354:	9410      	str	r4, [sp, #64]	; 0x40
   82356:	801d      	strh	r5, [r3, #0]
   82358:	f7fe bf5a 	b.w	81210 <_svfprintf_r+0x4c>
   8235c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8235e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82360:	aa2b      	add	r2, sp, #172	; 0xac
   82362:	f002 fb85 	bl	84a70 <__ssprint_r>
   82366:	2800      	cmp	r0, #0
   82368:	f47f a844 	bne.w	813f4 <_svfprintf_r+0x230>
   8236c:	992d      	ldr	r1, [sp, #180]	; 0xb4
   8236e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82370:	aa38      	add	r2, sp, #224	; 0xe0
   82372:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
   82376:	3301      	adds	r3, #1
   82378:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8237a:	448c      	add	ip, r1
   8237c:	2b07      	cmp	r3, #7
   8237e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82382:	932c      	str	r3, [sp, #176]	; 0xb0
   82384:	6017      	str	r7, [r2, #0]
   82386:	6054      	str	r4, [r2, #4]
   82388:	f73f ac9c 	bgt.w	81cc4 <_svfprintf_r+0xb00>
   8238c:	f102 0608 	add.w	r6, r2, #8
   82390:	f7ff b98a 	b.w	816a8 <_svfprintf_r+0x4e4>
   82394:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   82398:	f7fe fee4 	bl	81164 <strlen>
   8239c:	9510      	str	r5, [sp, #64]	; 0x40
   8239e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   823a0:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
   823a4:	4604      	mov	r4, r0
   823a6:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   823aa:	9514      	str	r5, [sp, #80]	; 0x50
   823ac:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   823b0:	f7ff b89f 	b.w	814f2 <_svfprintf_r+0x32e>
   823b4:	980d      	ldr	r0, [sp, #52]	; 0x34
   823b6:	990c      	ldr	r1, [sp, #48]	; 0x30
   823b8:	aa2b      	add	r2, sp, #172	; 0xac
   823ba:	f002 fb59 	bl	84a70 <__ssprint_r>
   823be:	2800      	cmp	r0, #0
   823c0:	f47f a818 	bne.w	813f4 <_svfprintf_r+0x230>
   823c4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   823c8:	ae38      	add	r6, sp, #224	; 0xe0
   823ca:	e4d6      	b.n	81d7a <_svfprintf_r+0xbb6>
   823cc:	980d      	ldr	r0, [sp, #52]	; 0x34
   823ce:	990c      	ldr	r1, [sp, #48]	; 0x30
   823d0:	aa2b      	add	r2, sp, #172	; 0xac
   823d2:	f002 fb4d 	bl	84a70 <__ssprint_r>
   823d6:	2800      	cmp	r0, #0
   823d8:	f47f a80c 	bne.w	813f4 <_svfprintf_r+0x230>
   823dc:	9c25      	ldr	r4, [sp, #148]	; 0x94
   823de:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   823e2:	ae38      	add	r6, sp, #224	; 0xe0
   823e4:	e5b0      	b.n	81f48 <_svfprintf_r+0xd84>
   823e6:	bf00      	nop
   823e8:	00085bb4 	.word	0x00085bb4
   823ec:	00085b64 	.word	0x00085b64
   823f0:	4621      	mov	r1, r4
   823f2:	465c      	mov	r4, fp
   823f4:	3301      	adds	r3, #1
   823f6:	4421      	add	r1, r4
   823f8:	2b07      	cmp	r3, #7
   823fa:	912d      	str	r1, [sp, #180]	; 0xb4
   823fc:	932c      	str	r3, [sp, #176]	; 0xb0
   823fe:	6015      	str	r5, [r2, #0]
   82400:	6054      	str	r4, [r2, #4]
   82402:	dcab      	bgt.n	8235c <_svfprintf_r+0x1198>
   82404:	3208      	adds	r2, #8
   82406:	e7b4      	b.n	82372 <_svfprintf_r+0x11ae>
   82408:	980d      	ldr	r0, [sp, #52]	; 0x34
   8240a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8240c:	aa2b      	add	r2, sp, #172	; 0xac
   8240e:	f002 fb2f 	bl	84a70 <__ssprint_r>
   82412:	2800      	cmp	r0, #0
   82414:	f47e afee 	bne.w	813f4 <_svfprintf_r+0x230>
   82418:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8241a:	9911      	ldr	r1, [sp, #68]	; 0x44
   8241c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82420:	1b0c      	subs	r4, r1, r4
   82422:	ae38      	add	r6, sp, #224	; 0xe0
   82424:	e5a5      	b.n	81f72 <_svfprintf_r+0xdae>
   82426:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82428:	46ba      	mov	sl, r7
   8242a:	2c06      	cmp	r4, #6
   8242c:	bf28      	it	cs
   8242e:	2406      	movcs	r4, #6
   82430:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   82434:	970a      	str	r7, [sp, #40]	; 0x28
   82436:	9714      	str	r7, [sp, #80]	; 0x50
   82438:	9510      	str	r5, [sp, #64]	; 0x40
   8243a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8243e:	4f97      	ldr	r7, [pc, #604]	; (8269c <_svfprintf_r+0x14d8>)
   82440:	f7ff b857 	b.w	814f2 <_svfprintf_r+0x32e>
   82444:	9d12      	ldr	r5, [sp, #72]	; 0x48
   82446:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   8244a:	9509      	str	r5, [sp, #36]	; 0x24
   8244c:	2500      	movs	r5, #0
   8244e:	930b      	str	r3, [sp, #44]	; 0x2c
   82450:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82454:	950a      	str	r5, [sp, #40]	; 0x28
   82456:	f7ff b84f 	b.w	814f8 <_svfprintf_r+0x334>
   8245a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8245e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   82460:	f8dc 3000 	ldr.w	r3, [ip]
   82464:	f10c 0c04 	add.w	ip, ip, #4
   82468:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   8246c:	601c      	str	r4, [r3, #0]
   8246e:	f7fe becf 	b.w	81210 <_svfprintf_r+0x4c>
   82472:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82476:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   8247a:	f7ff ba99 	b.w	819b0 <_svfprintf_r+0x7ec>
   8247e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82480:	1cdc      	adds	r4, r3, #3
   82482:	db19      	blt.n	824b8 <_svfprintf_r+0x12f4>
   82484:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82486:	429c      	cmp	r4, r3
   82488:	db16      	blt.n	824b8 <_svfprintf_r+0x12f4>
   8248a:	9314      	str	r3, [sp, #80]	; 0x50
   8248c:	e714      	b.n	822b8 <_svfprintf_r+0x10f4>
   8248e:	4623      	mov	r3, r4
   82490:	e702      	b.n	82298 <_svfprintf_r+0x10d4>
   82492:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   82496:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8249a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8249c:	9510      	str	r5, [sp, #64]	; 0x40
   8249e:	900a      	str	r0, [sp, #40]	; 0x28
   824a0:	9014      	str	r0, [sp, #80]	; 0x50
   824a2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   824a6:	f7ff b824 	b.w	814f2 <_svfprintf_r+0x32e>
   824aa:	783b      	ldrb	r3, [r7, #0]
   824ac:	2b30      	cmp	r3, #48	; 0x30
   824ae:	f000 80ad 	beq.w	8260c <_svfprintf_r+0x1448>
   824b2:	9d25      	ldr	r5, [sp, #148]	; 0x94
   824b4:	442c      	add	r4, r5
   824b6:	e6dc      	b.n	82272 <_svfprintf_r+0x10ae>
   824b8:	f1a8 0802 	sub.w	r8, r8, #2
   824bc:	1e59      	subs	r1, r3, #1
   824be:	2900      	cmp	r1, #0
   824c0:	9125      	str	r1, [sp, #148]	; 0x94
   824c2:	bfba      	itte	lt
   824c4:	4249      	neglt	r1, r1
   824c6:	232d      	movlt	r3, #45	; 0x2d
   824c8:	232b      	movge	r3, #43	; 0x2b
   824ca:	2909      	cmp	r1, #9
   824cc:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
   824d0:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
   824d4:	dc65      	bgt.n	825a2 <_svfprintf_r+0x13de>
   824d6:	2330      	movs	r3, #48	; 0x30
   824d8:	3130      	adds	r1, #48	; 0x30
   824da:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
   824de:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
   824e2:	ab28      	add	r3, sp, #160	; 0xa0
   824e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
   824e6:	aa27      	add	r2, sp, #156	; 0x9c
   824e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   824ea:	1a9a      	subs	r2, r3, r2
   824ec:	2d01      	cmp	r5, #1
   824ee:	9219      	str	r2, [sp, #100]	; 0x64
   824f0:	4414      	add	r4, r2
   824f2:	f340 80b7 	ble.w	82664 <_svfprintf_r+0x14a0>
   824f6:	3401      	adds	r4, #1
   824f8:	2500      	movs	r5, #0
   824fa:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   824fe:	9514      	str	r5, [sp, #80]	; 0x50
   82500:	e6ea      	b.n	822d8 <_svfprintf_r+0x1114>
   82502:	2400      	movs	r4, #0
   82504:	4681      	mov	r9, r0
   82506:	940a      	str	r4, [sp, #40]	; 0x28
   82508:	f7fe beba 	b.w	81280 <_svfprintf_r+0xbc>
   8250c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8250e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82510:	aa2b      	add	r2, sp, #172	; 0xac
   82512:	f002 faad 	bl	84a70 <__ssprint_r>
   82516:	2800      	cmp	r0, #0
   82518:	f47e af6c 	bne.w	813f4 <_svfprintf_r+0x230>
   8251c:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8251e:	992d      	ldr	r1, [sp, #180]	; 0xb4
   82520:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82522:	aa38      	add	r2, sp, #224	; 0xe0
   82524:	e616      	b.n	82154 <_svfprintf_r+0xf90>
   82526:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82528:	9d11      	ldr	r5, [sp, #68]	; 0x44
   8252a:	2c00      	cmp	r4, #0
   8252c:	bfd4      	ite	le
   8252e:	f1c4 0402 	rsble	r4, r4, #2
   82532:	2401      	movgt	r4, #1
   82534:	442c      	add	r4, r5
   82536:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8253a:	f04f 0867 	mov.w	r8, #103	; 0x67
   8253e:	e6cb      	b.n	822d8 <_svfprintf_r+0x1114>
   82540:	9917      	ldr	r1, [sp, #92]	; 0x5c
   82542:	9816      	ldr	r0, [sp, #88]	; 0x58
   82544:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   82548:	9020      	str	r0, [sp, #128]	; 0x80
   8254a:	9121      	str	r1, [sp, #132]	; 0x84
   8254c:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   82550:	e660      	b.n	82214 <_svfprintf_r+0x1050>
   82552:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82554:	2003      	movs	r0, #3
   82556:	a925      	add	r1, sp, #148	; 0x94
   82558:	aa26      	add	r2, sp, #152	; 0x98
   8255a:	ab29      	add	r3, sp, #164	; 0xa4
   8255c:	9501      	str	r5, [sp, #4]
   8255e:	9000      	str	r0, [sp, #0]
   82560:	9203      	str	r2, [sp, #12]
   82562:	9304      	str	r3, [sp, #16]
   82564:	9102      	str	r1, [sp, #8]
   82566:	980d      	ldr	r0, [sp, #52]	; 0x34
   82568:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   8256c:	f000 f944 	bl	827f8 <_dtoa_r>
   82570:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82572:	4607      	mov	r7, r0
   82574:	e677      	b.n	82266 <_svfprintf_r+0x10a2>
   82576:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82578:	2003      	movs	r0, #3
   8257a:	a925      	add	r1, sp, #148	; 0x94
   8257c:	aa26      	add	r2, sp, #152	; 0x98
   8257e:	ab29      	add	r3, sp, #164	; 0xa4
   82580:	9401      	str	r4, [sp, #4]
   82582:	e7ec      	b.n	8255e <_svfprintf_r+0x139a>
   82584:	9d25      	ldr	r5, [sp, #148]	; 0x94
   82586:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82588:	2d00      	cmp	r5, #0
   8258a:	9514      	str	r5, [sp, #80]	; 0x50
   8258c:	dd63      	ble.n	82656 <_svfprintf_r+0x1492>
   8258e:	bbb4      	cbnz	r4, 825fe <_svfprintf_r+0x143a>
   82590:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82592:	07e8      	lsls	r0, r5, #31
   82594:	d433      	bmi.n	825fe <_svfprintf_r+0x143a>
   82596:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82598:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8259c:	e69c      	b.n	822d8 <_svfprintf_r+0x1114>
   8259e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   825a0:	e67a      	b.n	82298 <_svfprintf_r+0x10d4>
   825a2:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
   825a6:	4d3e      	ldr	r5, [pc, #248]	; (826a0 <_svfprintf_r+0x14dc>)
   825a8:	17cb      	asrs	r3, r1, #31
   825aa:	fb85 5001 	smull	r5, r0, r5, r1
   825ae:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
   825b2:	eb00 0380 	add.w	r3, r0, r0, lsl #2
   825b6:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
   825ba:	2809      	cmp	r0, #9
   825bc:	4613      	mov	r3, r2
   825be:	f101 0230 	add.w	r2, r1, #48	; 0x30
   825c2:	701a      	strb	r2, [r3, #0]
   825c4:	4601      	mov	r1, r0
   825c6:	f103 32ff 	add.w	r2, r3, #4294967295
   825ca:	dcec      	bgt.n	825a6 <_svfprintf_r+0x13e2>
   825cc:	f100 0130 	add.w	r1, r0, #48	; 0x30
   825d0:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
   825d4:	b2c9      	uxtb	r1, r1
   825d6:	4294      	cmp	r4, r2
   825d8:	f803 1c01 	strb.w	r1, [r3, #-1]
   825dc:	d95a      	bls.n	82694 <_svfprintf_r+0x14d0>
   825de:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
   825e2:	461a      	mov	r2, r3
   825e4:	e001      	b.n	825ea <_svfprintf_r+0x1426>
   825e6:	f812 1b01 	ldrb.w	r1, [r2], #1
   825ea:	42a2      	cmp	r2, r4
   825ec:	f800 1f01 	strb.w	r1, [r0, #1]!
   825f0:	d1f9      	bne.n	825e6 <_svfprintf_r+0x1422>
   825f2:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
   825f6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
   825fa:	3bf6      	subs	r3, #246	; 0xf6
   825fc:	e772      	b.n	824e4 <_svfprintf_r+0x1320>
   825fe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82600:	1c6c      	adds	r4, r5, #1
   82602:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82604:	442c      	add	r4, r5
   82606:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8260a:	e665      	b.n	822d8 <_svfprintf_r+0x1114>
   8260c:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   82610:	2200      	movs	r2, #0
   82612:	2300      	movs	r3, #0
   82614:	f002 ff50 	bl	854b8 <__aeabi_dcmpeq>
   82618:	2800      	cmp	r0, #0
   8261a:	f47f af4a 	bne.w	824b2 <_svfprintf_r+0x12ee>
   8261e:	f1c5 0501 	rsb	r5, r5, #1
   82622:	9525      	str	r5, [sp, #148]	; 0x94
   82624:	442c      	add	r4, r5
   82626:	e624      	b.n	82272 <_svfprintf_r+0x10ae>
   82628:	9d14      	ldr	r5, [sp, #80]	; 0x50
   8262a:	f04f 0867 	mov.w	r8, #103	; 0x67
   8262e:	1c6c      	adds	r4, r5, #1
   82630:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82634:	e650      	b.n	822d8 <_svfprintf_r+0x1114>
   82636:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82638:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8263c:	682d      	ldr	r5, [r5, #0]
   8263e:	f10c 0304 	add.w	r3, ip, #4
   82642:	2d00      	cmp	r5, #0
   82644:	f899 8001 	ldrb.w	r8, [r9, #1]
   82648:	950a      	str	r5, [sp, #40]	; 0x28
   8264a:	9310      	str	r3, [sp, #64]	; 0x40
   8264c:	4681      	mov	r9, r0
   8264e:	f6be ae15 	bge.w	8127c <_svfprintf_r+0xb8>
   82652:	f7fe be10 	b.w	81276 <_svfprintf_r+0xb2>
   82656:	b97c      	cbnz	r4, 82678 <_svfprintf_r+0x14b4>
   82658:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8265a:	07e9      	lsls	r1, r5, #31
   8265c:	d40c      	bmi.n	82678 <_svfprintf_r+0x14b4>
   8265e:	2301      	movs	r3, #1
   82660:	461c      	mov	r4, r3
   82662:	e639      	b.n	822d8 <_svfprintf_r+0x1114>
   82664:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82668:	f01c 0301 	ands.w	r3, ip, #1
   8266c:	f47f af43 	bne.w	824f6 <_svfprintf_r+0x1332>
   82670:	9314      	str	r3, [sp, #80]	; 0x50
   82672:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82676:	e62f      	b.n	822d8 <_svfprintf_r+0x1114>
   82678:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8267a:	1cac      	adds	r4, r5, #2
   8267c:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82680:	e62a      	b.n	822d8 <_svfprintf_r+0x1114>
   82682:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   82684:	230c      	movs	r3, #12
   82686:	602b      	str	r3, [r5, #0]
   82688:	f04f 30ff 	mov.w	r0, #4294967295
   8268c:	f7fe beba 	b.w	81404 <_svfprintf_r+0x240>
   82690:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82692:	e713      	b.n	824bc <_svfprintf_r+0x12f8>
   82694:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
   82698:	e724      	b.n	824e4 <_svfprintf_r+0x1320>
   8269a:	bf00      	nop
   8269c:	00085bac 	.word	0x00085bac
   826a0:	66666667 	.word	0x66666667

000826a4 <register_fini>:
   826a4:	4b02      	ldr	r3, [pc, #8]	; (826b0 <register_fini+0xc>)
   826a6:	b113      	cbz	r3, 826ae <register_fini+0xa>
   826a8:	4802      	ldr	r0, [pc, #8]	; (826b4 <register_fini+0x10>)
   826aa:	f000 b805 	b.w	826b8 <atexit>
   826ae:	4770      	bx	lr
   826b0:	00000000 	.word	0x00000000
   826b4:	00083631 	.word	0x00083631

000826b8 <atexit>:
   826b8:	4601      	mov	r1, r0
   826ba:	2000      	movs	r0, #0
   826bc:	4602      	mov	r2, r0
   826be:	4603      	mov	r3, r0
   826c0:	f002 ba56 	b.w	84b70 <__register_exitproc>

000826c4 <quorem>:
   826c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   826c8:	6903      	ldr	r3, [r0, #16]
   826ca:	690d      	ldr	r5, [r1, #16]
   826cc:	b083      	sub	sp, #12
   826ce:	429d      	cmp	r5, r3
   826d0:	4683      	mov	fp, r0
   826d2:	f300 808c 	bgt.w	827ee <quorem+0x12a>
   826d6:	3d01      	subs	r5, #1
   826d8:	f101 0414 	add.w	r4, r1, #20
   826dc:	f100 0a14 	add.w	sl, r0, #20
   826e0:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
   826e4:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
   826e8:	3201      	adds	r2, #1
   826ea:	fbb3 f8f2 	udiv	r8, r3, r2
   826ee:	00aa      	lsls	r2, r5, #2
   826f0:	4691      	mov	r9, r2
   826f2:	9200      	str	r2, [sp, #0]
   826f4:	4452      	add	r2, sl
   826f6:	44a1      	add	r9, r4
   826f8:	9201      	str	r2, [sp, #4]
   826fa:	f1b8 0f00 	cmp.w	r8, #0
   826fe:	d03e      	beq.n	8277e <quorem+0xba>
   82700:	2600      	movs	r6, #0
   82702:	4630      	mov	r0, r6
   82704:	4622      	mov	r2, r4
   82706:	4653      	mov	r3, sl
   82708:	468c      	mov	ip, r1
   8270a:	f852 7b04 	ldr.w	r7, [r2], #4
   8270e:	6819      	ldr	r1, [r3, #0]
   82710:	fa1f fe87 	uxth.w	lr, r7
   82714:	0c3f      	lsrs	r7, r7, #16
   82716:	fb0e 6e08 	mla	lr, lr, r8, r6
   8271a:	fb07 f608 	mul.w	r6, r7, r8
   8271e:	eb06 461e 	add.w	r6, r6, lr, lsr #16
   82722:	fa1f fe8e 	uxth.w	lr, lr
   82726:	ebce 0e00 	rsb	lr, lr, r0
   8272a:	b28f      	uxth	r7, r1
   8272c:	b2b0      	uxth	r0, r6
   8272e:	4477      	add	r7, lr
   82730:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
   82734:	eb00 4027 	add.w	r0, r0, r7, asr #16
   82738:	b2bf      	uxth	r7, r7
   8273a:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
   8273e:	4591      	cmp	r9, r2
   82740:	f843 7b04 	str.w	r7, [r3], #4
   82744:	ea4f 4020 	mov.w	r0, r0, asr #16
   82748:	ea4f 4616 	mov.w	r6, r6, lsr #16
   8274c:	d2dd      	bcs.n	8270a <quorem+0x46>
   8274e:	9a00      	ldr	r2, [sp, #0]
   82750:	4661      	mov	r1, ip
   82752:	f85a 3002 	ldr.w	r3, [sl, r2]
   82756:	b993      	cbnz	r3, 8277e <quorem+0xba>
   82758:	9a01      	ldr	r2, [sp, #4]
   8275a:	1f13      	subs	r3, r2, #4
   8275c:	459a      	cmp	sl, r3
   8275e:	d20c      	bcs.n	8277a <quorem+0xb6>
   82760:	f852 3c04 	ldr.w	r3, [r2, #-4]
   82764:	b94b      	cbnz	r3, 8277a <quorem+0xb6>
   82766:	f1a2 0308 	sub.w	r3, r2, #8
   8276a:	e002      	b.n	82772 <quorem+0xae>
   8276c:	681a      	ldr	r2, [r3, #0]
   8276e:	3b04      	subs	r3, #4
   82770:	b91a      	cbnz	r2, 8277a <quorem+0xb6>
   82772:	459a      	cmp	sl, r3
   82774:	f105 35ff 	add.w	r5, r5, #4294967295
   82778:	d3f8      	bcc.n	8276c <quorem+0xa8>
   8277a:	f8cb 5010 	str.w	r5, [fp, #16]
   8277e:	4658      	mov	r0, fp
   82780:	f001 fe6e 	bl	84460 <__mcmp>
   82784:	2800      	cmp	r0, #0
   82786:	db2e      	blt.n	827e6 <quorem+0x122>
   82788:	f108 0801 	add.w	r8, r8, #1
   8278c:	4653      	mov	r3, sl
   8278e:	2200      	movs	r2, #0
   82790:	f854 6b04 	ldr.w	r6, [r4], #4
   82794:	6818      	ldr	r0, [r3, #0]
   82796:	b2b1      	uxth	r1, r6
   82798:	1a51      	subs	r1, r2, r1
   8279a:	b287      	uxth	r7, r0
   8279c:	0c36      	lsrs	r6, r6, #16
   8279e:	4439      	add	r1, r7
   827a0:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
   827a4:	eb00 4221 	add.w	r2, r0, r1, asr #16
   827a8:	b289      	uxth	r1, r1
   827aa:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   827ae:	45a1      	cmp	r9, r4
   827b0:	f843 1b04 	str.w	r1, [r3], #4
   827b4:	ea4f 4222 	mov.w	r2, r2, asr #16
   827b8:	d2ea      	bcs.n	82790 <quorem+0xcc>
   827ba:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
   827be:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
   827c2:	b982      	cbnz	r2, 827e6 <quorem+0x122>
   827c4:	1f1a      	subs	r2, r3, #4
   827c6:	4592      	cmp	sl, r2
   827c8:	d20b      	bcs.n	827e2 <quorem+0x11e>
   827ca:	f853 2c04 	ldr.w	r2, [r3, #-4]
   827ce:	b942      	cbnz	r2, 827e2 <quorem+0x11e>
   827d0:	3b08      	subs	r3, #8
   827d2:	e002      	b.n	827da <quorem+0x116>
   827d4:	681a      	ldr	r2, [r3, #0]
   827d6:	3b04      	subs	r3, #4
   827d8:	b91a      	cbnz	r2, 827e2 <quorem+0x11e>
   827da:	459a      	cmp	sl, r3
   827dc:	f105 35ff 	add.w	r5, r5, #4294967295
   827e0:	d3f8      	bcc.n	827d4 <quorem+0x110>
   827e2:	f8cb 5010 	str.w	r5, [fp, #16]
   827e6:	4640      	mov	r0, r8
   827e8:	b003      	add	sp, #12
   827ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   827ee:	2000      	movs	r0, #0
   827f0:	b003      	add	sp, #12
   827f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   827f6:	bf00      	nop

000827f8 <_dtoa_r>:
   827f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   827fc:	6c01      	ldr	r1, [r0, #64]	; 0x40
   827fe:	b09b      	sub	sp, #108	; 0x6c
   82800:	4604      	mov	r4, r0
   82802:	4692      	mov	sl, r2
   82804:	469b      	mov	fp, r3
   82806:	9d27      	ldr	r5, [sp, #156]	; 0x9c
   82808:	b141      	cbz	r1, 8281c <_dtoa_r+0x24>
   8280a:	6c43      	ldr	r3, [r0, #68]	; 0x44
   8280c:	2201      	movs	r2, #1
   8280e:	409a      	lsls	r2, r3
   82810:	604b      	str	r3, [r1, #4]
   82812:	608a      	str	r2, [r1, #8]
   82814:	f001 fc2e 	bl	84074 <_Bfree>
   82818:	2300      	movs	r3, #0
   8281a:	6423      	str	r3, [r4, #64]	; 0x40
   8281c:	f1bb 0f00 	cmp.w	fp, #0
   82820:	46d9      	mov	r9, fp
   82822:	db33      	blt.n	8288c <_dtoa_r+0x94>
   82824:	2300      	movs	r3, #0
   82826:	602b      	str	r3, [r5, #0]
   82828:	4ba5      	ldr	r3, [pc, #660]	; (82ac0 <_dtoa_r+0x2c8>)
   8282a:	461a      	mov	r2, r3
   8282c:	ea09 0303 	and.w	r3, r9, r3
   82830:	4293      	cmp	r3, r2
   82832:	d014      	beq.n	8285e <_dtoa_r+0x66>
   82834:	4650      	mov	r0, sl
   82836:	4659      	mov	r1, fp
   82838:	2200      	movs	r2, #0
   8283a:	2300      	movs	r3, #0
   8283c:	f002 fe3c 	bl	854b8 <__aeabi_dcmpeq>
   82840:	4680      	mov	r8, r0
   82842:	b348      	cbz	r0, 82898 <_dtoa_r+0xa0>
   82844:	9e26      	ldr	r6, [sp, #152]	; 0x98
   82846:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   82848:	2301      	movs	r3, #1
   8284a:	6033      	str	r3, [r6, #0]
   8284c:	2d00      	cmp	r5, #0
   8284e:	f000 80ca 	beq.w	829e6 <_dtoa_r+0x1ee>
   82852:	489c      	ldr	r0, [pc, #624]	; (82ac4 <_dtoa_r+0x2cc>)
   82854:	6028      	str	r0, [r5, #0]
   82856:	3801      	subs	r0, #1
   82858:	b01b      	add	sp, #108	; 0x6c
   8285a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8285e:	9d26      	ldr	r5, [sp, #152]	; 0x98
   82860:	f242 730f 	movw	r3, #9999	; 0x270f
   82864:	602b      	str	r3, [r5, #0]
   82866:	f1ba 0f00 	cmp.w	sl, #0
   8286a:	f000 80a5 	beq.w	829b8 <_dtoa_r+0x1c0>
   8286e:	4896      	ldr	r0, [pc, #600]	; (82ac8 <_dtoa_r+0x2d0>)
   82870:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   82872:	2e00      	cmp	r6, #0
   82874:	d0f0      	beq.n	82858 <_dtoa_r+0x60>
   82876:	78c3      	ldrb	r3, [r0, #3]
   82878:	2b00      	cmp	r3, #0
   8287a:	f000 80b6 	beq.w	829ea <_dtoa_r+0x1f2>
   8287e:	f100 0308 	add.w	r3, r0, #8
   82882:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   82884:	602b      	str	r3, [r5, #0]
   82886:	b01b      	add	sp, #108	; 0x6c
   82888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8288c:	2301      	movs	r3, #1
   8288e:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
   82892:	602b      	str	r3, [r5, #0]
   82894:	46cb      	mov	fp, r9
   82896:	e7c7      	b.n	82828 <_dtoa_r+0x30>
   82898:	aa19      	add	r2, sp, #100	; 0x64
   8289a:	ab18      	add	r3, sp, #96	; 0x60
   8289c:	e88d 000c 	stmia.w	sp, {r2, r3}
   828a0:	4620      	mov	r0, r4
   828a2:	4652      	mov	r2, sl
   828a4:	465b      	mov	r3, fp
   828a6:	f001 fe6b 	bl	84580 <__d2b>
   828aa:	ea5f 5519 	movs.w	r5, r9, lsr #20
   828ae:	900a      	str	r0, [sp, #40]	; 0x28
   828b0:	f040 808b 	bne.w	829ca <_dtoa_r+0x1d2>
   828b4:	9f18      	ldr	r7, [sp, #96]	; 0x60
   828b6:	9d19      	ldr	r5, [sp, #100]	; 0x64
   828b8:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   828bc:	443d      	add	r5, r7
   828be:	429d      	cmp	r5, r3
   828c0:	f2c0 8295 	blt.w	82dee <_dtoa_r+0x5f6>
   828c4:	331f      	adds	r3, #31
   828c6:	f205 4212 	addw	r2, r5, #1042	; 0x412
   828ca:	1b5b      	subs	r3, r3, r5
   828cc:	fa09 f303 	lsl.w	r3, r9, r3
   828d0:	fa2a f202 	lsr.w	r2, sl, r2
   828d4:	ea43 0002 	orr.w	r0, r3, r2
   828d8:	f002 fb10 	bl	84efc <__aeabi_ui2d>
   828dc:	2601      	movs	r6, #1
   828de:	3d01      	subs	r5, #1
   828e0:	46b8      	mov	r8, r7
   828e2:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   828e6:	9616      	str	r6, [sp, #88]	; 0x58
   828e8:	2200      	movs	r2, #0
   828ea:	4b78      	ldr	r3, [pc, #480]	; (82acc <_dtoa_r+0x2d4>)
   828ec:	f002 f9c8 	bl	84c80 <__aeabi_dsub>
   828f0:	a36d      	add	r3, pc, #436	; (adr r3, 82aa8 <_dtoa_r+0x2b0>)
   828f2:	e9d3 2300 	ldrd	r2, r3, [r3]
   828f6:	f002 fb77 	bl	84fe8 <__aeabi_dmul>
   828fa:	a36d      	add	r3, pc, #436	; (adr r3, 82ab0 <_dtoa_r+0x2b8>)
   828fc:	e9d3 2300 	ldrd	r2, r3, [r3]
   82900:	f002 f9c0 	bl	84c84 <__adddf3>
   82904:	4606      	mov	r6, r0
   82906:	4628      	mov	r0, r5
   82908:	460f      	mov	r7, r1
   8290a:	f002 fb07 	bl	84f1c <__aeabi_i2d>
   8290e:	a36a      	add	r3, pc, #424	; (adr r3, 82ab8 <_dtoa_r+0x2c0>)
   82910:	e9d3 2300 	ldrd	r2, r3, [r3]
   82914:	f002 fb68 	bl	84fe8 <__aeabi_dmul>
   82918:	4602      	mov	r2, r0
   8291a:	460b      	mov	r3, r1
   8291c:	4630      	mov	r0, r6
   8291e:	4639      	mov	r1, r7
   82920:	f002 f9b0 	bl	84c84 <__adddf3>
   82924:	4606      	mov	r6, r0
   82926:	460f      	mov	r7, r1
   82928:	f002 fdf8 	bl	8551c <__aeabi_d2iz>
   8292c:	4639      	mov	r1, r7
   8292e:	9007      	str	r0, [sp, #28]
   82930:	2200      	movs	r2, #0
   82932:	4630      	mov	r0, r6
   82934:	2300      	movs	r3, #0
   82936:	f002 fdc9 	bl	854cc <__aeabi_dcmplt>
   8293a:	2800      	cmp	r0, #0
   8293c:	f040 8229 	bne.w	82d92 <_dtoa_r+0x59a>
   82940:	9e07      	ldr	r6, [sp, #28]
   82942:	2e16      	cmp	r6, #22
   82944:	f200 8222 	bhi.w	82d8c <_dtoa_r+0x594>
   82948:	4961      	ldr	r1, [pc, #388]	; (82ad0 <_dtoa_r+0x2d8>)
   8294a:	4652      	mov	r2, sl
   8294c:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   82950:	465b      	mov	r3, fp
   82952:	e9d1 0100 	ldrd	r0, r1, [r1]
   82956:	f002 fdd7 	bl	85508 <__aeabi_dcmpgt>
   8295a:	2800      	cmp	r0, #0
   8295c:	f000 824c 	beq.w	82df8 <_dtoa_r+0x600>
   82960:	3e01      	subs	r6, #1
   82962:	9607      	str	r6, [sp, #28]
   82964:	2600      	movs	r6, #0
   82966:	960e      	str	r6, [sp, #56]	; 0x38
   82968:	ebc5 0508 	rsb	r5, r5, r8
   8296c:	3d01      	subs	r5, #1
   8296e:	9506      	str	r5, [sp, #24]
   82970:	f100 8226 	bmi.w	82dc0 <_dtoa_r+0x5c8>
   82974:	2500      	movs	r5, #0
   82976:	9508      	str	r5, [sp, #32]
   82978:	9e07      	ldr	r6, [sp, #28]
   8297a:	2e00      	cmp	r6, #0
   8297c:	f2c0 8217 	blt.w	82dae <_dtoa_r+0x5b6>
   82980:	9d06      	ldr	r5, [sp, #24]
   82982:	960d      	str	r6, [sp, #52]	; 0x34
   82984:	4435      	add	r5, r6
   82986:	2600      	movs	r6, #0
   82988:	9506      	str	r5, [sp, #24]
   8298a:	960c      	str	r6, [sp, #48]	; 0x30
   8298c:	9d24      	ldr	r5, [sp, #144]	; 0x90
   8298e:	2d09      	cmp	r5, #9
   82990:	d82d      	bhi.n	829ee <_dtoa_r+0x1f6>
   82992:	2d05      	cmp	r5, #5
   82994:	bfc4      	itt	gt
   82996:	3d04      	subgt	r5, #4
   82998:	9524      	strgt	r5, [sp, #144]	; 0x90
   8299a:	9e24      	ldr	r6, [sp, #144]	; 0x90
   8299c:	bfc8      	it	gt
   8299e:	2500      	movgt	r5, #0
   829a0:	f1a6 0302 	sub.w	r3, r6, #2
   829a4:	bfd8      	it	le
   829a6:	2501      	movle	r5, #1
   829a8:	2b03      	cmp	r3, #3
   829aa:	d822      	bhi.n	829f2 <_dtoa_r+0x1fa>
   829ac:	e8df f013 	tbh	[pc, r3, lsl #1]
   829b0:	029e03b7 	.word	0x029e03b7
   829b4:	049a03c0 	.word	0x049a03c0
   829b8:	4a46      	ldr	r2, [pc, #280]	; (82ad4 <_dtoa_r+0x2dc>)
   829ba:	4b43      	ldr	r3, [pc, #268]	; (82ac8 <_dtoa_r+0x2d0>)
   829bc:	f3c9 0013 	ubfx	r0, r9, #0, #20
   829c0:	2800      	cmp	r0, #0
   829c2:	bf0c      	ite	eq
   829c4:	4610      	moveq	r0, r2
   829c6:	4618      	movne	r0, r3
   829c8:	e752      	b.n	82870 <_dtoa_r+0x78>
   829ca:	f3cb 0313 	ubfx	r3, fp, #0, #20
   829ce:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   829d2:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
   829d6:	4650      	mov	r0, sl
   829d8:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   829dc:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   829e0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   829e4:	e780      	b.n	828e8 <_dtoa_r+0xf0>
   829e6:	483c      	ldr	r0, [pc, #240]	; (82ad8 <_dtoa_r+0x2e0>)
   829e8:	e736      	b.n	82858 <_dtoa_r+0x60>
   829ea:	1cc3      	adds	r3, r0, #3
   829ec:	e749      	b.n	82882 <_dtoa_r+0x8a>
   829ee:	2500      	movs	r5, #0
   829f0:	9524      	str	r5, [sp, #144]	; 0x90
   829f2:	2500      	movs	r5, #0
   829f4:	6465      	str	r5, [r4, #68]	; 0x44
   829f6:	4629      	mov	r1, r5
   829f8:	4620      	mov	r0, r4
   829fa:	f001 fb15 	bl	84028 <_Balloc>
   829fe:	f04f 39ff 	mov.w	r9, #4294967295
   82a02:	2601      	movs	r6, #1
   82a04:	9009      	str	r0, [sp, #36]	; 0x24
   82a06:	9525      	str	r5, [sp, #148]	; 0x94
   82a08:	6420      	str	r0, [r4, #64]	; 0x40
   82a0a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   82a0e:	960b      	str	r6, [sp, #44]	; 0x2c
   82a10:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82a12:	2b00      	cmp	r3, #0
   82a14:	f2c0 80d2 	blt.w	82bbc <_dtoa_r+0x3c4>
   82a18:	9e07      	ldr	r6, [sp, #28]
   82a1a:	2e0e      	cmp	r6, #14
   82a1c:	f300 80ce 	bgt.w	82bbc <_dtoa_r+0x3c4>
   82a20:	4b2b      	ldr	r3, [pc, #172]	; (82ad0 <_dtoa_r+0x2d8>)
   82a22:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   82a26:	e9d3 0100 	ldrd	r0, r1, [r3]
   82a2a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82a2e:	9925      	ldr	r1, [sp, #148]	; 0x94
   82a30:	2900      	cmp	r1, #0
   82a32:	f2c0 8380 	blt.w	83136 <_dtoa_r+0x93e>
   82a36:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82a3a:	4659      	mov	r1, fp
   82a3c:	4650      	mov	r0, sl
   82a3e:	f002 fbfd 	bl	8523c <__aeabi_ddiv>
   82a42:	f002 fd6b 	bl	8551c <__aeabi_d2iz>
   82a46:	4605      	mov	r5, r0
   82a48:	f002 fa68 	bl	84f1c <__aeabi_i2d>
   82a4c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82a50:	f002 faca 	bl	84fe8 <__aeabi_dmul>
   82a54:	4602      	mov	r2, r0
   82a56:	460b      	mov	r3, r1
   82a58:	4650      	mov	r0, sl
   82a5a:	4659      	mov	r1, fp
   82a5c:	f002 f910 	bl	84c80 <__aeabi_dsub>
   82a60:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82a62:	f105 0330 	add.w	r3, r5, #48	; 0x30
   82a66:	f1b9 0f01 	cmp.w	r9, #1
   82a6a:	4606      	mov	r6, r0
   82a6c:	460f      	mov	r7, r1
   82a6e:	7013      	strb	r3, [r2, #0]
   82a70:	f102 0b01 	add.w	fp, r2, #1
   82a74:	d064      	beq.n	82b40 <_dtoa_r+0x348>
   82a76:	2200      	movs	r2, #0
   82a78:	4b18      	ldr	r3, [pc, #96]	; (82adc <_dtoa_r+0x2e4>)
   82a7a:	f002 fab5 	bl	84fe8 <__aeabi_dmul>
   82a7e:	2200      	movs	r2, #0
   82a80:	2300      	movs	r3, #0
   82a82:	4606      	mov	r6, r0
   82a84:	460f      	mov	r7, r1
   82a86:	f002 fd17 	bl	854b8 <__aeabi_dcmpeq>
   82a8a:	2800      	cmp	r0, #0
   82a8c:	f040 8081 	bne.w	82b92 <_dtoa_r+0x39a>
   82a90:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82a94:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82a96:	44c8      	add	r8, r9
   82a98:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
   82a9c:	f105 0902 	add.w	r9, r5, #2
   82aa0:	9403      	str	r4, [sp, #12]
   82aa2:	e028      	b.n	82af6 <_dtoa_r+0x2fe>
   82aa4:	f3af 8000 	nop.w
   82aa8:	636f4361 	.word	0x636f4361
   82aac:	3fd287a7 	.word	0x3fd287a7
   82ab0:	8b60c8b3 	.word	0x8b60c8b3
   82ab4:	3fc68a28 	.word	0x3fc68a28
   82ab8:	509f79fb 	.word	0x509f79fb
   82abc:	3fd34413 	.word	0x3fd34413
   82ac0:	7ff00000 	.word	0x7ff00000
   82ac4:	00085bb5 	.word	0x00085bb5
   82ac8:	00085bd4 	.word	0x00085bd4
   82acc:	3ff80000 	.word	0x3ff80000
   82ad0:	00085be8 	.word	0x00085be8
   82ad4:	00085bc8 	.word	0x00085bc8
   82ad8:	00085bb4 	.word	0x00085bb4
   82adc:	40240000 	.word	0x40240000
   82ae0:	f002 fa82 	bl	84fe8 <__aeabi_dmul>
   82ae4:	2200      	movs	r2, #0
   82ae6:	2300      	movs	r3, #0
   82ae8:	4606      	mov	r6, r0
   82aea:	460f      	mov	r7, r1
   82aec:	f002 fce4 	bl	854b8 <__aeabi_dcmpeq>
   82af0:	2800      	cmp	r0, #0
   82af2:	f040 83c1 	bne.w	83278 <_dtoa_r+0xa80>
   82af6:	4652      	mov	r2, sl
   82af8:	465b      	mov	r3, fp
   82afa:	4630      	mov	r0, r6
   82afc:	4639      	mov	r1, r7
   82afe:	f002 fb9d 	bl	8523c <__aeabi_ddiv>
   82b02:	f002 fd0b 	bl	8551c <__aeabi_d2iz>
   82b06:	4605      	mov	r5, r0
   82b08:	f002 fa08 	bl	84f1c <__aeabi_i2d>
   82b0c:	4652      	mov	r2, sl
   82b0e:	465b      	mov	r3, fp
   82b10:	f002 fa6a 	bl	84fe8 <__aeabi_dmul>
   82b14:	4602      	mov	r2, r0
   82b16:	460b      	mov	r3, r1
   82b18:	4630      	mov	r0, r6
   82b1a:	4639      	mov	r1, r7
   82b1c:	f002 f8b0 	bl	84c80 <__aeabi_dsub>
   82b20:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   82b24:	45c1      	cmp	r9, r8
   82b26:	f809 ec01 	strb.w	lr, [r9, #-1]
   82b2a:	464c      	mov	r4, r9
   82b2c:	4606      	mov	r6, r0
   82b2e:	460f      	mov	r7, r1
   82b30:	f04f 0200 	mov.w	r2, #0
   82b34:	4ba7      	ldr	r3, [pc, #668]	; (82dd4 <_dtoa_r+0x5dc>)
   82b36:	f109 0901 	add.w	r9, r9, #1
   82b3a:	d1d1      	bne.n	82ae0 <_dtoa_r+0x2e8>
   82b3c:	46a3      	mov	fp, r4
   82b3e:	9c03      	ldr	r4, [sp, #12]
   82b40:	4632      	mov	r2, r6
   82b42:	463b      	mov	r3, r7
   82b44:	4630      	mov	r0, r6
   82b46:	4639      	mov	r1, r7
   82b48:	f002 f89c 	bl	84c84 <__adddf3>
   82b4c:	4606      	mov	r6, r0
   82b4e:	460f      	mov	r7, r1
   82b50:	4632      	mov	r2, r6
   82b52:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82b56:	463b      	mov	r3, r7
   82b58:	f002 fcb8 	bl	854cc <__aeabi_dcmplt>
   82b5c:	b940      	cbnz	r0, 82b70 <_dtoa_r+0x378>
   82b5e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82b62:	4632      	mov	r2, r6
   82b64:	463b      	mov	r3, r7
   82b66:	f002 fca7 	bl	854b8 <__aeabi_dcmpeq>
   82b6a:	b190      	cbz	r0, 82b92 <_dtoa_r+0x39a>
   82b6c:	07eb      	lsls	r3, r5, #31
   82b6e:	d510      	bpl.n	82b92 <_dtoa_r+0x39a>
   82b70:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   82b74:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82b76:	e005      	b.n	82b84 <_dtoa_r+0x38c>
   82b78:	429a      	cmp	r2, r3
   82b7a:	f000 8429 	beq.w	833d0 <_dtoa_r+0xbd8>
   82b7e:	f813 5c01 	ldrb.w	r5, [r3, #-1]
   82b82:	469b      	mov	fp, r3
   82b84:	2d39      	cmp	r5, #57	; 0x39
   82b86:	f10b 33ff 	add.w	r3, fp, #4294967295
   82b8a:	d0f5      	beq.n	82b78 <_dtoa_r+0x380>
   82b8c:	1c6a      	adds	r2, r5, #1
   82b8e:	b2d2      	uxtb	r2, r2
   82b90:	701a      	strb	r2, [r3, #0]
   82b92:	4620      	mov	r0, r4
   82b94:	990a      	ldr	r1, [sp, #40]	; 0x28
   82b96:	f001 fa6d 	bl	84074 <_Bfree>
   82b9a:	9e07      	ldr	r6, [sp, #28]
   82b9c:	9d26      	ldr	r5, [sp, #152]	; 0x98
   82b9e:	1c73      	adds	r3, r6, #1
   82ba0:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   82ba2:	2200      	movs	r2, #0
   82ba4:	f88b 2000 	strb.w	r2, [fp]
   82ba8:	602b      	str	r3, [r5, #0]
   82baa:	2e00      	cmp	r6, #0
   82bac:	f000 8325 	beq.w	831fa <_dtoa_r+0xa02>
   82bb0:	9809      	ldr	r0, [sp, #36]	; 0x24
   82bb2:	f8c6 b000 	str.w	fp, [r6]
   82bb6:	b01b      	add	sp, #108	; 0x6c
   82bb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82bbc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82bbe:	2d00      	cmp	r5, #0
   82bc0:	f000 8103 	beq.w	82dca <_dtoa_r+0x5d2>
   82bc4:	9e24      	ldr	r6, [sp, #144]	; 0x90
   82bc6:	2e01      	cmp	r6, #1
   82bc8:	f340 82dc 	ble.w	83184 <_dtoa_r+0x98c>
   82bcc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   82bce:	f109 37ff 	add.w	r7, r9, #4294967295
   82bd2:	42be      	cmp	r6, r7
   82bd4:	f2c0 8389 	blt.w	832ea <_dtoa_r+0xaf2>
   82bd8:	1bf7      	subs	r7, r6, r7
   82bda:	f1b9 0f00 	cmp.w	r9, #0
   82bde:	f2c0 8487 	blt.w	834f0 <_dtoa_r+0xcf8>
   82be2:	9d08      	ldr	r5, [sp, #32]
   82be4:	464b      	mov	r3, r9
   82be6:	9e08      	ldr	r6, [sp, #32]
   82be8:	4620      	mov	r0, r4
   82bea:	441e      	add	r6, r3
   82bec:	9608      	str	r6, [sp, #32]
   82bee:	9e06      	ldr	r6, [sp, #24]
   82bf0:	2101      	movs	r1, #1
   82bf2:	441e      	add	r6, r3
   82bf4:	9606      	str	r6, [sp, #24]
   82bf6:	f001 fadf 	bl	841b8 <__i2b>
   82bfa:	4606      	mov	r6, r0
   82bfc:	b165      	cbz	r5, 82c18 <_dtoa_r+0x420>
   82bfe:	9806      	ldr	r0, [sp, #24]
   82c00:	2800      	cmp	r0, #0
   82c02:	dd09      	ble.n	82c18 <_dtoa_r+0x420>
   82c04:	4603      	mov	r3, r0
   82c06:	9908      	ldr	r1, [sp, #32]
   82c08:	42ab      	cmp	r3, r5
   82c0a:	bfa8      	it	ge
   82c0c:	462b      	movge	r3, r5
   82c0e:	1ac9      	subs	r1, r1, r3
   82c10:	1ac0      	subs	r0, r0, r3
   82c12:	9108      	str	r1, [sp, #32]
   82c14:	1aed      	subs	r5, r5, r3
   82c16:	9006      	str	r0, [sp, #24]
   82c18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82c1a:	2a00      	cmp	r2, #0
   82c1c:	dd1d      	ble.n	82c5a <_dtoa_r+0x462>
   82c1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82c20:	2b00      	cmp	r3, #0
   82c22:	f000 8358 	beq.w	832d6 <_dtoa_r+0xade>
   82c26:	2f00      	cmp	r7, #0
   82c28:	dd11      	ble.n	82c4e <_dtoa_r+0x456>
   82c2a:	4631      	mov	r1, r6
   82c2c:	463a      	mov	r2, r7
   82c2e:	4620      	mov	r0, r4
   82c30:	f001 fb6a 	bl	84308 <__pow5mult>
   82c34:	4606      	mov	r6, r0
   82c36:	4631      	mov	r1, r6
   82c38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82c3a:	4620      	mov	r0, r4
   82c3c:	f001 fac6 	bl	841cc <__multiply>
   82c40:	990a      	ldr	r1, [sp, #40]	; 0x28
   82c42:	4680      	mov	r8, r0
   82c44:	4620      	mov	r0, r4
   82c46:	f001 fa15 	bl	84074 <_Bfree>
   82c4a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   82c4e:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
   82c52:	ebbe 0207 	subs.w	r2, lr, r7
   82c56:	f040 828f 	bne.w	83178 <_dtoa_r+0x980>
   82c5a:	4620      	mov	r0, r4
   82c5c:	2101      	movs	r1, #1
   82c5e:	f001 faab 	bl	841b8 <__i2b>
   82c62:	4680      	mov	r8, r0
   82c64:	980d      	ldr	r0, [sp, #52]	; 0x34
   82c66:	2800      	cmp	r0, #0
   82c68:	dd05      	ble.n	82c76 <_dtoa_r+0x47e>
   82c6a:	4641      	mov	r1, r8
   82c6c:	4620      	mov	r0, r4
   82c6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   82c70:	f001 fb4a 	bl	84308 <__pow5mult>
   82c74:	4680      	mov	r8, r0
   82c76:	9924      	ldr	r1, [sp, #144]	; 0x90
   82c78:	2901      	cmp	r1, #1
   82c7a:	f340 82c1 	ble.w	83200 <_dtoa_r+0xa08>
   82c7e:	2700      	movs	r7, #0
   82c80:	980d      	ldr	r0, [sp, #52]	; 0x34
   82c82:	2800      	cmp	r0, #0
   82c84:	f040 82af 	bne.w	831e6 <_dtoa_r+0x9ee>
   82c88:	2001      	movs	r0, #1
   82c8a:	9b06      	ldr	r3, [sp, #24]
   82c8c:	4403      	add	r3, r0
   82c8e:	f013 031f 	ands.w	r3, r3, #31
   82c92:	f000 80a1 	beq.w	82dd8 <_dtoa_r+0x5e0>
   82c96:	f1c3 0220 	rsb	r2, r3, #32
   82c9a:	2a04      	cmp	r2, #4
   82c9c:	f340 84b7 	ble.w	8360e <_dtoa_r+0xe16>
   82ca0:	9908      	ldr	r1, [sp, #32]
   82ca2:	9a06      	ldr	r2, [sp, #24]
   82ca4:	f1c3 031c 	rsb	r3, r3, #28
   82ca8:	4419      	add	r1, r3
   82caa:	441a      	add	r2, r3
   82cac:	9108      	str	r1, [sp, #32]
   82cae:	441d      	add	r5, r3
   82cb0:	9206      	str	r2, [sp, #24]
   82cb2:	9908      	ldr	r1, [sp, #32]
   82cb4:	2900      	cmp	r1, #0
   82cb6:	dd05      	ble.n	82cc4 <_dtoa_r+0x4cc>
   82cb8:	990a      	ldr	r1, [sp, #40]	; 0x28
   82cba:	9a08      	ldr	r2, [sp, #32]
   82cbc:	4620      	mov	r0, r4
   82cbe:	f001 fb71 	bl	843a4 <__lshift>
   82cc2:	900a      	str	r0, [sp, #40]	; 0x28
   82cc4:	9a06      	ldr	r2, [sp, #24]
   82cc6:	2a00      	cmp	r2, #0
   82cc8:	dd04      	ble.n	82cd4 <_dtoa_r+0x4dc>
   82cca:	4641      	mov	r1, r8
   82ccc:	4620      	mov	r0, r4
   82cce:	f001 fb69 	bl	843a4 <__lshift>
   82cd2:	4680      	mov	r8, r0
   82cd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82cd6:	2b00      	cmp	r3, #0
   82cd8:	f040 826a 	bne.w	831b0 <_dtoa_r+0x9b8>
   82cdc:	f1b9 0f00 	cmp.w	r9, #0
   82ce0:	f340 82a6 	ble.w	83230 <_dtoa_r+0xa38>
   82ce4:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82ce6:	2800      	cmp	r0, #0
   82ce8:	f040 8088 	bne.w	82dfc <_dtoa_r+0x604>
   82cec:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82cee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82cf0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   82cf4:	e006      	b.n	82d04 <_dtoa_r+0x50c>
   82cf6:	4639      	mov	r1, r7
   82cf8:	4620      	mov	r0, r4
   82cfa:	220a      	movs	r2, #10
   82cfc:	2300      	movs	r3, #0
   82cfe:	f001 f9c3 	bl	84088 <__multadd>
   82d02:	4607      	mov	r7, r0
   82d04:	4638      	mov	r0, r7
   82d06:	4641      	mov	r1, r8
   82d08:	f7ff fcdc 	bl	826c4 <quorem>
   82d0c:	3030      	adds	r0, #48	; 0x30
   82d0e:	f80b 0005 	strb.w	r0, [fp, r5]
   82d12:	3501      	adds	r5, #1
   82d14:	45a9      	cmp	r9, r5
   82d16:	dcee      	bgt.n	82cf6 <_dtoa_r+0x4fe>
   82d18:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   82d1c:	4682      	mov	sl, r0
   82d1e:	970a      	str	r7, [sp, #40]	; 0x28
   82d20:	f1b9 0f01 	cmp.w	r9, #1
   82d24:	bfac      	ite	ge
   82d26:	44cb      	addge	fp, r9
   82d28:	f10b 0b01 	addlt.w	fp, fp, #1
   82d2c:	2500      	movs	r5, #0
   82d2e:	990a      	ldr	r1, [sp, #40]	; 0x28
   82d30:	2201      	movs	r2, #1
   82d32:	4620      	mov	r0, r4
   82d34:	f001 fb36 	bl	843a4 <__lshift>
   82d38:	4641      	mov	r1, r8
   82d3a:	900a      	str	r0, [sp, #40]	; 0x28
   82d3c:	f001 fb90 	bl	84460 <__mcmp>
   82d40:	2800      	cmp	r0, #0
   82d42:	f340 8309 	ble.w	83358 <_dtoa_r+0xb60>
   82d46:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   82d4a:	9909      	ldr	r1, [sp, #36]	; 0x24
   82d4c:	e005      	b.n	82d5a <_dtoa_r+0x562>
   82d4e:	4299      	cmp	r1, r3
   82d50:	f000 828b 	beq.w	8326a <_dtoa_r+0xa72>
   82d54:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   82d58:	469b      	mov	fp, r3
   82d5a:	2a39      	cmp	r2, #57	; 0x39
   82d5c:	f10b 33ff 	add.w	r3, fp, #4294967295
   82d60:	d0f5      	beq.n	82d4e <_dtoa_r+0x556>
   82d62:	3201      	adds	r2, #1
   82d64:	701a      	strb	r2, [r3, #0]
   82d66:	4641      	mov	r1, r8
   82d68:	4620      	mov	r0, r4
   82d6a:	f001 f983 	bl	84074 <_Bfree>
   82d6e:	2e00      	cmp	r6, #0
   82d70:	f43f af0f 	beq.w	82b92 <_dtoa_r+0x39a>
   82d74:	b12d      	cbz	r5, 82d82 <_dtoa_r+0x58a>
   82d76:	42b5      	cmp	r5, r6
   82d78:	d003      	beq.n	82d82 <_dtoa_r+0x58a>
   82d7a:	4629      	mov	r1, r5
   82d7c:	4620      	mov	r0, r4
   82d7e:	f001 f979 	bl	84074 <_Bfree>
   82d82:	4631      	mov	r1, r6
   82d84:	4620      	mov	r0, r4
   82d86:	f001 f975 	bl	84074 <_Bfree>
   82d8a:	e702      	b.n	82b92 <_dtoa_r+0x39a>
   82d8c:	2601      	movs	r6, #1
   82d8e:	960e      	str	r6, [sp, #56]	; 0x38
   82d90:	e5ea      	b.n	82968 <_dtoa_r+0x170>
   82d92:	9807      	ldr	r0, [sp, #28]
   82d94:	f002 f8c2 	bl	84f1c <__aeabi_i2d>
   82d98:	4632      	mov	r2, r6
   82d9a:	463b      	mov	r3, r7
   82d9c:	f002 fb8c 	bl	854b8 <__aeabi_dcmpeq>
   82da0:	2800      	cmp	r0, #0
   82da2:	f47f adcd 	bne.w	82940 <_dtoa_r+0x148>
   82da6:	9e07      	ldr	r6, [sp, #28]
   82da8:	3e01      	subs	r6, #1
   82daa:	9607      	str	r6, [sp, #28]
   82dac:	e5c8      	b.n	82940 <_dtoa_r+0x148>
   82dae:	9e07      	ldr	r6, [sp, #28]
   82db0:	9d08      	ldr	r5, [sp, #32]
   82db2:	1bad      	subs	r5, r5, r6
   82db4:	9508      	str	r5, [sp, #32]
   82db6:	4275      	negs	r5, r6
   82db8:	2600      	movs	r6, #0
   82dba:	950c      	str	r5, [sp, #48]	; 0x30
   82dbc:	960d      	str	r6, [sp, #52]	; 0x34
   82dbe:	e5e5      	b.n	8298c <_dtoa_r+0x194>
   82dc0:	426d      	negs	r5, r5
   82dc2:	2600      	movs	r6, #0
   82dc4:	9508      	str	r5, [sp, #32]
   82dc6:	9606      	str	r6, [sp, #24]
   82dc8:	e5d6      	b.n	82978 <_dtoa_r+0x180>
   82dca:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82dcc:	9d08      	ldr	r5, [sp, #32]
   82dce:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   82dd0:	e714      	b.n	82bfc <_dtoa_r+0x404>
   82dd2:	bf00      	nop
   82dd4:	40240000 	.word	0x40240000
   82dd8:	231c      	movs	r3, #28
   82dda:	f8dd e020 	ldr.w	lr, [sp, #32]
   82dde:	9806      	ldr	r0, [sp, #24]
   82de0:	449e      	add	lr, r3
   82de2:	4418      	add	r0, r3
   82de4:	f8cd e020 	str.w	lr, [sp, #32]
   82de8:	441d      	add	r5, r3
   82dea:	9006      	str	r0, [sp, #24]
   82dec:	e761      	b.n	82cb2 <_dtoa_r+0x4ba>
   82dee:	48a7      	ldr	r0, [pc, #668]	; (8308c <_dtoa_r+0x894>)
   82df0:	1b40      	subs	r0, r0, r5
   82df2:	fa0a f000 	lsl.w	r0, sl, r0
   82df6:	e56f      	b.n	828d8 <_dtoa_r+0xe0>
   82df8:	900e      	str	r0, [sp, #56]	; 0x38
   82dfa:	e5b5      	b.n	82968 <_dtoa_r+0x170>
   82dfc:	2d00      	cmp	r5, #0
   82dfe:	dd05      	ble.n	82e0c <_dtoa_r+0x614>
   82e00:	4631      	mov	r1, r6
   82e02:	462a      	mov	r2, r5
   82e04:	4620      	mov	r0, r4
   82e06:	f001 facd 	bl	843a4 <__lshift>
   82e0a:	4606      	mov	r6, r0
   82e0c:	2f00      	cmp	r7, #0
   82e0e:	f040 82e9 	bne.w	833e4 <_dtoa_r+0xbec>
   82e12:	4637      	mov	r7, r6
   82e14:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82e16:	9809      	ldr	r0, [sp, #36]	; 0x24
   82e18:	444d      	add	r5, r9
   82e1a:	9508      	str	r5, [sp, #32]
   82e1c:	f00a 0501 	and.w	r5, sl, #1
   82e20:	950b      	str	r5, [sp, #44]	; 0x2c
   82e22:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   82e26:	1c45      	adds	r5, r0, #1
   82e28:	e00a      	b.n	82e40 <_dtoa_r+0x648>
   82e2a:	f001 f92d 	bl	84088 <__multadd>
   82e2e:	4639      	mov	r1, r7
   82e30:	4606      	mov	r6, r0
   82e32:	220a      	movs	r2, #10
   82e34:	4620      	mov	r0, r4
   82e36:	2300      	movs	r3, #0
   82e38:	f001 f926 	bl	84088 <__multadd>
   82e3c:	4607      	mov	r7, r0
   82e3e:	3501      	adds	r5, #1
   82e40:	4641      	mov	r1, r8
   82e42:	4648      	mov	r0, r9
   82e44:	f7ff fc3e 	bl	826c4 <quorem>
   82e48:	4631      	mov	r1, r6
   82e4a:	4683      	mov	fp, r0
   82e4c:	4648      	mov	r0, r9
   82e4e:	f001 fb07 	bl	84460 <__mcmp>
   82e52:	4641      	mov	r1, r8
   82e54:	9003      	str	r0, [sp, #12]
   82e56:	463a      	mov	r2, r7
   82e58:	4620      	mov	r0, r4
   82e5a:	f001 fb25 	bl	844a8 <__mdiff>
   82e5e:	68c2      	ldr	r2, [r0, #12]
   82e60:	1e69      	subs	r1, r5, #1
   82e62:	4603      	mov	r3, r0
   82e64:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
   82e68:	9106      	str	r1, [sp, #24]
   82e6a:	2a00      	cmp	r2, #0
   82e6c:	f040 8193 	bne.w	83196 <_dtoa_r+0x99e>
   82e70:	4619      	mov	r1, r3
   82e72:	4648      	mov	r0, r9
   82e74:	9302      	str	r3, [sp, #8]
   82e76:	f001 faf3 	bl	84460 <__mcmp>
   82e7a:	9b02      	ldr	r3, [sp, #8]
   82e7c:	4602      	mov	r2, r0
   82e7e:	4619      	mov	r1, r3
   82e80:	4620      	mov	r0, r4
   82e82:	9202      	str	r2, [sp, #8]
   82e84:	f001 f8f6 	bl	84074 <_Bfree>
   82e88:	9a02      	ldr	r2, [sp, #8]
   82e8a:	b92a      	cbnz	r2, 82e98 <_dtoa_r+0x6a0>
   82e8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82e8e:	b91b      	cbnz	r3, 82e98 <_dtoa_r+0x6a0>
   82e90:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82e92:	2800      	cmp	r0, #0
   82e94:	f000 8393 	beq.w	835be <_dtoa_r+0xdc6>
   82e98:	9b03      	ldr	r3, [sp, #12]
   82e9a:	2b00      	cmp	r3, #0
   82e9c:	f2c0 8234 	blt.w	83308 <_dtoa_r+0xb10>
   82ea0:	d105      	bne.n	82eae <_dtoa_r+0x6b6>
   82ea2:	9824      	ldr	r0, [sp, #144]	; 0x90
   82ea4:	b918      	cbnz	r0, 82eae <_dtoa_r+0x6b6>
   82ea6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ea8:	2900      	cmp	r1, #0
   82eaa:	f000 822d 	beq.w	83308 <_dtoa_r+0xb10>
   82eae:	2a00      	cmp	r2, #0
   82eb0:	f300 82ac 	bgt.w	8340c <_dtoa_r+0xc14>
   82eb4:	f8dd e020 	ldr.w	lr, [sp, #32]
   82eb8:	f805 ac01 	strb.w	sl, [r5, #-1]
   82ebc:	4575      	cmp	r5, lr
   82ebe:	46ab      	mov	fp, r5
   82ec0:	f000 82b4 	beq.w	8342c <_dtoa_r+0xc34>
   82ec4:	4649      	mov	r1, r9
   82ec6:	220a      	movs	r2, #10
   82ec8:	2300      	movs	r3, #0
   82eca:	4620      	mov	r0, r4
   82ecc:	f001 f8dc 	bl	84088 <__multadd>
   82ed0:	42be      	cmp	r6, r7
   82ed2:	4681      	mov	r9, r0
   82ed4:	4631      	mov	r1, r6
   82ed6:	4620      	mov	r0, r4
   82ed8:	f04f 020a 	mov.w	r2, #10
   82edc:	f04f 0300 	mov.w	r3, #0
   82ee0:	d1a3      	bne.n	82e2a <_dtoa_r+0x632>
   82ee2:	f001 f8d1 	bl	84088 <__multadd>
   82ee6:	4606      	mov	r6, r0
   82ee8:	4607      	mov	r7, r0
   82eea:	e7a8      	b.n	82e3e <_dtoa_r+0x646>
   82eec:	2600      	movs	r6, #0
   82eee:	960b      	str	r6, [sp, #44]	; 0x2c
   82ef0:	9e07      	ldr	r6, [sp, #28]
   82ef2:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
   82ef6:	44b6      	add	lr, r6
   82ef8:	f10e 0901 	add.w	r9, lr, #1
   82efc:	f1b9 0f00 	cmp.w	r9, #0
   82f00:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
   82f04:	464e      	mov	r6, r9
   82f06:	f340 8150 	ble.w	831aa <_dtoa_r+0x9b2>
   82f0a:	2100      	movs	r1, #0
   82f0c:	2e17      	cmp	r6, #23
   82f0e:	6461      	str	r1, [r4, #68]	; 0x44
   82f10:	d90a      	bls.n	82f28 <_dtoa_r+0x730>
   82f12:	2201      	movs	r2, #1
   82f14:	2304      	movs	r3, #4
   82f16:	005b      	lsls	r3, r3, #1
   82f18:	f103 0014 	add.w	r0, r3, #20
   82f1c:	42b0      	cmp	r0, r6
   82f1e:	4611      	mov	r1, r2
   82f20:	f102 0201 	add.w	r2, r2, #1
   82f24:	d9f7      	bls.n	82f16 <_dtoa_r+0x71e>
   82f26:	6461      	str	r1, [r4, #68]	; 0x44
   82f28:	4620      	mov	r0, r4
   82f2a:	f001 f87d 	bl	84028 <_Balloc>
   82f2e:	2e0e      	cmp	r6, #14
   82f30:	9009      	str	r0, [sp, #36]	; 0x24
   82f32:	6420      	str	r0, [r4, #64]	; 0x40
   82f34:	f63f ad6c 	bhi.w	82a10 <_dtoa_r+0x218>
   82f38:	2d00      	cmp	r5, #0
   82f3a:	f43f ad69 	beq.w	82a10 <_dtoa_r+0x218>
   82f3e:	9d07      	ldr	r5, [sp, #28]
   82f40:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
   82f44:	2d00      	cmp	r5, #0
   82f46:	f340 821c 	ble.w	83382 <_dtoa_r+0xb8a>
   82f4a:	4b51      	ldr	r3, [pc, #324]	; (83090 <_dtoa_r+0x898>)
   82f4c:	f005 020f 	and.w	r2, r5, #15
   82f50:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82f54:	112d      	asrs	r5, r5, #4
   82f56:	e9d3 6700 	ldrd	r6, r7, [r3]
   82f5a:	06eb      	lsls	r3, r5, #27
   82f5c:	f140 81cd 	bpl.w	832fa <_dtoa_r+0xb02>
   82f60:	4b4c      	ldr	r3, [pc, #304]	; (83094 <_dtoa_r+0x89c>)
   82f62:	4650      	mov	r0, sl
   82f64:	4659      	mov	r1, fp
   82f66:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82f6a:	f002 f967 	bl	8523c <__aeabi_ddiv>
   82f6e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   82f72:	f005 050f 	and.w	r5, r5, #15
   82f76:	f04f 0803 	mov.w	r8, #3
   82f7a:	b18d      	cbz	r5, 82fa0 <_dtoa_r+0x7a8>
   82f7c:	f8df a114 	ldr.w	sl, [pc, #276]	; 83094 <_dtoa_r+0x89c>
   82f80:	4630      	mov	r0, r6
   82f82:	4639      	mov	r1, r7
   82f84:	07ee      	lsls	r6, r5, #31
   82f86:	d505      	bpl.n	82f94 <_dtoa_r+0x79c>
   82f88:	e9da 2300 	ldrd	r2, r3, [sl]
   82f8c:	f108 0801 	add.w	r8, r8, #1
   82f90:	f002 f82a 	bl	84fe8 <__aeabi_dmul>
   82f94:	106d      	asrs	r5, r5, #1
   82f96:	f10a 0a08 	add.w	sl, sl, #8
   82f9a:	d1f3      	bne.n	82f84 <_dtoa_r+0x78c>
   82f9c:	4606      	mov	r6, r0
   82f9e:	460f      	mov	r7, r1
   82fa0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   82fa4:	4632      	mov	r2, r6
   82fa6:	463b      	mov	r3, r7
   82fa8:	f002 f948 	bl	8523c <__aeabi_ddiv>
   82fac:	4682      	mov	sl, r0
   82fae:	468b      	mov	fp, r1
   82fb0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82fb2:	b145      	cbz	r5, 82fc6 <_dtoa_r+0x7ce>
   82fb4:	4650      	mov	r0, sl
   82fb6:	4659      	mov	r1, fp
   82fb8:	2200      	movs	r2, #0
   82fba:	4b37      	ldr	r3, [pc, #220]	; (83098 <_dtoa_r+0x8a0>)
   82fbc:	f002 fa86 	bl	854cc <__aeabi_dcmplt>
   82fc0:	2800      	cmp	r0, #0
   82fc2:	f040 82aa 	bne.w	8351a <_dtoa_r+0xd22>
   82fc6:	4640      	mov	r0, r8
   82fc8:	f001 ffa8 	bl	84f1c <__aeabi_i2d>
   82fcc:	4652      	mov	r2, sl
   82fce:	465b      	mov	r3, fp
   82fd0:	f002 f80a 	bl	84fe8 <__aeabi_dmul>
   82fd4:	2200      	movs	r2, #0
   82fd6:	4b31      	ldr	r3, [pc, #196]	; (8309c <_dtoa_r+0x8a4>)
   82fd8:	f001 fe54 	bl	84c84 <__adddf3>
   82fdc:	4606      	mov	r6, r0
   82fde:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   82fe2:	f1b9 0f00 	cmp.w	r9, #0
   82fe6:	f000 815a 	beq.w	8329e <_dtoa_r+0xaa6>
   82fea:	9d07      	ldr	r5, [sp, #28]
   82fec:	46c8      	mov	r8, r9
   82fee:	9517      	str	r5, [sp, #92]	; 0x5c
   82ff0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82ff2:	2d00      	cmp	r5, #0
   82ff4:	f000 8223 	beq.w	8343e <_dtoa_r+0xc46>
   82ff8:	4b25      	ldr	r3, [pc, #148]	; (83090 <_dtoa_r+0x898>)
   82ffa:	2000      	movs	r0, #0
   82ffc:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
   83000:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83004:	4926      	ldr	r1, [pc, #152]	; (830a0 <_dtoa_r+0x8a8>)
   83006:	f002 f919 	bl	8523c <__aeabi_ddiv>
   8300a:	4632      	mov	r2, r6
   8300c:	463b      	mov	r3, r7
   8300e:	f001 fe37 	bl	84c80 <__aeabi_dsub>
   83012:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83016:	4659      	mov	r1, fp
   83018:	4650      	mov	r0, sl
   8301a:	f002 fa7f 	bl	8551c <__aeabi_d2iz>
   8301e:	4605      	mov	r5, r0
   83020:	f001 ff7c 	bl	84f1c <__aeabi_i2d>
   83024:	4602      	mov	r2, r0
   83026:	460b      	mov	r3, r1
   83028:	4650      	mov	r0, sl
   8302a:	4659      	mov	r1, fp
   8302c:	f001 fe28 	bl	84c80 <__aeabi_dsub>
   83030:	3530      	adds	r5, #48	; 0x30
   83032:	9e09      	ldr	r6, [sp, #36]	; 0x24
   83034:	e9cd 0104 	strd	r0, r1, [sp, #16]
   83038:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   8303c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83040:	b2ed      	uxtb	r5, r5
   83042:	7035      	strb	r5, [r6, #0]
   83044:	f106 0b01 	add.w	fp, r6, #1
   83048:	f002 fa5e 	bl	85508 <__aeabi_dcmpgt>
   8304c:	2800      	cmp	r0, #0
   8304e:	f040 82ab 	bne.w	835a8 <_dtoa_r+0xdb0>
   83052:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   83056:	2000      	movs	r0, #0
   83058:	490f      	ldr	r1, [pc, #60]	; (83098 <_dtoa_r+0x8a0>)
   8305a:	f001 fe11 	bl	84c80 <__aeabi_dsub>
   8305e:	4602      	mov	r2, r0
   83060:	460b      	mov	r3, r1
   83062:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83066:	f002 fa4f 	bl	85508 <__aeabi_dcmpgt>
   8306a:	2800      	cmp	r0, #0
   8306c:	f040 82a2 	bne.w	835b4 <_dtoa_r+0xdbc>
   83070:	f1b8 0f01 	cmp.w	r8, #1
   83074:	f340 8181 	ble.w	8337a <_dtoa_r+0xb82>
   83078:	44b0      	add	r8, r6
   8307a:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
   8307e:	46a2      	mov	sl, r4
   83080:	46c1      	mov	r9, r8
   83082:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   83086:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
   8308a:	e019      	b.n	830c0 <_dtoa_r+0x8c8>
   8308c:	fffffbee 	.word	0xfffffbee
   83090:	00085be8 	.word	0x00085be8
   83094:	00085cb0 	.word	0x00085cb0
   83098:	3ff00000 	.word	0x3ff00000
   8309c:	401c0000 	.word	0x401c0000
   830a0:	3fe00000 	.word	0x3fe00000
   830a4:	2000      	movs	r0, #0
   830a6:	49a8      	ldr	r1, [pc, #672]	; (83348 <_dtoa_r+0xb50>)
   830a8:	f001 fdea 	bl	84c80 <__aeabi_dsub>
   830ac:	4622      	mov	r2, r4
   830ae:	462b      	mov	r3, r5
   830b0:	f002 fa0c 	bl	854cc <__aeabi_dcmplt>
   830b4:	2800      	cmp	r0, #0
   830b6:	f040 827b 	bne.w	835b0 <_dtoa_r+0xdb8>
   830ba:	45cb      	cmp	fp, r9
   830bc:	f000 815a 	beq.w	83374 <_dtoa_r+0xb7c>
   830c0:	4620      	mov	r0, r4
   830c2:	4629      	mov	r1, r5
   830c4:	2200      	movs	r2, #0
   830c6:	4ba1      	ldr	r3, [pc, #644]	; (8334c <_dtoa_r+0xb54>)
   830c8:	f001 ff8e 	bl	84fe8 <__aeabi_dmul>
   830cc:	2200      	movs	r2, #0
   830ce:	4b9f      	ldr	r3, [pc, #636]	; (8334c <_dtoa_r+0xb54>)
   830d0:	4604      	mov	r4, r0
   830d2:	460d      	mov	r5, r1
   830d4:	4630      	mov	r0, r6
   830d6:	4639      	mov	r1, r7
   830d8:	f001 ff86 	bl	84fe8 <__aeabi_dmul>
   830dc:	460f      	mov	r7, r1
   830de:	4606      	mov	r6, r0
   830e0:	f002 fa1c 	bl	8551c <__aeabi_d2iz>
   830e4:	4680      	mov	r8, r0
   830e6:	f001 ff19 	bl	84f1c <__aeabi_i2d>
   830ea:	4602      	mov	r2, r0
   830ec:	460b      	mov	r3, r1
   830ee:	4630      	mov	r0, r6
   830f0:	4639      	mov	r1, r7
   830f2:	f001 fdc5 	bl	84c80 <__aeabi_dsub>
   830f6:	f108 0830 	add.w	r8, r8, #48	; 0x30
   830fa:	fa5f f888 	uxtb.w	r8, r8
   830fe:	4622      	mov	r2, r4
   83100:	462b      	mov	r3, r5
   83102:	f80b 8b01 	strb.w	r8, [fp], #1
   83106:	4606      	mov	r6, r0
   83108:	460f      	mov	r7, r1
   8310a:	f002 f9df 	bl	854cc <__aeabi_dcmplt>
   8310e:	4632      	mov	r2, r6
   83110:	463b      	mov	r3, r7
   83112:	2800      	cmp	r0, #0
   83114:	d0c6      	beq.n	830a4 <_dtoa_r+0x8ac>
   83116:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   83118:	4654      	mov	r4, sl
   8311a:	9607      	str	r6, [sp, #28]
   8311c:	e539      	b.n	82b92 <_dtoa_r+0x39a>
   8311e:	2600      	movs	r6, #0
   83120:	960b      	str	r6, [sp, #44]	; 0x2c
   83122:	9825      	ldr	r0, [sp, #148]	; 0x94
   83124:	2800      	cmp	r0, #0
   83126:	dd3c      	ble.n	831a2 <_dtoa_r+0x9aa>
   83128:	4606      	mov	r6, r0
   8312a:	900f      	str	r0, [sp, #60]	; 0x3c
   8312c:	4681      	mov	r9, r0
   8312e:	e6ec      	b.n	82f0a <_dtoa_r+0x712>
   83130:	2601      	movs	r6, #1
   83132:	960b      	str	r6, [sp, #44]	; 0x2c
   83134:	e7f5      	b.n	83122 <_dtoa_r+0x92a>
   83136:	f1b9 0f00 	cmp.w	r9, #0
   8313a:	f73f ac7c 	bgt.w	82a36 <_dtoa_r+0x23e>
   8313e:	f040 80c6 	bne.w	832ce <_dtoa_r+0xad6>
   83142:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83146:	2200      	movs	r2, #0
   83148:	4b81      	ldr	r3, [pc, #516]	; (83350 <_dtoa_r+0xb58>)
   8314a:	f001 ff4d 	bl	84fe8 <__aeabi_dmul>
   8314e:	4652      	mov	r2, sl
   83150:	465b      	mov	r3, fp
   83152:	f002 f9cf 	bl	854f4 <__aeabi_dcmpge>
   83156:	46c8      	mov	r8, r9
   83158:	464e      	mov	r6, r9
   8315a:	2800      	cmp	r0, #0
   8315c:	d07c      	beq.n	83258 <_dtoa_r+0xa60>
   8315e:	9d25      	ldr	r5, [sp, #148]	; 0x94
   83160:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   83164:	43ed      	mvns	r5, r5
   83166:	9507      	str	r5, [sp, #28]
   83168:	4641      	mov	r1, r8
   8316a:	4620      	mov	r0, r4
   8316c:	f000 ff82 	bl	84074 <_Bfree>
   83170:	2e00      	cmp	r6, #0
   83172:	f47f ae06 	bne.w	82d82 <_dtoa_r+0x58a>
   83176:	e50c      	b.n	82b92 <_dtoa_r+0x39a>
   83178:	990a      	ldr	r1, [sp, #40]	; 0x28
   8317a:	4620      	mov	r0, r4
   8317c:	f001 f8c4 	bl	84308 <__pow5mult>
   83180:	900a      	str	r0, [sp, #40]	; 0x28
   83182:	e56a      	b.n	82c5a <_dtoa_r+0x462>
   83184:	9d16      	ldr	r5, [sp, #88]	; 0x58
   83186:	2d00      	cmp	r5, #0
   83188:	f000 81b8 	beq.w	834fc <_dtoa_r+0xd04>
   8318c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83190:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83192:	9d08      	ldr	r5, [sp, #32]
   83194:	e527      	b.n	82be6 <_dtoa_r+0x3ee>
   83196:	4601      	mov	r1, r0
   83198:	4620      	mov	r0, r4
   8319a:	f000 ff6b 	bl	84074 <_Bfree>
   8319e:	2201      	movs	r2, #1
   831a0:	e67a      	b.n	82e98 <_dtoa_r+0x6a0>
   831a2:	2601      	movs	r6, #1
   831a4:	9625      	str	r6, [sp, #148]	; 0x94
   831a6:	960f      	str	r6, [sp, #60]	; 0x3c
   831a8:	46b1      	mov	r9, r6
   831aa:	2100      	movs	r1, #0
   831ac:	6461      	str	r1, [r4, #68]	; 0x44
   831ae:	e6bb      	b.n	82f28 <_dtoa_r+0x730>
   831b0:	980a      	ldr	r0, [sp, #40]	; 0x28
   831b2:	4641      	mov	r1, r8
   831b4:	f001 f954 	bl	84460 <__mcmp>
   831b8:	2800      	cmp	r0, #0
   831ba:	f6bf ad8f 	bge.w	82cdc <_dtoa_r+0x4e4>
   831be:	f8dd e01c 	ldr.w	lr, [sp, #28]
   831c2:	990a      	ldr	r1, [sp, #40]	; 0x28
   831c4:	f10e 3eff 	add.w	lr, lr, #4294967295
   831c8:	4620      	mov	r0, r4
   831ca:	220a      	movs	r2, #10
   831cc:	2300      	movs	r3, #0
   831ce:	f8cd e01c 	str.w	lr, [sp, #28]
   831d2:	f000 ff59 	bl	84088 <__multadd>
   831d6:	900a      	str	r0, [sp, #40]	; 0x28
   831d8:	980b      	ldr	r0, [sp, #44]	; 0x2c
   831da:	2800      	cmp	r0, #0
   831dc:	f040 8209 	bne.w	835f2 <_dtoa_r+0xdfa>
   831e0:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   831e4:	e57a      	b.n	82cdc <_dtoa_r+0x4e4>
   831e6:	f8d8 3010 	ldr.w	r3, [r8, #16]
   831ea:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   831ee:	6918      	ldr	r0, [r3, #16]
   831f0:	f000 ff94 	bl	8411c <__hi0bits>
   831f4:	f1c0 0020 	rsb	r0, r0, #32
   831f8:	e547      	b.n	82c8a <_dtoa_r+0x492>
   831fa:	9809      	ldr	r0, [sp, #36]	; 0x24
   831fc:	f7ff bb2c 	b.w	82858 <_dtoa_r+0x60>
   83200:	f1ba 0f00 	cmp.w	sl, #0
   83204:	f47f ad3b 	bne.w	82c7e <_dtoa_r+0x486>
   83208:	f3cb 0313 	ubfx	r3, fp, #0, #20
   8320c:	2b00      	cmp	r3, #0
   8320e:	f040 817c 	bne.w	8350a <_dtoa_r+0xd12>
   83212:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83216:	0d3f      	lsrs	r7, r7, #20
   83218:	053f      	lsls	r7, r7, #20
   8321a:	2f00      	cmp	r7, #0
   8321c:	f43f ad30 	beq.w	82c80 <_dtoa_r+0x488>
   83220:	9a08      	ldr	r2, [sp, #32]
   83222:	9b06      	ldr	r3, [sp, #24]
   83224:	3201      	adds	r2, #1
   83226:	3301      	adds	r3, #1
   83228:	9208      	str	r2, [sp, #32]
   8322a:	9306      	str	r3, [sp, #24]
   8322c:	2701      	movs	r7, #1
   8322e:	e527      	b.n	82c80 <_dtoa_r+0x488>
   83230:	9924      	ldr	r1, [sp, #144]	; 0x90
   83232:	2902      	cmp	r1, #2
   83234:	f77f ad56 	ble.w	82ce4 <_dtoa_r+0x4ec>
   83238:	f1b9 0f00 	cmp.w	r9, #0
   8323c:	d18f      	bne.n	8315e <_dtoa_r+0x966>
   8323e:	4641      	mov	r1, r8
   83240:	464b      	mov	r3, r9
   83242:	2205      	movs	r2, #5
   83244:	4620      	mov	r0, r4
   83246:	f000 ff1f 	bl	84088 <__multadd>
   8324a:	4680      	mov	r8, r0
   8324c:	4641      	mov	r1, r8
   8324e:	980a      	ldr	r0, [sp, #40]	; 0x28
   83250:	f001 f906 	bl	84460 <__mcmp>
   83254:	2800      	cmp	r0, #0
   83256:	dd82      	ble.n	8315e <_dtoa_r+0x966>
   83258:	9d07      	ldr	r5, [sp, #28]
   8325a:	2331      	movs	r3, #49	; 0x31
   8325c:	3501      	adds	r5, #1
   8325e:	9507      	str	r5, [sp, #28]
   83260:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83262:	702b      	strb	r3, [r5, #0]
   83264:	f105 0b01 	add.w	fp, r5, #1
   83268:	e77e      	b.n	83168 <_dtoa_r+0x970>
   8326a:	9807      	ldr	r0, [sp, #28]
   8326c:	9909      	ldr	r1, [sp, #36]	; 0x24
   8326e:	2331      	movs	r3, #49	; 0x31
   83270:	3001      	adds	r0, #1
   83272:	9007      	str	r0, [sp, #28]
   83274:	700b      	strb	r3, [r1, #0]
   83276:	e576      	b.n	82d66 <_dtoa_r+0x56e>
   83278:	46a3      	mov	fp, r4
   8327a:	9c03      	ldr	r4, [sp, #12]
   8327c:	e489      	b.n	82b92 <_dtoa_r+0x39a>
   8327e:	4640      	mov	r0, r8
   83280:	f001 fe4c 	bl	84f1c <__aeabi_i2d>
   83284:	4602      	mov	r2, r0
   83286:	460b      	mov	r3, r1
   83288:	4650      	mov	r0, sl
   8328a:	4659      	mov	r1, fp
   8328c:	f001 feac 	bl	84fe8 <__aeabi_dmul>
   83290:	2200      	movs	r2, #0
   83292:	4b30      	ldr	r3, [pc, #192]	; (83354 <_dtoa_r+0xb5c>)
   83294:	f001 fcf6 	bl	84c84 <__adddf3>
   83298:	4606      	mov	r6, r0
   8329a:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   8329e:	4650      	mov	r0, sl
   832a0:	4659      	mov	r1, fp
   832a2:	2200      	movs	r2, #0
   832a4:	4b2a      	ldr	r3, [pc, #168]	; (83350 <_dtoa_r+0xb58>)
   832a6:	f001 fceb 	bl	84c80 <__aeabi_dsub>
   832aa:	4632      	mov	r2, r6
   832ac:	463b      	mov	r3, r7
   832ae:	4682      	mov	sl, r0
   832b0:	468b      	mov	fp, r1
   832b2:	f002 f929 	bl	85508 <__aeabi_dcmpgt>
   832b6:	2800      	cmp	r0, #0
   832b8:	f040 80bd 	bne.w	83436 <_dtoa_r+0xc3e>
   832bc:	4632      	mov	r2, r6
   832be:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   832c2:	4650      	mov	r0, sl
   832c4:	4659      	mov	r1, fp
   832c6:	f002 f901 	bl	854cc <__aeabi_dcmplt>
   832ca:	2800      	cmp	r0, #0
   832cc:	d055      	beq.n	8337a <_dtoa_r+0xb82>
   832ce:	f04f 0800 	mov.w	r8, #0
   832d2:	4646      	mov	r6, r8
   832d4:	e743      	b.n	8315e <_dtoa_r+0x966>
   832d6:	990a      	ldr	r1, [sp, #40]	; 0x28
   832d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   832da:	4620      	mov	r0, r4
   832dc:	f001 f814 	bl	84308 <__pow5mult>
   832e0:	900a      	str	r0, [sp, #40]	; 0x28
   832e2:	e4ba      	b.n	82c5a <_dtoa_r+0x462>
   832e4:	2601      	movs	r6, #1
   832e6:	960b      	str	r6, [sp, #44]	; 0x2c
   832e8:	e602      	b.n	82ef0 <_dtoa_r+0x6f8>
   832ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   832ec:	9e0d      	ldr	r6, [sp, #52]	; 0x34
   832ee:	1b7b      	subs	r3, r7, r5
   832f0:	441e      	add	r6, r3
   832f2:	970c      	str	r7, [sp, #48]	; 0x30
   832f4:	960d      	str	r6, [sp, #52]	; 0x34
   832f6:	2700      	movs	r7, #0
   832f8:	e46f      	b.n	82bda <_dtoa_r+0x3e2>
   832fa:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   832fe:	f04f 0802 	mov.w	r8, #2
   83302:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83306:	e638      	b.n	82f7a <_dtoa_r+0x782>
   83308:	2a00      	cmp	r2, #0
   8330a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8330e:	46d9      	mov	r9, fp
   83310:	dd11      	ble.n	83336 <_dtoa_r+0xb3e>
   83312:	990a      	ldr	r1, [sp, #40]	; 0x28
   83314:	2201      	movs	r2, #1
   83316:	4620      	mov	r0, r4
   83318:	f001 f844 	bl	843a4 <__lshift>
   8331c:	4641      	mov	r1, r8
   8331e:	900a      	str	r0, [sp, #40]	; 0x28
   83320:	f001 f89e 	bl	84460 <__mcmp>
   83324:	2800      	cmp	r0, #0
   83326:	f340 815d 	ble.w	835e4 <_dtoa_r+0xdec>
   8332a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   8332e:	f000 811b 	beq.w	83568 <_dtoa_r+0xd70>
   83332:	f109 0a31 	add.w	sl, r9, #49	; 0x31
   83336:	9b06      	ldr	r3, [sp, #24]
   83338:	4635      	mov	r5, r6
   8333a:	f883 a000 	strb.w	sl, [r3]
   8333e:	f103 0b01 	add.w	fp, r3, #1
   83342:	463e      	mov	r6, r7
   83344:	e50f      	b.n	82d66 <_dtoa_r+0x56e>
   83346:	bf00      	nop
   83348:	3ff00000 	.word	0x3ff00000
   8334c:	40240000 	.word	0x40240000
   83350:	40140000 	.word	0x40140000
   83354:	401c0000 	.word	0x401c0000
   83358:	d103      	bne.n	83362 <_dtoa_r+0xb6a>
   8335a:	f01a 0f01 	tst.w	sl, #1
   8335e:	f47f acf2 	bne.w	82d46 <_dtoa_r+0x54e>
   83362:	465b      	mov	r3, fp
   83364:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   83368:	469b      	mov	fp, r3
   8336a:	2a30      	cmp	r2, #48	; 0x30
   8336c:	f103 33ff 	add.w	r3, r3, #4294967295
   83370:	d0f8      	beq.n	83364 <_dtoa_r+0xb6c>
   83372:	e4f8      	b.n	82d66 <_dtoa_r+0x56e>
   83374:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
   83378:	4654      	mov	r4, sl
   8337a:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   8337e:	f7ff bb47 	b.w	82a10 <_dtoa_r+0x218>
   83382:	9e07      	ldr	r6, [sp, #28]
   83384:	4275      	negs	r5, r6
   83386:	2d00      	cmp	r5, #0
   83388:	f000 80c2 	beq.w	83510 <_dtoa_r+0xd18>
   8338c:	4ba3      	ldr	r3, [pc, #652]	; (8361c <_dtoa_r+0xe24>)
   8338e:	f005 020f 	and.w	r2, r5, #15
   83392:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83396:	e9d3 2300 	ldrd	r2, r3, [r3]
   8339a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8339e:	f001 fe23 	bl	84fe8 <__aeabi_dmul>
   833a2:	112d      	asrs	r5, r5, #4
   833a4:	4682      	mov	sl, r0
   833a6:	468b      	mov	fp, r1
   833a8:	f000 812e 	beq.w	83608 <_dtoa_r+0xe10>
   833ac:	4e9c      	ldr	r6, [pc, #624]	; (83620 <_dtoa_r+0xe28>)
   833ae:	f04f 0802 	mov.w	r8, #2
   833b2:	07ea      	lsls	r2, r5, #31
   833b4:	d505      	bpl.n	833c2 <_dtoa_r+0xbca>
   833b6:	e9d6 2300 	ldrd	r2, r3, [r6]
   833ba:	f108 0801 	add.w	r8, r8, #1
   833be:	f001 fe13 	bl	84fe8 <__aeabi_dmul>
   833c2:	106d      	asrs	r5, r5, #1
   833c4:	f106 0608 	add.w	r6, r6, #8
   833c8:	d1f3      	bne.n	833b2 <_dtoa_r+0xbba>
   833ca:	4682      	mov	sl, r0
   833cc:	468b      	mov	fp, r1
   833ce:	e5ef      	b.n	82fb0 <_dtoa_r+0x7b8>
   833d0:	9e07      	ldr	r6, [sp, #28]
   833d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
   833d4:	2230      	movs	r2, #48	; 0x30
   833d6:	702a      	strb	r2, [r5, #0]
   833d8:	3601      	adds	r6, #1
   833da:	2231      	movs	r2, #49	; 0x31
   833dc:	9607      	str	r6, [sp, #28]
   833de:	701a      	strb	r2, [r3, #0]
   833e0:	f7ff bbd7 	b.w	82b92 <_dtoa_r+0x39a>
   833e4:	6871      	ldr	r1, [r6, #4]
   833e6:	4620      	mov	r0, r4
   833e8:	f000 fe1e 	bl	84028 <_Balloc>
   833ec:	6933      	ldr	r3, [r6, #16]
   833ee:	4605      	mov	r5, r0
   833f0:	1c9a      	adds	r2, r3, #2
   833f2:	0092      	lsls	r2, r2, #2
   833f4:	f106 010c 	add.w	r1, r6, #12
   833f8:	300c      	adds	r0, #12
   833fa:	f000 fd35 	bl	83e68 <memcpy>
   833fe:	4620      	mov	r0, r4
   83400:	4629      	mov	r1, r5
   83402:	2201      	movs	r2, #1
   83404:	f000 ffce 	bl	843a4 <__lshift>
   83408:	4607      	mov	r7, r0
   8340a:	e503      	b.n	82e14 <_dtoa_r+0x61c>
   8340c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83410:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83414:	f000 80a8 	beq.w	83568 <_dtoa_r+0xd70>
   83418:	9d06      	ldr	r5, [sp, #24]
   8341a:	f10a 0301 	add.w	r3, sl, #1
   8341e:	702b      	strb	r3, [r5, #0]
   83420:	4635      	mov	r5, r6
   83422:	9e06      	ldr	r6, [sp, #24]
   83424:	f106 0b01 	add.w	fp, r6, #1
   83428:	463e      	mov	r6, r7
   8342a:	e49c      	b.n	82d66 <_dtoa_r+0x56e>
   8342c:	4635      	mov	r5, r6
   8342e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83432:	463e      	mov	r6, r7
   83434:	e47b      	b.n	82d2e <_dtoa_r+0x536>
   83436:	f04f 0800 	mov.w	r8, #0
   8343a:	4646      	mov	r6, r8
   8343c:	e70c      	b.n	83258 <_dtoa_r+0xa60>
   8343e:	4977      	ldr	r1, [pc, #476]	; (8361c <_dtoa_r+0xe24>)
   83440:	f108 35ff 	add.w	r5, r8, #4294967295
   83444:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   83448:	4632      	mov	r2, r6
   8344a:	463b      	mov	r3, r7
   8344c:	e9d1 0100 	ldrd	r0, r1, [r1]
   83450:	9510      	str	r5, [sp, #64]	; 0x40
   83452:	f001 fdc9 	bl	84fe8 <__aeabi_dmul>
   83456:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   8345a:	4659      	mov	r1, fp
   8345c:	4650      	mov	r0, sl
   8345e:	f002 f85d 	bl	8551c <__aeabi_d2iz>
   83462:	4605      	mov	r5, r0
   83464:	f001 fd5a 	bl	84f1c <__aeabi_i2d>
   83468:	4602      	mov	r2, r0
   8346a:	460b      	mov	r3, r1
   8346c:	4650      	mov	r0, sl
   8346e:	4659      	mov	r1, fp
   83470:	f001 fc06 	bl	84c80 <__aeabi_dsub>
   83474:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
   83478:	3530      	adds	r5, #48	; 0x30
   8347a:	f1b8 0f01 	cmp.w	r8, #1
   8347e:	4606      	mov	r6, r0
   83480:	460f      	mov	r7, r1
   83482:	f88e 5000 	strb.w	r5, [lr]
   83486:	f10e 0b01 	add.w	fp, lr, #1
   8348a:	d01e      	beq.n	834ca <_dtoa_r+0xcd2>
   8348c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8348e:	1e6b      	subs	r3, r5, #1
   83490:	eb03 0a08 	add.w	sl, r3, r8
   83494:	2200      	movs	r2, #0
   83496:	4b63      	ldr	r3, [pc, #396]	; (83624 <_dtoa_r+0xe2c>)
   83498:	f001 fda6 	bl	84fe8 <__aeabi_dmul>
   8349c:	460f      	mov	r7, r1
   8349e:	4606      	mov	r6, r0
   834a0:	f002 f83c 	bl	8551c <__aeabi_d2iz>
   834a4:	4680      	mov	r8, r0
   834a6:	f001 fd39 	bl	84f1c <__aeabi_i2d>
   834aa:	f108 0830 	add.w	r8, r8, #48	; 0x30
   834ae:	4602      	mov	r2, r0
   834b0:	460b      	mov	r3, r1
   834b2:	4630      	mov	r0, r6
   834b4:	4639      	mov	r1, r7
   834b6:	f001 fbe3 	bl	84c80 <__aeabi_dsub>
   834ba:	f805 8f01 	strb.w	r8, [r5, #1]!
   834be:	4555      	cmp	r5, sl
   834c0:	d1e8      	bne.n	83494 <_dtoa_r+0xc9c>
   834c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   834c4:	4606      	mov	r6, r0
   834c6:	460f      	mov	r7, r1
   834c8:	44ab      	add	fp, r5
   834ca:	2200      	movs	r2, #0
   834cc:	4b56      	ldr	r3, [pc, #344]	; (83628 <_dtoa_r+0xe30>)
   834ce:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   834d2:	f001 fbd7 	bl	84c84 <__adddf3>
   834d6:	4632      	mov	r2, r6
   834d8:	463b      	mov	r3, r7
   834da:	f001 fff7 	bl	854cc <__aeabi_dcmplt>
   834de:	2800      	cmp	r0, #0
   834e0:	d04d      	beq.n	8357e <_dtoa_r+0xd86>
   834e2:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   834e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   834e6:	9607      	str	r6, [sp, #28]
   834e8:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   834ec:	f7ff bb4a 	b.w	82b84 <_dtoa_r+0x38c>
   834f0:	9e08      	ldr	r6, [sp, #32]
   834f2:	2300      	movs	r3, #0
   834f4:	ebc9 0506 	rsb	r5, r9, r6
   834f8:	f7ff bb75 	b.w	82be6 <_dtoa_r+0x3ee>
   834fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
   834fe:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83500:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   83504:	9d08      	ldr	r5, [sp, #32]
   83506:	f7ff bb6e 	b.w	82be6 <_dtoa_r+0x3ee>
   8350a:	4657      	mov	r7, sl
   8350c:	f7ff bbb8 	b.w	82c80 <_dtoa_r+0x488>
   83510:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   83514:	f04f 0802 	mov.w	r8, #2
   83518:	e54a      	b.n	82fb0 <_dtoa_r+0x7b8>
   8351a:	f1b9 0f00 	cmp.w	r9, #0
   8351e:	f43f aeae 	beq.w	8327e <_dtoa_r+0xa86>
   83522:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   83524:	2e00      	cmp	r6, #0
   83526:	f77f af28 	ble.w	8337a <_dtoa_r+0xb82>
   8352a:	2200      	movs	r2, #0
   8352c:	4b3d      	ldr	r3, [pc, #244]	; (83624 <_dtoa_r+0xe2c>)
   8352e:	4650      	mov	r0, sl
   83530:	4659      	mov	r1, fp
   83532:	f001 fd59 	bl	84fe8 <__aeabi_dmul>
   83536:	4682      	mov	sl, r0
   83538:	f108 0001 	add.w	r0, r8, #1
   8353c:	468b      	mov	fp, r1
   8353e:	f001 fced 	bl	84f1c <__aeabi_i2d>
   83542:	4602      	mov	r2, r0
   83544:	460b      	mov	r3, r1
   83546:	4650      	mov	r0, sl
   83548:	4659      	mov	r1, fp
   8354a:	f001 fd4d 	bl	84fe8 <__aeabi_dmul>
   8354e:	2200      	movs	r2, #0
   83550:	4b36      	ldr	r3, [pc, #216]	; (8362c <_dtoa_r+0xe34>)
   83552:	f001 fb97 	bl	84c84 <__adddf3>
   83556:	9d07      	ldr	r5, [sp, #28]
   83558:	4606      	mov	r6, r0
   8355a:	3d01      	subs	r5, #1
   8355c:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   83560:	9517      	str	r5, [sp, #92]	; 0x5c
   83562:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
   83566:	e543      	b.n	82ff0 <_dtoa_r+0x7f8>
   83568:	4635      	mov	r5, r6
   8356a:	9b06      	ldr	r3, [sp, #24]
   8356c:	9e06      	ldr	r6, [sp, #24]
   8356e:	2239      	movs	r2, #57	; 0x39
   83570:	7032      	strb	r2, [r6, #0]
   83572:	f103 0b01 	add.w	fp, r3, #1
   83576:	463e      	mov	r6, r7
   83578:	9909      	ldr	r1, [sp, #36]	; 0x24
   8357a:	f7ff bbee 	b.w	82d5a <_dtoa_r+0x562>
   8357e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
   83582:	2000      	movs	r0, #0
   83584:	4928      	ldr	r1, [pc, #160]	; (83628 <_dtoa_r+0xe30>)
   83586:	f001 fb7b 	bl	84c80 <__aeabi_dsub>
   8358a:	4632      	mov	r2, r6
   8358c:	463b      	mov	r3, r7
   8358e:	f001 ffbb 	bl	85508 <__aeabi_dcmpgt>
   83592:	2800      	cmp	r0, #0
   83594:	f43f aef1 	beq.w	8337a <_dtoa_r+0xb82>
   83598:	465b      	mov	r3, fp
   8359a:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   8359e:	469b      	mov	fp, r3
   835a0:	2a30      	cmp	r2, #48	; 0x30
   835a2:	f103 33ff 	add.w	r3, r3, #4294967295
   835a6:	d0f8      	beq.n	8359a <_dtoa_r+0xda2>
   835a8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   835aa:	9507      	str	r5, [sp, #28]
   835ac:	f7ff baf1 	b.w	82b92 <_dtoa_r+0x39a>
   835b0:	4645      	mov	r5, r8
   835b2:	4654      	mov	r4, sl
   835b4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   835b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   835b8:	9607      	str	r6, [sp, #28]
   835ba:	f7ff bae3 	b.w	82b84 <_dtoa_r+0x38c>
   835be:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   835c2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   835c6:	d0cf      	beq.n	83568 <_dtoa_r+0xd70>
   835c8:	9b03      	ldr	r3, [sp, #12]
   835ca:	4635      	mov	r5, r6
   835cc:	2b00      	cmp	r3, #0
   835ce:	9e06      	ldr	r6, [sp, #24]
   835d0:	bfc8      	it	gt
   835d2:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
   835d6:	f886 a000 	strb.w	sl, [r6]
   835da:	f106 0b01 	add.w	fp, r6, #1
   835de:	463e      	mov	r6, r7
   835e0:	f7ff bbc1 	b.w	82d66 <_dtoa_r+0x56e>
   835e4:	f47f aea7 	bne.w	83336 <_dtoa_r+0xb3e>
   835e8:	f01a 0f01 	tst.w	sl, #1
   835ec:	f43f aea3 	beq.w	83336 <_dtoa_r+0xb3e>
   835f0:	e69b      	b.n	8332a <_dtoa_r+0xb32>
   835f2:	4631      	mov	r1, r6
   835f4:	4620      	mov	r0, r4
   835f6:	220a      	movs	r2, #10
   835f8:	2300      	movs	r3, #0
   835fa:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   835fe:	f000 fd43 	bl	84088 <__multadd>
   83602:	4606      	mov	r6, r0
   83604:	f7ff bb6a 	b.w	82cdc <_dtoa_r+0x4e4>
   83608:	f04f 0802 	mov.w	r8, #2
   8360c:	e4d0      	b.n	82fb0 <_dtoa_r+0x7b8>
   8360e:	f43f ab50 	beq.w	82cb2 <_dtoa_r+0x4ba>
   83612:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
   83616:	f7ff bbe0 	b.w	82dda <_dtoa_r+0x5e2>
   8361a:	bf00      	nop
   8361c:	00085be8 	.word	0x00085be8
   83620:	00085cb0 	.word	0x00085cb0
   83624:	40240000 	.word	0x40240000
   83628:	3fe00000 	.word	0x3fe00000
   8362c:	401c0000 	.word	0x401c0000

00083630 <__libc_fini_array>:
   83630:	b538      	push	{r3, r4, r5, lr}
   83632:	4d09      	ldr	r5, [pc, #36]	; (83658 <__libc_fini_array+0x28>)
   83634:	4c09      	ldr	r4, [pc, #36]	; (8365c <__libc_fini_array+0x2c>)
   83636:	1b64      	subs	r4, r4, r5
   83638:	10a4      	asrs	r4, r4, #2
   8363a:	bf18      	it	ne
   8363c:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   83640:	d005      	beq.n	8364e <__libc_fini_array+0x1e>
   83642:	3c01      	subs	r4, #1
   83644:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   83648:	4798      	blx	r3
   8364a:	2c00      	cmp	r4, #0
   8364c:	d1f9      	bne.n	83642 <__libc_fini_array+0x12>
   8364e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   83652:	f002 bb51 	b.w	85cf8 <_fini>
   83656:	bf00      	nop
   83658:	00085d04 	.word	0x00085d04
   8365c:	00085d08 	.word	0x00085d08

00083660 <_malloc_trim_r>:
   83660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83662:	4d23      	ldr	r5, [pc, #140]	; (836f0 <_malloc_trim_r+0x90>)
   83664:	460f      	mov	r7, r1
   83666:	4604      	mov	r4, r0
   83668:	f000 fcda 	bl	84020 <__malloc_lock>
   8366c:	68ab      	ldr	r3, [r5, #8]
   8366e:	685e      	ldr	r6, [r3, #4]
   83670:	f026 0603 	bic.w	r6, r6, #3
   83674:	1bf1      	subs	r1, r6, r7
   83676:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   8367a:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   8367e:	f021 010f 	bic.w	r1, r1, #15
   83682:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   83686:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   8368a:	db07      	blt.n	8369c <_malloc_trim_r+0x3c>
   8368c:	4620      	mov	r0, r4
   8368e:	2100      	movs	r1, #0
   83690:	f001 f9dc 	bl	84a4c <_sbrk_r>
   83694:	68ab      	ldr	r3, [r5, #8]
   83696:	4433      	add	r3, r6
   83698:	4298      	cmp	r0, r3
   8369a:	d004      	beq.n	836a6 <_malloc_trim_r+0x46>
   8369c:	4620      	mov	r0, r4
   8369e:	f000 fcc1 	bl	84024 <__malloc_unlock>
   836a2:	2000      	movs	r0, #0
   836a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   836a6:	4620      	mov	r0, r4
   836a8:	4279      	negs	r1, r7
   836aa:	f001 f9cf 	bl	84a4c <_sbrk_r>
   836ae:	3001      	adds	r0, #1
   836b0:	d00d      	beq.n	836ce <_malloc_trim_r+0x6e>
   836b2:	4b10      	ldr	r3, [pc, #64]	; (836f4 <_malloc_trim_r+0x94>)
   836b4:	68aa      	ldr	r2, [r5, #8]
   836b6:	6819      	ldr	r1, [r3, #0]
   836b8:	1bf6      	subs	r6, r6, r7
   836ba:	f046 0601 	orr.w	r6, r6, #1
   836be:	4620      	mov	r0, r4
   836c0:	1bc9      	subs	r1, r1, r7
   836c2:	6056      	str	r6, [r2, #4]
   836c4:	6019      	str	r1, [r3, #0]
   836c6:	f000 fcad 	bl	84024 <__malloc_unlock>
   836ca:	2001      	movs	r0, #1
   836cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   836ce:	4620      	mov	r0, r4
   836d0:	2100      	movs	r1, #0
   836d2:	f001 f9bb 	bl	84a4c <_sbrk_r>
   836d6:	68ab      	ldr	r3, [r5, #8]
   836d8:	1ac2      	subs	r2, r0, r3
   836da:	2a0f      	cmp	r2, #15
   836dc:	ddde      	ble.n	8369c <_malloc_trim_r+0x3c>
   836de:	4d06      	ldr	r5, [pc, #24]	; (836f8 <_malloc_trim_r+0x98>)
   836e0:	4904      	ldr	r1, [pc, #16]	; (836f4 <_malloc_trim_r+0x94>)
   836e2:	682d      	ldr	r5, [r5, #0]
   836e4:	f042 0201 	orr.w	r2, r2, #1
   836e8:	1b40      	subs	r0, r0, r5
   836ea:	605a      	str	r2, [r3, #4]
   836ec:	6008      	str	r0, [r1, #0]
   836ee:	e7d5      	b.n	8369c <_malloc_trim_r+0x3c>
   836f0:	200705dc 	.word	0x200705dc
   836f4:	20070ab0 	.word	0x20070ab0
   836f8:	200709e8 	.word	0x200709e8

000836fc <_free_r>:
   836fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83700:	460d      	mov	r5, r1
   83702:	4606      	mov	r6, r0
   83704:	2900      	cmp	r1, #0
   83706:	d055      	beq.n	837b4 <_free_r+0xb8>
   83708:	f000 fc8a 	bl	84020 <__malloc_lock>
   8370c:	f855 1c04 	ldr.w	r1, [r5, #-4]
   83710:	f8df c170 	ldr.w	ip, [pc, #368]	; 83884 <_free_r+0x188>
   83714:	f1a5 0408 	sub.w	r4, r5, #8
   83718:	f021 0301 	bic.w	r3, r1, #1
   8371c:	18e2      	adds	r2, r4, r3
   8371e:	f8dc 0008 	ldr.w	r0, [ip, #8]
   83722:	6857      	ldr	r7, [r2, #4]
   83724:	4290      	cmp	r0, r2
   83726:	f027 0703 	bic.w	r7, r7, #3
   8372a:	d068      	beq.n	837fe <_free_r+0x102>
   8372c:	f011 0101 	ands.w	r1, r1, #1
   83730:	6057      	str	r7, [r2, #4]
   83732:	d032      	beq.n	8379a <_free_r+0x9e>
   83734:	2100      	movs	r1, #0
   83736:	19d0      	adds	r0, r2, r7
   83738:	6840      	ldr	r0, [r0, #4]
   8373a:	07c0      	lsls	r0, r0, #31
   8373c:	d406      	bmi.n	8374c <_free_r+0x50>
   8373e:	443b      	add	r3, r7
   83740:	6890      	ldr	r0, [r2, #8]
   83742:	2900      	cmp	r1, #0
   83744:	d04d      	beq.n	837e2 <_free_r+0xe6>
   83746:	68d2      	ldr	r2, [r2, #12]
   83748:	60c2      	str	r2, [r0, #12]
   8374a:	6090      	str	r0, [r2, #8]
   8374c:	f043 0201 	orr.w	r2, r3, #1
   83750:	6062      	str	r2, [r4, #4]
   83752:	50e3      	str	r3, [r4, r3]
   83754:	b9e1      	cbnz	r1, 83790 <_free_r+0x94>
   83756:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8375a:	d32d      	bcc.n	837b8 <_free_r+0xbc>
   8375c:	0a5a      	lsrs	r2, r3, #9
   8375e:	2a04      	cmp	r2, #4
   83760:	d869      	bhi.n	83836 <_free_r+0x13a>
   83762:	0998      	lsrs	r0, r3, #6
   83764:	3038      	adds	r0, #56	; 0x38
   83766:	0041      	lsls	r1, r0, #1
   83768:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   8376c:	f8dc 2008 	ldr.w	r2, [ip, #8]
   83770:	4944      	ldr	r1, [pc, #272]	; (83884 <_free_r+0x188>)
   83772:	4562      	cmp	r2, ip
   83774:	d065      	beq.n	83842 <_free_r+0x146>
   83776:	6851      	ldr	r1, [r2, #4]
   83778:	f021 0103 	bic.w	r1, r1, #3
   8377c:	428b      	cmp	r3, r1
   8377e:	d202      	bcs.n	83786 <_free_r+0x8a>
   83780:	6892      	ldr	r2, [r2, #8]
   83782:	4594      	cmp	ip, r2
   83784:	d1f7      	bne.n	83776 <_free_r+0x7a>
   83786:	68d3      	ldr	r3, [r2, #12]
   83788:	60e3      	str	r3, [r4, #12]
   8378a:	60a2      	str	r2, [r4, #8]
   8378c:	609c      	str	r4, [r3, #8]
   8378e:	60d4      	str	r4, [r2, #12]
   83790:	4630      	mov	r0, r6
   83792:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83796:	f000 bc45 	b.w	84024 <__malloc_unlock>
   8379a:	f855 5c08 	ldr.w	r5, [r5, #-8]
   8379e:	f10c 0808 	add.w	r8, ip, #8
   837a2:	1b64      	subs	r4, r4, r5
   837a4:	68a0      	ldr	r0, [r4, #8]
   837a6:	442b      	add	r3, r5
   837a8:	4540      	cmp	r0, r8
   837aa:	d042      	beq.n	83832 <_free_r+0x136>
   837ac:	68e5      	ldr	r5, [r4, #12]
   837ae:	60c5      	str	r5, [r0, #12]
   837b0:	60a8      	str	r0, [r5, #8]
   837b2:	e7c0      	b.n	83736 <_free_r+0x3a>
   837b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   837b8:	08db      	lsrs	r3, r3, #3
   837ba:	109a      	asrs	r2, r3, #2
   837bc:	2001      	movs	r0, #1
   837be:	4090      	lsls	r0, r2
   837c0:	f8dc 1004 	ldr.w	r1, [ip, #4]
   837c4:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   837c8:	689a      	ldr	r2, [r3, #8]
   837ca:	4301      	orrs	r1, r0
   837cc:	60a2      	str	r2, [r4, #8]
   837ce:	60e3      	str	r3, [r4, #12]
   837d0:	f8cc 1004 	str.w	r1, [ip, #4]
   837d4:	4630      	mov	r0, r6
   837d6:	609c      	str	r4, [r3, #8]
   837d8:	60d4      	str	r4, [r2, #12]
   837da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   837de:	f000 bc21 	b.w	84024 <__malloc_unlock>
   837e2:	4d29      	ldr	r5, [pc, #164]	; (83888 <_free_r+0x18c>)
   837e4:	42a8      	cmp	r0, r5
   837e6:	d1ae      	bne.n	83746 <_free_r+0x4a>
   837e8:	f043 0201 	orr.w	r2, r3, #1
   837ec:	f8cc 4014 	str.w	r4, [ip, #20]
   837f0:	f8cc 4010 	str.w	r4, [ip, #16]
   837f4:	60e0      	str	r0, [r4, #12]
   837f6:	60a0      	str	r0, [r4, #8]
   837f8:	6062      	str	r2, [r4, #4]
   837fa:	50e3      	str	r3, [r4, r3]
   837fc:	e7c8      	b.n	83790 <_free_r+0x94>
   837fe:	441f      	add	r7, r3
   83800:	07cb      	lsls	r3, r1, #31
   83802:	d407      	bmi.n	83814 <_free_r+0x118>
   83804:	f855 1c08 	ldr.w	r1, [r5, #-8]
   83808:	1a64      	subs	r4, r4, r1
   8380a:	68e3      	ldr	r3, [r4, #12]
   8380c:	68a2      	ldr	r2, [r4, #8]
   8380e:	440f      	add	r7, r1
   83810:	60d3      	str	r3, [r2, #12]
   83812:	609a      	str	r2, [r3, #8]
   83814:	4b1d      	ldr	r3, [pc, #116]	; (8388c <_free_r+0x190>)
   83816:	f047 0201 	orr.w	r2, r7, #1
   8381a:	681b      	ldr	r3, [r3, #0]
   8381c:	6062      	str	r2, [r4, #4]
   8381e:	429f      	cmp	r7, r3
   83820:	f8cc 4008 	str.w	r4, [ip, #8]
   83824:	d3b4      	bcc.n	83790 <_free_r+0x94>
   83826:	4b1a      	ldr	r3, [pc, #104]	; (83890 <_free_r+0x194>)
   83828:	4630      	mov	r0, r6
   8382a:	6819      	ldr	r1, [r3, #0]
   8382c:	f7ff ff18 	bl	83660 <_malloc_trim_r>
   83830:	e7ae      	b.n	83790 <_free_r+0x94>
   83832:	2101      	movs	r1, #1
   83834:	e77f      	b.n	83736 <_free_r+0x3a>
   83836:	2a14      	cmp	r2, #20
   83838:	d80b      	bhi.n	83852 <_free_r+0x156>
   8383a:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   8383e:	0041      	lsls	r1, r0, #1
   83840:	e792      	b.n	83768 <_free_r+0x6c>
   83842:	1080      	asrs	r0, r0, #2
   83844:	2501      	movs	r5, #1
   83846:	4085      	lsls	r5, r0
   83848:	6848      	ldr	r0, [r1, #4]
   8384a:	4613      	mov	r3, r2
   8384c:	4328      	orrs	r0, r5
   8384e:	6048      	str	r0, [r1, #4]
   83850:	e79a      	b.n	83788 <_free_r+0x8c>
   83852:	2a54      	cmp	r2, #84	; 0x54
   83854:	d803      	bhi.n	8385e <_free_r+0x162>
   83856:	0b18      	lsrs	r0, r3, #12
   83858:	306e      	adds	r0, #110	; 0x6e
   8385a:	0041      	lsls	r1, r0, #1
   8385c:	e784      	b.n	83768 <_free_r+0x6c>
   8385e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83862:	d803      	bhi.n	8386c <_free_r+0x170>
   83864:	0bd8      	lsrs	r0, r3, #15
   83866:	3077      	adds	r0, #119	; 0x77
   83868:	0041      	lsls	r1, r0, #1
   8386a:	e77d      	b.n	83768 <_free_r+0x6c>
   8386c:	f240 5154 	movw	r1, #1364	; 0x554
   83870:	428a      	cmp	r2, r1
   83872:	d803      	bhi.n	8387c <_free_r+0x180>
   83874:	0c98      	lsrs	r0, r3, #18
   83876:	307c      	adds	r0, #124	; 0x7c
   83878:	0041      	lsls	r1, r0, #1
   8387a:	e775      	b.n	83768 <_free_r+0x6c>
   8387c:	21fc      	movs	r1, #252	; 0xfc
   8387e:	207e      	movs	r0, #126	; 0x7e
   83880:	e772      	b.n	83768 <_free_r+0x6c>
   83882:	bf00      	nop
   83884:	200705dc 	.word	0x200705dc
   83888:	200705e4 	.word	0x200705e4
   8388c:	200709e4 	.word	0x200709e4
   83890:	20070aac 	.word	0x20070aac

00083894 <_localeconv_r>:
   83894:	4800      	ldr	r0, [pc, #0]	; (83898 <_localeconv_r+0x4>)
   83896:	4770      	bx	lr
   83898:	200705a4 	.word	0x200705a4

0008389c <_malloc_r>:
   8389c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   838a0:	f101 050b 	add.w	r5, r1, #11
   838a4:	2d16      	cmp	r5, #22
   838a6:	b083      	sub	sp, #12
   838a8:	4606      	mov	r6, r0
   838aa:	d927      	bls.n	838fc <_malloc_r+0x60>
   838ac:	f035 0507 	bics.w	r5, r5, #7
   838b0:	d427      	bmi.n	83902 <_malloc_r+0x66>
   838b2:	42a9      	cmp	r1, r5
   838b4:	d825      	bhi.n	83902 <_malloc_r+0x66>
   838b6:	4630      	mov	r0, r6
   838b8:	f000 fbb2 	bl	84020 <__malloc_lock>
   838bc:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   838c0:	d226      	bcs.n	83910 <_malloc_r+0x74>
   838c2:	4fc1      	ldr	r7, [pc, #772]	; (83bc8 <_malloc_r+0x32c>)
   838c4:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   838c8:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   838cc:	68dc      	ldr	r4, [r3, #12]
   838ce:	429c      	cmp	r4, r3
   838d0:	f000 81d2 	beq.w	83c78 <_malloc_r+0x3dc>
   838d4:	6863      	ldr	r3, [r4, #4]
   838d6:	68e2      	ldr	r2, [r4, #12]
   838d8:	f023 0303 	bic.w	r3, r3, #3
   838dc:	4423      	add	r3, r4
   838de:	6858      	ldr	r0, [r3, #4]
   838e0:	68a1      	ldr	r1, [r4, #8]
   838e2:	f040 0501 	orr.w	r5, r0, #1
   838e6:	60ca      	str	r2, [r1, #12]
   838e8:	4630      	mov	r0, r6
   838ea:	6091      	str	r1, [r2, #8]
   838ec:	605d      	str	r5, [r3, #4]
   838ee:	f000 fb99 	bl	84024 <__malloc_unlock>
   838f2:	3408      	adds	r4, #8
   838f4:	4620      	mov	r0, r4
   838f6:	b003      	add	sp, #12
   838f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   838fc:	2510      	movs	r5, #16
   838fe:	42a9      	cmp	r1, r5
   83900:	d9d9      	bls.n	838b6 <_malloc_r+0x1a>
   83902:	2400      	movs	r4, #0
   83904:	230c      	movs	r3, #12
   83906:	4620      	mov	r0, r4
   83908:	6033      	str	r3, [r6, #0]
   8390a:	b003      	add	sp, #12
   8390c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83910:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   83914:	f000 8089 	beq.w	83a2a <_malloc_r+0x18e>
   83918:	f1bc 0f04 	cmp.w	ip, #4
   8391c:	f200 8160 	bhi.w	83be0 <_malloc_r+0x344>
   83920:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   83924:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   83928:	ea4f 014c 	mov.w	r1, ip, lsl #1
   8392c:	4fa6      	ldr	r7, [pc, #664]	; (83bc8 <_malloc_r+0x32c>)
   8392e:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   83932:	68cc      	ldr	r4, [r1, #12]
   83934:	42a1      	cmp	r1, r4
   83936:	d105      	bne.n	83944 <_malloc_r+0xa8>
   83938:	e00c      	b.n	83954 <_malloc_r+0xb8>
   8393a:	2b00      	cmp	r3, #0
   8393c:	da79      	bge.n	83a32 <_malloc_r+0x196>
   8393e:	68e4      	ldr	r4, [r4, #12]
   83940:	42a1      	cmp	r1, r4
   83942:	d007      	beq.n	83954 <_malloc_r+0xb8>
   83944:	6862      	ldr	r2, [r4, #4]
   83946:	f022 0203 	bic.w	r2, r2, #3
   8394a:	1b53      	subs	r3, r2, r5
   8394c:	2b0f      	cmp	r3, #15
   8394e:	ddf4      	ble.n	8393a <_malloc_r+0x9e>
   83950:	f10c 3cff 	add.w	ip, ip, #4294967295
   83954:	f10c 0c01 	add.w	ip, ip, #1
   83958:	4b9b      	ldr	r3, [pc, #620]	; (83bc8 <_malloc_r+0x32c>)
   8395a:	693c      	ldr	r4, [r7, #16]
   8395c:	f103 0e08 	add.w	lr, r3, #8
   83960:	4574      	cmp	r4, lr
   83962:	f000 817e 	beq.w	83c62 <_malloc_r+0x3c6>
   83966:	6861      	ldr	r1, [r4, #4]
   83968:	f021 0103 	bic.w	r1, r1, #3
   8396c:	1b4a      	subs	r2, r1, r5
   8396e:	2a0f      	cmp	r2, #15
   83970:	f300 8164 	bgt.w	83c3c <_malloc_r+0x3a0>
   83974:	2a00      	cmp	r2, #0
   83976:	f8c3 e014 	str.w	lr, [r3, #20]
   8397a:	f8c3 e010 	str.w	lr, [r3, #16]
   8397e:	da69      	bge.n	83a54 <_malloc_r+0x1b8>
   83980:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   83984:	f080 813a 	bcs.w	83bfc <_malloc_r+0x360>
   83988:	08c9      	lsrs	r1, r1, #3
   8398a:	108a      	asrs	r2, r1, #2
   8398c:	f04f 0801 	mov.w	r8, #1
   83990:	fa08 f802 	lsl.w	r8, r8, r2
   83994:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   83998:	685a      	ldr	r2, [r3, #4]
   8399a:	6888      	ldr	r0, [r1, #8]
   8399c:	ea48 0202 	orr.w	r2, r8, r2
   839a0:	60a0      	str	r0, [r4, #8]
   839a2:	60e1      	str	r1, [r4, #12]
   839a4:	605a      	str	r2, [r3, #4]
   839a6:	608c      	str	r4, [r1, #8]
   839a8:	60c4      	str	r4, [r0, #12]
   839aa:	ea4f 03ac 	mov.w	r3, ip, asr #2
   839ae:	2001      	movs	r0, #1
   839b0:	4098      	lsls	r0, r3
   839b2:	4290      	cmp	r0, r2
   839b4:	d85b      	bhi.n	83a6e <_malloc_r+0x1d2>
   839b6:	4202      	tst	r2, r0
   839b8:	d106      	bne.n	839c8 <_malloc_r+0x12c>
   839ba:	f02c 0c03 	bic.w	ip, ip, #3
   839be:	0040      	lsls	r0, r0, #1
   839c0:	4202      	tst	r2, r0
   839c2:	f10c 0c04 	add.w	ip, ip, #4
   839c6:	d0fa      	beq.n	839be <_malloc_r+0x122>
   839c8:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   839cc:	4644      	mov	r4, r8
   839ce:	46e1      	mov	r9, ip
   839d0:	68e3      	ldr	r3, [r4, #12]
   839d2:	429c      	cmp	r4, r3
   839d4:	d107      	bne.n	839e6 <_malloc_r+0x14a>
   839d6:	e146      	b.n	83c66 <_malloc_r+0x3ca>
   839d8:	2a00      	cmp	r2, #0
   839da:	f280 8157 	bge.w	83c8c <_malloc_r+0x3f0>
   839de:	68db      	ldr	r3, [r3, #12]
   839e0:	429c      	cmp	r4, r3
   839e2:	f000 8140 	beq.w	83c66 <_malloc_r+0x3ca>
   839e6:	6859      	ldr	r1, [r3, #4]
   839e8:	f021 0103 	bic.w	r1, r1, #3
   839ec:	1b4a      	subs	r2, r1, r5
   839ee:	2a0f      	cmp	r2, #15
   839f0:	ddf2      	ble.n	839d8 <_malloc_r+0x13c>
   839f2:	461c      	mov	r4, r3
   839f4:	f854 cf08 	ldr.w	ip, [r4, #8]!
   839f8:	68d9      	ldr	r1, [r3, #12]
   839fa:	f045 0901 	orr.w	r9, r5, #1
   839fe:	f042 0801 	orr.w	r8, r2, #1
   83a02:	441d      	add	r5, r3
   83a04:	f8c3 9004 	str.w	r9, [r3, #4]
   83a08:	4630      	mov	r0, r6
   83a0a:	f8cc 100c 	str.w	r1, [ip, #12]
   83a0e:	f8c1 c008 	str.w	ip, [r1, #8]
   83a12:	617d      	str	r5, [r7, #20]
   83a14:	613d      	str	r5, [r7, #16]
   83a16:	f8c5 e00c 	str.w	lr, [r5, #12]
   83a1a:	f8c5 e008 	str.w	lr, [r5, #8]
   83a1e:	f8c5 8004 	str.w	r8, [r5, #4]
   83a22:	50aa      	str	r2, [r5, r2]
   83a24:	f000 fafe 	bl	84024 <__malloc_unlock>
   83a28:	e764      	b.n	838f4 <_malloc_r+0x58>
   83a2a:	217e      	movs	r1, #126	; 0x7e
   83a2c:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   83a30:	e77c      	b.n	8392c <_malloc_r+0x90>
   83a32:	4422      	add	r2, r4
   83a34:	6850      	ldr	r0, [r2, #4]
   83a36:	68e3      	ldr	r3, [r4, #12]
   83a38:	68a1      	ldr	r1, [r4, #8]
   83a3a:	f040 0501 	orr.w	r5, r0, #1
   83a3e:	60cb      	str	r3, [r1, #12]
   83a40:	4630      	mov	r0, r6
   83a42:	6099      	str	r1, [r3, #8]
   83a44:	6055      	str	r5, [r2, #4]
   83a46:	f000 faed 	bl	84024 <__malloc_unlock>
   83a4a:	3408      	adds	r4, #8
   83a4c:	4620      	mov	r0, r4
   83a4e:	b003      	add	sp, #12
   83a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a54:	4421      	add	r1, r4
   83a56:	684b      	ldr	r3, [r1, #4]
   83a58:	4630      	mov	r0, r6
   83a5a:	f043 0301 	orr.w	r3, r3, #1
   83a5e:	604b      	str	r3, [r1, #4]
   83a60:	f000 fae0 	bl	84024 <__malloc_unlock>
   83a64:	3408      	adds	r4, #8
   83a66:	4620      	mov	r0, r4
   83a68:	b003      	add	sp, #12
   83a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a6e:	68bc      	ldr	r4, [r7, #8]
   83a70:	6863      	ldr	r3, [r4, #4]
   83a72:	f023 0903 	bic.w	r9, r3, #3
   83a76:	45a9      	cmp	r9, r5
   83a78:	d304      	bcc.n	83a84 <_malloc_r+0x1e8>
   83a7a:	ebc5 0309 	rsb	r3, r5, r9
   83a7e:	2b0f      	cmp	r3, #15
   83a80:	f300 8091 	bgt.w	83ba6 <_malloc_r+0x30a>
   83a84:	4b51      	ldr	r3, [pc, #324]	; (83bcc <_malloc_r+0x330>)
   83a86:	4a52      	ldr	r2, [pc, #328]	; (83bd0 <_malloc_r+0x334>)
   83a88:	6819      	ldr	r1, [r3, #0]
   83a8a:	6813      	ldr	r3, [r2, #0]
   83a8c:	eb05 0a01 	add.w	sl, r5, r1
   83a90:	3301      	adds	r3, #1
   83a92:	eb04 0b09 	add.w	fp, r4, r9
   83a96:	f000 8161 	beq.w	83d5c <_malloc_r+0x4c0>
   83a9a:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   83a9e:	f10a 0a0f 	add.w	sl, sl, #15
   83aa2:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   83aa6:	f02a 0a0f 	bic.w	sl, sl, #15
   83aaa:	4630      	mov	r0, r6
   83aac:	4651      	mov	r1, sl
   83aae:	9201      	str	r2, [sp, #4]
   83ab0:	f000 ffcc 	bl	84a4c <_sbrk_r>
   83ab4:	f1b0 3fff 	cmp.w	r0, #4294967295
   83ab8:	4680      	mov	r8, r0
   83aba:	9a01      	ldr	r2, [sp, #4]
   83abc:	f000 8101 	beq.w	83cc2 <_malloc_r+0x426>
   83ac0:	4583      	cmp	fp, r0
   83ac2:	f200 80fb 	bhi.w	83cbc <_malloc_r+0x420>
   83ac6:	f8df c114 	ldr.w	ip, [pc, #276]	; 83bdc <_malloc_r+0x340>
   83aca:	45c3      	cmp	fp, r8
   83acc:	f8dc 3000 	ldr.w	r3, [ip]
   83ad0:	4453      	add	r3, sl
   83ad2:	f8cc 3000 	str.w	r3, [ip]
   83ad6:	f000 814a 	beq.w	83d6e <_malloc_r+0x4d2>
   83ada:	6812      	ldr	r2, [r2, #0]
   83adc:	493c      	ldr	r1, [pc, #240]	; (83bd0 <_malloc_r+0x334>)
   83ade:	3201      	adds	r2, #1
   83ae0:	bf1b      	ittet	ne
   83ae2:	ebcb 0b08 	rsbne	fp, fp, r8
   83ae6:	445b      	addne	r3, fp
   83ae8:	f8c1 8000 	streq.w	r8, [r1]
   83aec:	f8cc 3000 	strne.w	r3, [ip]
   83af0:	f018 0307 	ands.w	r3, r8, #7
   83af4:	f000 8114 	beq.w	83d20 <_malloc_r+0x484>
   83af8:	f1c3 0208 	rsb	r2, r3, #8
   83afc:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   83b00:	4490      	add	r8, r2
   83b02:	3308      	adds	r3, #8
   83b04:	44c2      	add	sl, r8
   83b06:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   83b0a:	ebca 0a03 	rsb	sl, sl, r3
   83b0e:	4651      	mov	r1, sl
   83b10:	4630      	mov	r0, r6
   83b12:	f8cd c004 	str.w	ip, [sp, #4]
   83b16:	f000 ff99 	bl	84a4c <_sbrk_r>
   83b1a:	1c43      	adds	r3, r0, #1
   83b1c:	f8dd c004 	ldr.w	ip, [sp, #4]
   83b20:	f000 8135 	beq.w	83d8e <_malloc_r+0x4f2>
   83b24:	ebc8 0200 	rsb	r2, r8, r0
   83b28:	4452      	add	r2, sl
   83b2a:	f042 0201 	orr.w	r2, r2, #1
   83b2e:	f8dc 3000 	ldr.w	r3, [ip]
   83b32:	42bc      	cmp	r4, r7
   83b34:	4453      	add	r3, sl
   83b36:	f8c7 8008 	str.w	r8, [r7, #8]
   83b3a:	f8cc 3000 	str.w	r3, [ip]
   83b3e:	f8c8 2004 	str.w	r2, [r8, #4]
   83b42:	f8df a098 	ldr.w	sl, [pc, #152]	; 83bdc <_malloc_r+0x340>
   83b46:	d015      	beq.n	83b74 <_malloc_r+0x2d8>
   83b48:	f1b9 0f0f 	cmp.w	r9, #15
   83b4c:	f240 80eb 	bls.w	83d26 <_malloc_r+0x48a>
   83b50:	6861      	ldr	r1, [r4, #4]
   83b52:	f1a9 020c 	sub.w	r2, r9, #12
   83b56:	f022 0207 	bic.w	r2, r2, #7
   83b5a:	f001 0101 	and.w	r1, r1, #1
   83b5e:	ea42 0e01 	orr.w	lr, r2, r1
   83b62:	2005      	movs	r0, #5
   83b64:	18a1      	adds	r1, r4, r2
   83b66:	2a0f      	cmp	r2, #15
   83b68:	f8c4 e004 	str.w	lr, [r4, #4]
   83b6c:	6048      	str	r0, [r1, #4]
   83b6e:	6088      	str	r0, [r1, #8]
   83b70:	f200 8111 	bhi.w	83d96 <_malloc_r+0x4fa>
   83b74:	4a17      	ldr	r2, [pc, #92]	; (83bd4 <_malloc_r+0x338>)
   83b76:	68bc      	ldr	r4, [r7, #8]
   83b78:	6811      	ldr	r1, [r2, #0]
   83b7a:	428b      	cmp	r3, r1
   83b7c:	bf88      	it	hi
   83b7e:	6013      	strhi	r3, [r2, #0]
   83b80:	4a15      	ldr	r2, [pc, #84]	; (83bd8 <_malloc_r+0x33c>)
   83b82:	6811      	ldr	r1, [r2, #0]
   83b84:	428b      	cmp	r3, r1
   83b86:	bf88      	it	hi
   83b88:	6013      	strhi	r3, [r2, #0]
   83b8a:	6862      	ldr	r2, [r4, #4]
   83b8c:	f022 0203 	bic.w	r2, r2, #3
   83b90:	4295      	cmp	r5, r2
   83b92:	ebc5 0302 	rsb	r3, r5, r2
   83b96:	d801      	bhi.n	83b9c <_malloc_r+0x300>
   83b98:	2b0f      	cmp	r3, #15
   83b9a:	dc04      	bgt.n	83ba6 <_malloc_r+0x30a>
   83b9c:	4630      	mov	r0, r6
   83b9e:	f000 fa41 	bl	84024 <__malloc_unlock>
   83ba2:	2400      	movs	r4, #0
   83ba4:	e6a6      	b.n	838f4 <_malloc_r+0x58>
   83ba6:	f045 0201 	orr.w	r2, r5, #1
   83baa:	f043 0301 	orr.w	r3, r3, #1
   83bae:	4425      	add	r5, r4
   83bb0:	6062      	str	r2, [r4, #4]
   83bb2:	4630      	mov	r0, r6
   83bb4:	60bd      	str	r5, [r7, #8]
   83bb6:	606b      	str	r3, [r5, #4]
   83bb8:	f000 fa34 	bl	84024 <__malloc_unlock>
   83bbc:	3408      	adds	r4, #8
   83bbe:	4620      	mov	r0, r4
   83bc0:	b003      	add	sp, #12
   83bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83bc6:	bf00      	nop
   83bc8:	200705dc 	.word	0x200705dc
   83bcc:	20070aac 	.word	0x20070aac
   83bd0:	200709e8 	.word	0x200709e8
   83bd4:	20070aa8 	.word	0x20070aa8
   83bd8:	20070aa4 	.word	0x20070aa4
   83bdc:	20070ab0 	.word	0x20070ab0
   83be0:	f1bc 0f14 	cmp.w	ip, #20
   83be4:	d961      	bls.n	83caa <_malloc_r+0x40e>
   83be6:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   83bea:	f200 808f 	bhi.w	83d0c <_malloc_r+0x470>
   83bee:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   83bf2:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   83bf6:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83bfa:	e697      	b.n	8392c <_malloc_r+0x90>
   83bfc:	0a4b      	lsrs	r3, r1, #9
   83bfe:	2b04      	cmp	r3, #4
   83c00:	d958      	bls.n	83cb4 <_malloc_r+0x418>
   83c02:	2b14      	cmp	r3, #20
   83c04:	f200 80ad 	bhi.w	83d62 <_malloc_r+0x4c6>
   83c08:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   83c0c:	0050      	lsls	r0, r2, #1
   83c0e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   83c12:	6883      	ldr	r3, [r0, #8]
   83c14:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 83dd0 <_malloc_r+0x534>
   83c18:	4283      	cmp	r3, r0
   83c1a:	f000 808a 	beq.w	83d32 <_malloc_r+0x496>
   83c1e:	685a      	ldr	r2, [r3, #4]
   83c20:	f022 0203 	bic.w	r2, r2, #3
   83c24:	4291      	cmp	r1, r2
   83c26:	d202      	bcs.n	83c2e <_malloc_r+0x392>
   83c28:	689b      	ldr	r3, [r3, #8]
   83c2a:	4298      	cmp	r0, r3
   83c2c:	d1f7      	bne.n	83c1e <_malloc_r+0x382>
   83c2e:	68d9      	ldr	r1, [r3, #12]
   83c30:	687a      	ldr	r2, [r7, #4]
   83c32:	60e1      	str	r1, [r4, #12]
   83c34:	60a3      	str	r3, [r4, #8]
   83c36:	608c      	str	r4, [r1, #8]
   83c38:	60dc      	str	r4, [r3, #12]
   83c3a:	e6b6      	b.n	839aa <_malloc_r+0x10e>
   83c3c:	f045 0701 	orr.w	r7, r5, #1
   83c40:	f042 0101 	orr.w	r1, r2, #1
   83c44:	4425      	add	r5, r4
   83c46:	6067      	str	r7, [r4, #4]
   83c48:	4630      	mov	r0, r6
   83c4a:	615d      	str	r5, [r3, #20]
   83c4c:	611d      	str	r5, [r3, #16]
   83c4e:	f8c5 e00c 	str.w	lr, [r5, #12]
   83c52:	f8c5 e008 	str.w	lr, [r5, #8]
   83c56:	6069      	str	r1, [r5, #4]
   83c58:	50aa      	str	r2, [r5, r2]
   83c5a:	3408      	adds	r4, #8
   83c5c:	f000 f9e2 	bl	84024 <__malloc_unlock>
   83c60:	e648      	b.n	838f4 <_malloc_r+0x58>
   83c62:	685a      	ldr	r2, [r3, #4]
   83c64:	e6a1      	b.n	839aa <_malloc_r+0x10e>
   83c66:	f109 0901 	add.w	r9, r9, #1
   83c6a:	f019 0f03 	tst.w	r9, #3
   83c6e:	f104 0408 	add.w	r4, r4, #8
   83c72:	f47f aead 	bne.w	839d0 <_malloc_r+0x134>
   83c76:	e02d      	b.n	83cd4 <_malloc_r+0x438>
   83c78:	f104 0308 	add.w	r3, r4, #8
   83c7c:	6964      	ldr	r4, [r4, #20]
   83c7e:	42a3      	cmp	r3, r4
   83c80:	bf08      	it	eq
   83c82:	f10c 0c02 	addeq.w	ip, ip, #2
   83c86:	f43f ae67 	beq.w	83958 <_malloc_r+0xbc>
   83c8a:	e623      	b.n	838d4 <_malloc_r+0x38>
   83c8c:	4419      	add	r1, r3
   83c8e:	6848      	ldr	r0, [r1, #4]
   83c90:	461c      	mov	r4, r3
   83c92:	f854 2f08 	ldr.w	r2, [r4, #8]!
   83c96:	68db      	ldr	r3, [r3, #12]
   83c98:	f040 0501 	orr.w	r5, r0, #1
   83c9c:	604d      	str	r5, [r1, #4]
   83c9e:	4630      	mov	r0, r6
   83ca0:	60d3      	str	r3, [r2, #12]
   83ca2:	609a      	str	r2, [r3, #8]
   83ca4:	f000 f9be 	bl	84024 <__malloc_unlock>
   83ca8:	e624      	b.n	838f4 <_malloc_r+0x58>
   83caa:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   83cae:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83cb2:	e63b      	b.n	8392c <_malloc_r+0x90>
   83cb4:	098a      	lsrs	r2, r1, #6
   83cb6:	3238      	adds	r2, #56	; 0x38
   83cb8:	0050      	lsls	r0, r2, #1
   83cba:	e7a8      	b.n	83c0e <_malloc_r+0x372>
   83cbc:	42bc      	cmp	r4, r7
   83cbe:	f43f af02 	beq.w	83ac6 <_malloc_r+0x22a>
   83cc2:	68bc      	ldr	r4, [r7, #8]
   83cc4:	6862      	ldr	r2, [r4, #4]
   83cc6:	f022 0203 	bic.w	r2, r2, #3
   83cca:	e761      	b.n	83b90 <_malloc_r+0x2f4>
   83ccc:	f8d8 8000 	ldr.w	r8, [r8]
   83cd0:	4598      	cmp	r8, r3
   83cd2:	d17a      	bne.n	83dca <_malloc_r+0x52e>
   83cd4:	f01c 0f03 	tst.w	ip, #3
   83cd8:	f1a8 0308 	sub.w	r3, r8, #8
   83cdc:	f10c 3cff 	add.w	ip, ip, #4294967295
   83ce0:	d1f4      	bne.n	83ccc <_malloc_r+0x430>
   83ce2:	687b      	ldr	r3, [r7, #4]
   83ce4:	ea23 0300 	bic.w	r3, r3, r0
   83ce8:	607b      	str	r3, [r7, #4]
   83cea:	0040      	lsls	r0, r0, #1
   83cec:	4298      	cmp	r0, r3
   83cee:	f63f aebe 	bhi.w	83a6e <_malloc_r+0x1d2>
   83cf2:	2800      	cmp	r0, #0
   83cf4:	f43f aebb 	beq.w	83a6e <_malloc_r+0x1d2>
   83cf8:	4203      	tst	r3, r0
   83cfa:	46cc      	mov	ip, r9
   83cfc:	f47f ae64 	bne.w	839c8 <_malloc_r+0x12c>
   83d00:	0040      	lsls	r0, r0, #1
   83d02:	4203      	tst	r3, r0
   83d04:	f10c 0c04 	add.w	ip, ip, #4
   83d08:	d0fa      	beq.n	83d00 <_malloc_r+0x464>
   83d0a:	e65d      	b.n	839c8 <_malloc_r+0x12c>
   83d0c:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   83d10:	d819      	bhi.n	83d46 <_malloc_r+0x4aa>
   83d12:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   83d16:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   83d1a:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83d1e:	e605      	b.n	8392c <_malloc_r+0x90>
   83d20:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   83d24:	e6ee      	b.n	83b04 <_malloc_r+0x268>
   83d26:	2301      	movs	r3, #1
   83d28:	f8c8 3004 	str.w	r3, [r8, #4]
   83d2c:	4644      	mov	r4, r8
   83d2e:	2200      	movs	r2, #0
   83d30:	e72e      	b.n	83b90 <_malloc_r+0x2f4>
   83d32:	1092      	asrs	r2, r2, #2
   83d34:	2001      	movs	r0, #1
   83d36:	4090      	lsls	r0, r2
   83d38:	f8d8 2004 	ldr.w	r2, [r8, #4]
   83d3c:	4619      	mov	r1, r3
   83d3e:	4302      	orrs	r2, r0
   83d40:	f8c8 2004 	str.w	r2, [r8, #4]
   83d44:	e775      	b.n	83c32 <_malloc_r+0x396>
   83d46:	f240 5354 	movw	r3, #1364	; 0x554
   83d4a:	459c      	cmp	ip, r3
   83d4c:	d81b      	bhi.n	83d86 <_malloc_r+0x4ea>
   83d4e:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   83d52:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   83d56:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83d5a:	e5e7      	b.n	8392c <_malloc_r+0x90>
   83d5c:	f10a 0a10 	add.w	sl, sl, #16
   83d60:	e6a3      	b.n	83aaa <_malloc_r+0x20e>
   83d62:	2b54      	cmp	r3, #84	; 0x54
   83d64:	d81f      	bhi.n	83da6 <_malloc_r+0x50a>
   83d66:	0b0a      	lsrs	r2, r1, #12
   83d68:	326e      	adds	r2, #110	; 0x6e
   83d6a:	0050      	lsls	r0, r2, #1
   83d6c:	e74f      	b.n	83c0e <_malloc_r+0x372>
   83d6e:	f3cb 010b 	ubfx	r1, fp, #0, #12
   83d72:	2900      	cmp	r1, #0
   83d74:	f47f aeb1 	bne.w	83ada <_malloc_r+0x23e>
   83d78:	eb0a 0109 	add.w	r1, sl, r9
   83d7c:	68ba      	ldr	r2, [r7, #8]
   83d7e:	f041 0101 	orr.w	r1, r1, #1
   83d82:	6051      	str	r1, [r2, #4]
   83d84:	e6f6      	b.n	83b74 <_malloc_r+0x2d8>
   83d86:	21fc      	movs	r1, #252	; 0xfc
   83d88:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   83d8c:	e5ce      	b.n	8392c <_malloc_r+0x90>
   83d8e:	2201      	movs	r2, #1
   83d90:	f04f 0a00 	mov.w	sl, #0
   83d94:	e6cb      	b.n	83b2e <_malloc_r+0x292>
   83d96:	f104 0108 	add.w	r1, r4, #8
   83d9a:	4630      	mov	r0, r6
   83d9c:	f7ff fcae 	bl	836fc <_free_r>
   83da0:	f8da 3000 	ldr.w	r3, [sl]
   83da4:	e6e6      	b.n	83b74 <_malloc_r+0x2d8>
   83da6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   83daa:	d803      	bhi.n	83db4 <_malloc_r+0x518>
   83dac:	0bca      	lsrs	r2, r1, #15
   83dae:	3277      	adds	r2, #119	; 0x77
   83db0:	0050      	lsls	r0, r2, #1
   83db2:	e72c      	b.n	83c0e <_malloc_r+0x372>
   83db4:	f240 5254 	movw	r2, #1364	; 0x554
   83db8:	4293      	cmp	r3, r2
   83dba:	d803      	bhi.n	83dc4 <_malloc_r+0x528>
   83dbc:	0c8a      	lsrs	r2, r1, #18
   83dbe:	327c      	adds	r2, #124	; 0x7c
   83dc0:	0050      	lsls	r0, r2, #1
   83dc2:	e724      	b.n	83c0e <_malloc_r+0x372>
   83dc4:	20fc      	movs	r0, #252	; 0xfc
   83dc6:	227e      	movs	r2, #126	; 0x7e
   83dc8:	e721      	b.n	83c0e <_malloc_r+0x372>
   83dca:	687b      	ldr	r3, [r7, #4]
   83dcc:	e78d      	b.n	83cea <_malloc_r+0x44e>
   83dce:	bf00      	nop
   83dd0:	200705dc 	.word	0x200705dc

00083dd4 <memchr>:
   83dd4:	0783      	lsls	r3, r0, #30
   83dd6:	b470      	push	{r4, r5, r6}
   83dd8:	b2c9      	uxtb	r1, r1
   83dda:	d040      	beq.n	83e5e <memchr+0x8a>
   83ddc:	1e54      	subs	r4, r2, #1
   83dde:	b32a      	cbz	r2, 83e2c <memchr+0x58>
   83de0:	7803      	ldrb	r3, [r0, #0]
   83de2:	428b      	cmp	r3, r1
   83de4:	d023      	beq.n	83e2e <memchr+0x5a>
   83de6:	1c43      	adds	r3, r0, #1
   83de8:	e004      	b.n	83df4 <memchr+0x20>
   83dea:	b1fc      	cbz	r4, 83e2c <memchr+0x58>
   83dec:	7805      	ldrb	r5, [r0, #0]
   83dee:	4614      	mov	r4, r2
   83df0:	428d      	cmp	r5, r1
   83df2:	d01c      	beq.n	83e2e <memchr+0x5a>
   83df4:	f013 0f03 	tst.w	r3, #3
   83df8:	4618      	mov	r0, r3
   83dfa:	f104 32ff 	add.w	r2, r4, #4294967295
   83dfe:	f103 0301 	add.w	r3, r3, #1
   83e02:	d1f2      	bne.n	83dea <memchr+0x16>
   83e04:	2c03      	cmp	r4, #3
   83e06:	d814      	bhi.n	83e32 <memchr+0x5e>
   83e08:	1e65      	subs	r5, r4, #1
   83e0a:	b354      	cbz	r4, 83e62 <memchr+0x8e>
   83e0c:	7803      	ldrb	r3, [r0, #0]
   83e0e:	428b      	cmp	r3, r1
   83e10:	d00d      	beq.n	83e2e <memchr+0x5a>
   83e12:	1c42      	adds	r2, r0, #1
   83e14:	2300      	movs	r3, #0
   83e16:	e002      	b.n	83e1e <memchr+0x4a>
   83e18:	7804      	ldrb	r4, [r0, #0]
   83e1a:	428c      	cmp	r4, r1
   83e1c:	d007      	beq.n	83e2e <memchr+0x5a>
   83e1e:	42ab      	cmp	r3, r5
   83e20:	4610      	mov	r0, r2
   83e22:	f103 0301 	add.w	r3, r3, #1
   83e26:	f102 0201 	add.w	r2, r2, #1
   83e2a:	d1f5      	bne.n	83e18 <memchr+0x44>
   83e2c:	2000      	movs	r0, #0
   83e2e:	bc70      	pop	{r4, r5, r6}
   83e30:	4770      	bx	lr
   83e32:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   83e36:	4603      	mov	r3, r0
   83e38:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   83e3c:	681a      	ldr	r2, [r3, #0]
   83e3e:	4618      	mov	r0, r3
   83e40:	4072      	eors	r2, r6
   83e42:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   83e46:	ea25 0202 	bic.w	r2, r5, r2
   83e4a:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   83e4e:	f103 0304 	add.w	r3, r3, #4
   83e52:	d1d9      	bne.n	83e08 <memchr+0x34>
   83e54:	3c04      	subs	r4, #4
   83e56:	2c03      	cmp	r4, #3
   83e58:	4618      	mov	r0, r3
   83e5a:	d8ef      	bhi.n	83e3c <memchr+0x68>
   83e5c:	e7d4      	b.n	83e08 <memchr+0x34>
   83e5e:	4614      	mov	r4, r2
   83e60:	e7d0      	b.n	83e04 <memchr+0x30>
   83e62:	4620      	mov	r0, r4
   83e64:	e7e3      	b.n	83e2e <memchr+0x5a>
   83e66:	bf00      	nop

00083e68 <memcpy>:
   83e68:	4684      	mov	ip, r0
   83e6a:	ea41 0300 	orr.w	r3, r1, r0
   83e6e:	f013 0303 	ands.w	r3, r3, #3
   83e72:	d149      	bne.n	83f08 <memcpy+0xa0>
   83e74:	3a40      	subs	r2, #64	; 0x40
   83e76:	d323      	bcc.n	83ec0 <memcpy+0x58>
   83e78:	680b      	ldr	r3, [r1, #0]
   83e7a:	6003      	str	r3, [r0, #0]
   83e7c:	684b      	ldr	r3, [r1, #4]
   83e7e:	6043      	str	r3, [r0, #4]
   83e80:	688b      	ldr	r3, [r1, #8]
   83e82:	6083      	str	r3, [r0, #8]
   83e84:	68cb      	ldr	r3, [r1, #12]
   83e86:	60c3      	str	r3, [r0, #12]
   83e88:	690b      	ldr	r3, [r1, #16]
   83e8a:	6103      	str	r3, [r0, #16]
   83e8c:	694b      	ldr	r3, [r1, #20]
   83e8e:	6143      	str	r3, [r0, #20]
   83e90:	698b      	ldr	r3, [r1, #24]
   83e92:	6183      	str	r3, [r0, #24]
   83e94:	69cb      	ldr	r3, [r1, #28]
   83e96:	61c3      	str	r3, [r0, #28]
   83e98:	6a0b      	ldr	r3, [r1, #32]
   83e9a:	6203      	str	r3, [r0, #32]
   83e9c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83e9e:	6243      	str	r3, [r0, #36]	; 0x24
   83ea0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83ea2:	6283      	str	r3, [r0, #40]	; 0x28
   83ea4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83ea6:	62c3      	str	r3, [r0, #44]	; 0x2c
   83ea8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83eaa:	6303      	str	r3, [r0, #48]	; 0x30
   83eac:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83eae:	6343      	str	r3, [r0, #52]	; 0x34
   83eb0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83eb2:	6383      	str	r3, [r0, #56]	; 0x38
   83eb4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83eb6:	63c3      	str	r3, [r0, #60]	; 0x3c
   83eb8:	3040      	adds	r0, #64	; 0x40
   83eba:	3140      	adds	r1, #64	; 0x40
   83ebc:	3a40      	subs	r2, #64	; 0x40
   83ebe:	d2db      	bcs.n	83e78 <memcpy+0x10>
   83ec0:	3230      	adds	r2, #48	; 0x30
   83ec2:	d30b      	bcc.n	83edc <memcpy+0x74>
   83ec4:	680b      	ldr	r3, [r1, #0]
   83ec6:	6003      	str	r3, [r0, #0]
   83ec8:	684b      	ldr	r3, [r1, #4]
   83eca:	6043      	str	r3, [r0, #4]
   83ecc:	688b      	ldr	r3, [r1, #8]
   83ece:	6083      	str	r3, [r0, #8]
   83ed0:	68cb      	ldr	r3, [r1, #12]
   83ed2:	60c3      	str	r3, [r0, #12]
   83ed4:	3010      	adds	r0, #16
   83ed6:	3110      	adds	r1, #16
   83ed8:	3a10      	subs	r2, #16
   83eda:	d2f3      	bcs.n	83ec4 <memcpy+0x5c>
   83edc:	320c      	adds	r2, #12
   83ede:	d305      	bcc.n	83eec <memcpy+0x84>
   83ee0:	f851 3b04 	ldr.w	r3, [r1], #4
   83ee4:	f840 3b04 	str.w	r3, [r0], #4
   83ee8:	3a04      	subs	r2, #4
   83eea:	d2f9      	bcs.n	83ee0 <memcpy+0x78>
   83eec:	3204      	adds	r2, #4
   83eee:	d008      	beq.n	83f02 <memcpy+0x9a>
   83ef0:	07d2      	lsls	r2, r2, #31
   83ef2:	bf1c      	itt	ne
   83ef4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83ef8:	f800 3b01 	strbne.w	r3, [r0], #1
   83efc:	d301      	bcc.n	83f02 <memcpy+0x9a>
   83efe:	880b      	ldrh	r3, [r1, #0]
   83f00:	8003      	strh	r3, [r0, #0]
   83f02:	4660      	mov	r0, ip
   83f04:	4770      	bx	lr
   83f06:	bf00      	nop
   83f08:	2a08      	cmp	r2, #8
   83f0a:	d313      	bcc.n	83f34 <memcpy+0xcc>
   83f0c:	078b      	lsls	r3, r1, #30
   83f0e:	d0b1      	beq.n	83e74 <memcpy+0xc>
   83f10:	f010 0303 	ands.w	r3, r0, #3
   83f14:	d0ae      	beq.n	83e74 <memcpy+0xc>
   83f16:	f1c3 0304 	rsb	r3, r3, #4
   83f1a:	1ad2      	subs	r2, r2, r3
   83f1c:	07db      	lsls	r3, r3, #31
   83f1e:	bf1c      	itt	ne
   83f20:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83f24:	f800 3b01 	strbne.w	r3, [r0], #1
   83f28:	d3a4      	bcc.n	83e74 <memcpy+0xc>
   83f2a:	f831 3b02 	ldrh.w	r3, [r1], #2
   83f2e:	f820 3b02 	strh.w	r3, [r0], #2
   83f32:	e79f      	b.n	83e74 <memcpy+0xc>
   83f34:	3a04      	subs	r2, #4
   83f36:	d3d9      	bcc.n	83eec <memcpy+0x84>
   83f38:	3a01      	subs	r2, #1
   83f3a:	f811 3b01 	ldrb.w	r3, [r1], #1
   83f3e:	f800 3b01 	strb.w	r3, [r0], #1
   83f42:	d2f9      	bcs.n	83f38 <memcpy+0xd0>
   83f44:	780b      	ldrb	r3, [r1, #0]
   83f46:	7003      	strb	r3, [r0, #0]
   83f48:	784b      	ldrb	r3, [r1, #1]
   83f4a:	7043      	strb	r3, [r0, #1]
   83f4c:	788b      	ldrb	r3, [r1, #2]
   83f4e:	7083      	strb	r3, [r0, #2]
   83f50:	4660      	mov	r0, ip
   83f52:	4770      	bx	lr

00083f54 <memmove>:
   83f54:	4288      	cmp	r0, r1
   83f56:	b4f0      	push	{r4, r5, r6, r7}
   83f58:	d910      	bls.n	83f7c <memmove+0x28>
   83f5a:	188c      	adds	r4, r1, r2
   83f5c:	42a0      	cmp	r0, r4
   83f5e:	d20d      	bcs.n	83f7c <memmove+0x28>
   83f60:	1885      	adds	r5, r0, r2
   83f62:	1e53      	subs	r3, r2, #1
   83f64:	b142      	cbz	r2, 83f78 <memmove+0x24>
   83f66:	4621      	mov	r1, r4
   83f68:	462a      	mov	r2, r5
   83f6a:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   83f6e:	3b01      	subs	r3, #1
   83f70:	f802 4d01 	strb.w	r4, [r2, #-1]!
   83f74:	1c5c      	adds	r4, r3, #1
   83f76:	d1f8      	bne.n	83f6a <memmove+0x16>
   83f78:	bcf0      	pop	{r4, r5, r6, r7}
   83f7a:	4770      	bx	lr
   83f7c:	2a0f      	cmp	r2, #15
   83f7e:	d944      	bls.n	8400a <memmove+0xb6>
   83f80:	ea40 0301 	orr.w	r3, r0, r1
   83f84:	079b      	lsls	r3, r3, #30
   83f86:	d144      	bne.n	84012 <memmove+0xbe>
   83f88:	f1a2 0710 	sub.w	r7, r2, #16
   83f8c:	093f      	lsrs	r7, r7, #4
   83f8e:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   83f92:	3610      	adds	r6, #16
   83f94:	460c      	mov	r4, r1
   83f96:	4603      	mov	r3, r0
   83f98:	6825      	ldr	r5, [r4, #0]
   83f9a:	3310      	adds	r3, #16
   83f9c:	f843 5c10 	str.w	r5, [r3, #-16]
   83fa0:	6865      	ldr	r5, [r4, #4]
   83fa2:	3410      	adds	r4, #16
   83fa4:	f843 5c0c 	str.w	r5, [r3, #-12]
   83fa8:	f854 5c08 	ldr.w	r5, [r4, #-8]
   83fac:	f843 5c08 	str.w	r5, [r3, #-8]
   83fb0:	f854 5c04 	ldr.w	r5, [r4, #-4]
   83fb4:	f843 5c04 	str.w	r5, [r3, #-4]
   83fb8:	42b3      	cmp	r3, r6
   83fba:	d1ed      	bne.n	83f98 <memmove+0x44>
   83fbc:	1c7b      	adds	r3, r7, #1
   83fbe:	f002 0c0f 	and.w	ip, r2, #15
   83fc2:	011b      	lsls	r3, r3, #4
   83fc4:	f1bc 0f03 	cmp.w	ip, #3
   83fc8:	4419      	add	r1, r3
   83fca:	4403      	add	r3, r0
   83fcc:	d923      	bls.n	84016 <memmove+0xc2>
   83fce:	460e      	mov	r6, r1
   83fd0:	461d      	mov	r5, r3
   83fd2:	4664      	mov	r4, ip
   83fd4:	f856 7b04 	ldr.w	r7, [r6], #4
   83fd8:	3c04      	subs	r4, #4
   83fda:	2c03      	cmp	r4, #3
   83fdc:	f845 7b04 	str.w	r7, [r5], #4
   83fe0:	d8f8      	bhi.n	83fd4 <memmove+0x80>
   83fe2:	f1ac 0404 	sub.w	r4, ip, #4
   83fe6:	f024 0403 	bic.w	r4, r4, #3
   83fea:	3404      	adds	r4, #4
   83fec:	f002 0203 	and.w	r2, r2, #3
   83ff0:	4423      	add	r3, r4
   83ff2:	4421      	add	r1, r4
   83ff4:	2a00      	cmp	r2, #0
   83ff6:	d0bf      	beq.n	83f78 <memmove+0x24>
   83ff8:	441a      	add	r2, r3
   83ffa:	f811 4b01 	ldrb.w	r4, [r1], #1
   83ffe:	f803 4b01 	strb.w	r4, [r3], #1
   84002:	4293      	cmp	r3, r2
   84004:	d1f9      	bne.n	83ffa <memmove+0xa6>
   84006:	bcf0      	pop	{r4, r5, r6, r7}
   84008:	4770      	bx	lr
   8400a:	4603      	mov	r3, r0
   8400c:	2a00      	cmp	r2, #0
   8400e:	d1f3      	bne.n	83ff8 <memmove+0xa4>
   84010:	e7b2      	b.n	83f78 <memmove+0x24>
   84012:	4603      	mov	r3, r0
   84014:	e7f0      	b.n	83ff8 <memmove+0xa4>
   84016:	4662      	mov	r2, ip
   84018:	2a00      	cmp	r2, #0
   8401a:	d1ed      	bne.n	83ff8 <memmove+0xa4>
   8401c:	e7ac      	b.n	83f78 <memmove+0x24>
   8401e:	bf00      	nop

00084020 <__malloc_lock>:
   84020:	4770      	bx	lr
   84022:	bf00      	nop

00084024 <__malloc_unlock>:
   84024:	4770      	bx	lr
   84026:	bf00      	nop

00084028 <_Balloc>:
   84028:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   8402a:	b570      	push	{r4, r5, r6, lr}
   8402c:	4605      	mov	r5, r0
   8402e:	460c      	mov	r4, r1
   84030:	b14a      	cbz	r2, 84046 <_Balloc+0x1e>
   84032:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   84036:	b180      	cbz	r0, 8405a <_Balloc+0x32>
   84038:	6801      	ldr	r1, [r0, #0]
   8403a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   8403e:	2200      	movs	r2, #0
   84040:	6102      	str	r2, [r0, #16]
   84042:	60c2      	str	r2, [r0, #12]
   84044:	bd70      	pop	{r4, r5, r6, pc}
   84046:	2221      	movs	r2, #33	; 0x21
   84048:	2104      	movs	r1, #4
   8404a:	f000 fde5 	bl	84c18 <_calloc_r>
   8404e:	64e8      	str	r0, [r5, #76]	; 0x4c
   84050:	4602      	mov	r2, r0
   84052:	2800      	cmp	r0, #0
   84054:	d1ed      	bne.n	84032 <_Balloc+0xa>
   84056:	2000      	movs	r0, #0
   84058:	bd70      	pop	{r4, r5, r6, pc}
   8405a:	2101      	movs	r1, #1
   8405c:	fa01 f604 	lsl.w	r6, r1, r4
   84060:	1d72      	adds	r2, r6, #5
   84062:	4628      	mov	r0, r5
   84064:	0092      	lsls	r2, r2, #2
   84066:	f000 fdd7 	bl	84c18 <_calloc_r>
   8406a:	2800      	cmp	r0, #0
   8406c:	d0f3      	beq.n	84056 <_Balloc+0x2e>
   8406e:	6044      	str	r4, [r0, #4]
   84070:	6086      	str	r6, [r0, #8]
   84072:	e7e4      	b.n	8403e <_Balloc+0x16>

00084074 <_Bfree>:
   84074:	b131      	cbz	r1, 84084 <_Bfree+0x10>
   84076:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   84078:	684a      	ldr	r2, [r1, #4]
   8407a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   8407e:	6008      	str	r0, [r1, #0]
   84080:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   84084:	4770      	bx	lr
   84086:	bf00      	nop

00084088 <__multadd>:
   84088:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8408c:	690f      	ldr	r7, [r1, #16]
   8408e:	b083      	sub	sp, #12
   84090:	4688      	mov	r8, r1
   84092:	4681      	mov	r9, r0
   84094:	f101 0514 	add.w	r5, r1, #20
   84098:	2400      	movs	r4, #0
   8409a:	682e      	ldr	r6, [r5, #0]
   8409c:	3401      	adds	r4, #1
   8409e:	b2b1      	uxth	r1, r6
   840a0:	0c36      	lsrs	r6, r6, #16
   840a2:	fb02 3301 	mla	r3, r2, r1, r3
   840a6:	fb02 f606 	mul.w	r6, r2, r6
   840aa:	b299      	uxth	r1, r3
   840ac:	eb06 4313 	add.w	r3, r6, r3, lsr #16
   840b0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
   840b4:	42a7      	cmp	r7, r4
   840b6:	f845 1b04 	str.w	r1, [r5], #4
   840ba:	ea4f 4313 	mov.w	r3, r3, lsr #16
   840be:	dcec      	bgt.n	8409a <__multadd+0x12>
   840c0:	b14b      	cbz	r3, 840d6 <__multadd+0x4e>
   840c2:	f8d8 2008 	ldr.w	r2, [r8, #8]
   840c6:	4297      	cmp	r7, r2
   840c8:	da09      	bge.n	840de <__multadd+0x56>
   840ca:	eb08 0287 	add.w	r2, r8, r7, lsl #2
   840ce:	3701      	adds	r7, #1
   840d0:	6153      	str	r3, [r2, #20]
   840d2:	f8c8 7010 	str.w	r7, [r8, #16]
   840d6:	4640      	mov	r0, r8
   840d8:	b003      	add	sp, #12
   840da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   840de:	f8d8 1004 	ldr.w	r1, [r8, #4]
   840e2:	4648      	mov	r0, r9
   840e4:	3101      	adds	r1, #1
   840e6:	9301      	str	r3, [sp, #4]
   840e8:	f7ff ff9e 	bl	84028 <_Balloc>
   840ec:	f8d8 2010 	ldr.w	r2, [r8, #16]
   840f0:	f108 010c 	add.w	r1, r8, #12
   840f4:	3202      	adds	r2, #2
   840f6:	4604      	mov	r4, r0
   840f8:	0092      	lsls	r2, r2, #2
   840fa:	300c      	adds	r0, #12
   840fc:	f7ff feb4 	bl	83e68 <memcpy>
   84100:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
   84104:	f8d8 1004 	ldr.w	r1, [r8, #4]
   84108:	9b01      	ldr	r3, [sp, #4]
   8410a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   8410e:	f8c8 0000 	str.w	r0, [r8]
   84112:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
   84116:	46a0      	mov	r8, r4
   84118:	e7d7      	b.n	840ca <__multadd+0x42>
   8411a:	bf00      	nop

0008411c <__hi0bits>:
   8411c:	0c03      	lsrs	r3, r0, #16
   8411e:	041b      	lsls	r3, r3, #16
   84120:	b9b3      	cbnz	r3, 84150 <__hi0bits+0x34>
   84122:	0400      	lsls	r0, r0, #16
   84124:	2310      	movs	r3, #16
   84126:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   8412a:	bf04      	itt	eq
   8412c:	0200      	lsleq	r0, r0, #8
   8412e:	3308      	addeq	r3, #8
   84130:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   84134:	bf04      	itt	eq
   84136:	0100      	lsleq	r0, r0, #4
   84138:	3304      	addeq	r3, #4
   8413a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   8413e:	bf04      	itt	eq
   84140:	0080      	lsleq	r0, r0, #2
   84142:	3302      	addeq	r3, #2
   84144:	2800      	cmp	r0, #0
   84146:	db07      	blt.n	84158 <__hi0bits+0x3c>
   84148:	0042      	lsls	r2, r0, #1
   8414a:	d403      	bmi.n	84154 <__hi0bits+0x38>
   8414c:	2020      	movs	r0, #32
   8414e:	4770      	bx	lr
   84150:	2300      	movs	r3, #0
   84152:	e7e8      	b.n	84126 <__hi0bits+0xa>
   84154:	1c58      	adds	r0, r3, #1
   84156:	4770      	bx	lr
   84158:	4618      	mov	r0, r3
   8415a:	4770      	bx	lr

0008415c <__lo0bits>:
   8415c:	6803      	ldr	r3, [r0, #0]
   8415e:	f013 0207 	ands.w	r2, r3, #7
   84162:	d007      	beq.n	84174 <__lo0bits+0x18>
   84164:	07d9      	lsls	r1, r3, #31
   84166:	d420      	bmi.n	841aa <__lo0bits+0x4e>
   84168:	079a      	lsls	r2, r3, #30
   8416a:	d420      	bmi.n	841ae <__lo0bits+0x52>
   8416c:	089b      	lsrs	r3, r3, #2
   8416e:	6003      	str	r3, [r0, #0]
   84170:	2002      	movs	r0, #2
   84172:	4770      	bx	lr
   84174:	b299      	uxth	r1, r3
   84176:	b909      	cbnz	r1, 8417c <__lo0bits+0x20>
   84178:	0c1b      	lsrs	r3, r3, #16
   8417a:	2210      	movs	r2, #16
   8417c:	f013 0fff 	tst.w	r3, #255	; 0xff
   84180:	bf04      	itt	eq
   84182:	0a1b      	lsreq	r3, r3, #8
   84184:	3208      	addeq	r2, #8
   84186:	0719      	lsls	r1, r3, #28
   84188:	bf04      	itt	eq
   8418a:	091b      	lsreq	r3, r3, #4
   8418c:	3204      	addeq	r2, #4
   8418e:	0799      	lsls	r1, r3, #30
   84190:	bf04      	itt	eq
   84192:	089b      	lsreq	r3, r3, #2
   84194:	3202      	addeq	r2, #2
   84196:	07d9      	lsls	r1, r3, #31
   84198:	d404      	bmi.n	841a4 <__lo0bits+0x48>
   8419a:	085b      	lsrs	r3, r3, #1
   8419c:	d101      	bne.n	841a2 <__lo0bits+0x46>
   8419e:	2020      	movs	r0, #32
   841a0:	4770      	bx	lr
   841a2:	3201      	adds	r2, #1
   841a4:	6003      	str	r3, [r0, #0]
   841a6:	4610      	mov	r0, r2
   841a8:	4770      	bx	lr
   841aa:	2000      	movs	r0, #0
   841ac:	4770      	bx	lr
   841ae:	085b      	lsrs	r3, r3, #1
   841b0:	6003      	str	r3, [r0, #0]
   841b2:	2001      	movs	r0, #1
   841b4:	4770      	bx	lr
   841b6:	bf00      	nop

000841b8 <__i2b>:
   841b8:	b510      	push	{r4, lr}
   841ba:	460c      	mov	r4, r1
   841bc:	2101      	movs	r1, #1
   841be:	f7ff ff33 	bl	84028 <_Balloc>
   841c2:	2201      	movs	r2, #1
   841c4:	6144      	str	r4, [r0, #20]
   841c6:	6102      	str	r2, [r0, #16]
   841c8:	bd10      	pop	{r4, pc}
   841ca:	bf00      	nop

000841cc <__multiply>:
   841cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   841d0:	690d      	ldr	r5, [r1, #16]
   841d2:	f8d2 9010 	ldr.w	r9, [r2, #16]
   841d6:	b085      	sub	sp, #20
   841d8:	454d      	cmp	r5, r9
   841da:	460c      	mov	r4, r1
   841dc:	4692      	mov	sl, r2
   841de:	da04      	bge.n	841ea <__multiply+0x1e>
   841e0:	462a      	mov	r2, r5
   841e2:	4654      	mov	r4, sl
   841e4:	464d      	mov	r5, r9
   841e6:	468a      	mov	sl, r1
   841e8:	4691      	mov	r9, r2
   841ea:	68a3      	ldr	r3, [r4, #8]
   841ec:	eb05 0709 	add.w	r7, r5, r9
   841f0:	6861      	ldr	r1, [r4, #4]
   841f2:	429f      	cmp	r7, r3
   841f4:	bfc8      	it	gt
   841f6:	3101      	addgt	r1, #1
   841f8:	f7ff ff16 	bl	84028 <_Balloc>
   841fc:	f100 0614 	add.w	r6, r0, #20
   84200:	eb06 0887 	add.w	r8, r6, r7, lsl #2
   84204:	4546      	cmp	r6, r8
   84206:	9001      	str	r0, [sp, #4]
   84208:	d205      	bcs.n	84216 <__multiply+0x4a>
   8420a:	4633      	mov	r3, r6
   8420c:	2000      	movs	r0, #0
   8420e:	f843 0b04 	str.w	r0, [r3], #4
   84212:	4598      	cmp	r8, r3
   84214:	d8fb      	bhi.n	8420e <__multiply+0x42>
   84216:	f10a 0c14 	add.w	ip, sl, #20
   8421a:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
   8421e:	3414      	adds	r4, #20
   84220:	45cc      	cmp	ip, r9
   84222:	9400      	str	r4, [sp, #0]
   84224:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   84228:	d25b      	bcs.n	842e2 <__multiply+0x116>
   8422a:	f8cd 8008 	str.w	r8, [sp, #8]
   8422e:	9703      	str	r7, [sp, #12]
   84230:	46c8      	mov	r8, r9
   84232:	f85c 3b04 	ldr.w	r3, [ip], #4
   84236:	b29c      	uxth	r4, r3
   84238:	b324      	cbz	r4, 84284 <__multiply+0xb8>
   8423a:	9a00      	ldr	r2, [sp, #0]
   8423c:	4633      	mov	r3, r6
   8423e:	f04f 0900 	mov.w	r9, #0
   84242:	e000      	b.n	84246 <__multiply+0x7a>
   84244:	460b      	mov	r3, r1
   84246:	f852 7b04 	ldr.w	r7, [r2], #4
   8424a:	6819      	ldr	r1, [r3, #0]
   8424c:	fa1f fb87 	uxth.w	fp, r7
   84250:	fa1f fa81 	uxth.w	sl, r1
   84254:	0c38      	lsrs	r0, r7, #16
   84256:	0c09      	lsrs	r1, r1, #16
   84258:	fb04 aa0b 	mla	sl, r4, fp, sl
   8425c:	fb04 1000 	mla	r0, r4, r0, r1
   84260:	44d1      	add	r9, sl
   84262:	eb00 4019 	add.w	r0, r0, r9, lsr #16
   84266:	fa1f f989 	uxth.w	r9, r9
   8426a:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
   8426e:	4619      	mov	r1, r3
   84270:	4295      	cmp	r5, r2
   84272:	ea4f 4910 	mov.w	r9, r0, lsr #16
   84276:	f841 7b04 	str.w	r7, [r1], #4
   8427a:	d8e3      	bhi.n	84244 <__multiply+0x78>
   8427c:	f8c3 9004 	str.w	r9, [r3, #4]
   84280:	f85c 3c04 	ldr.w	r3, [ip, #-4]
   84284:	ea5f 4913 	movs.w	r9, r3, lsr #16
   84288:	d024      	beq.n	842d4 <__multiply+0x108>
   8428a:	f8d6 a000 	ldr.w	sl, [r6]
   8428e:	9b00      	ldr	r3, [sp, #0]
   84290:	4650      	mov	r0, sl
   84292:	4631      	mov	r1, r6
   84294:	f04f 0b00 	mov.w	fp, #0
   84298:	e000      	b.n	8429c <__multiply+0xd0>
   8429a:	4611      	mov	r1, r2
   8429c:	881a      	ldrh	r2, [r3, #0]
   8429e:	0c00      	lsrs	r0, r0, #16
   842a0:	fb09 0002 	mla	r0, r9, r2, r0
   842a4:	fa1f fa8a 	uxth.w	sl, sl
   842a8:	4483      	add	fp, r0
   842aa:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
   842ae:	460a      	mov	r2, r1
   842b0:	f842 0b04 	str.w	r0, [r2], #4
   842b4:	f853 7b04 	ldr.w	r7, [r3], #4
   842b8:	6848      	ldr	r0, [r1, #4]
   842ba:	ea4f 4a17 	mov.w	sl, r7, lsr #16
   842be:	b284      	uxth	r4, r0
   842c0:	fb09 4a0a 	mla	sl, r9, sl, r4
   842c4:	429d      	cmp	r5, r3
   842c6:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
   842ca:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
   842ce:	d8e4      	bhi.n	8429a <__multiply+0xce>
   842d0:	f8c1 a004 	str.w	sl, [r1, #4]
   842d4:	45e0      	cmp	r8, ip
   842d6:	f106 0604 	add.w	r6, r6, #4
   842da:	d8aa      	bhi.n	84232 <__multiply+0x66>
   842dc:	f8dd 8008 	ldr.w	r8, [sp, #8]
   842e0:	9f03      	ldr	r7, [sp, #12]
   842e2:	2f00      	cmp	r7, #0
   842e4:	dd0a      	ble.n	842fc <__multiply+0x130>
   842e6:	f858 3c04 	ldr.w	r3, [r8, #-4]
   842ea:	f1a8 0804 	sub.w	r8, r8, #4
   842ee:	b11b      	cbz	r3, 842f8 <__multiply+0x12c>
   842f0:	e004      	b.n	842fc <__multiply+0x130>
   842f2:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   842f6:	b90b      	cbnz	r3, 842fc <__multiply+0x130>
   842f8:	3f01      	subs	r7, #1
   842fa:	d1fa      	bne.n	842f2 <__multiply+0x126>
   842fc:	9b01      	ldr	r3, [sp, #4]
   842fe:	4618      	mov	r0, r3
   84300:	611f      	str	r7, [r3, #16]
   84302:	b005      	add	sp, #20
   84304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084308 <__pow5mult>:
   84308:	f012 0303 	ands.w	r3, r2, #3
   8430c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84310:	4614      	mov	r4, r2
   84312:	4607      	mov	r7, r0
   84314:	460e      	mov	r6, r1
   84316:	d12c      	bne.n	84372 <__pow5mult+0x6a>
   84318:	10a4      	asrs	r4, r4, #2
   8431a:	d01c      	beq.n	84356 <__pow5mult+0x4e>
   8431c:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   8431e:	2d00      	cmp	r5, #0
   84320:	d030      	beq.n	84384 <__pow5mult+0x7c>
   84322:	f04f 0800 	mov.w	r8, #0
   84326:	e004      	b.n	84332 <__pow5mult+0x2a>
   84328:	1064      	asrs	r4, r4, #1
   8432a:	d014      	beq.n	84356 <__pow5mult+0x4e>
   8432c:	6828      	ldr	r0, [r5, #0]
   8432e:	b1a8      	cbz	r0, 8435c <__pow5mult+0x54>
   84330:	4605      	mov	r5, r0
   84332:	07e3      	lsls	r3, r4, #31
   84334:	d5f8      	bpl.n	84328 <__pow5mult+0x20>
   84336:	4638      	mov	r0, r7
   84338:	4631      	mov	r1, r6
   8433a:	462a      	mov	r2, r5
   8433c:	f7ff ff46 	bl	841cc <__multiply>
   84340:	b1ae      	cbz	r6, 8436e <__pow5mult+0x66>
   84342:	6872      	ldr	r2, [r6, #4]
   84344:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84346:	1064      	asrs	r4, r4, #1
   84348:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8434c:	6031      	str	r1, [r6, #0]
   8434e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84352:	4606      	mov	r6, r0
   84354:	d1ea      	bne.n	8432c <__pow5mult+0x24>
   84356:	4630      	mov	r0, r6
   84358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8435c:	4638      	mov	r0, r7
   8435e:	4629      	mov	r1, r5
   84360:	462a      	mov	r2, r5
   84362:	f7ff ff33 	bl	841cc <__multiply>
   84366:	6028      	str	r0, [r5, #0]
   84368:	f8c0 8000 	str.w	r8, [r0]
   8436c:	e7e0      	b.n	84330 <__pow5mult+0x28>
   8436e:	4606      	mov	r6, r0
   84370:	e7da      	b.n	84328 <__pow5mult+0x20>
   84372:	4a0b      	ldr	r2, [pc, #44]	; (843a0 <__pow5mult+0x98>)
   84374:	3b01      	subs	r3, #1
   84376:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   8437a:	2300      	movs	r3, #0
   8437c:	f7ff fe84 	bl	84088 <__multadd>
   84380:	4606      	mov	r6, r0
   84382:	e7c9      	b.n	84318 <__pow5mult+0x10>
   84384:	2101      	movs	r1, #1
   84386:	4638      	mov	r0, r7
   84388:	f7ff fe4e 	bl	84028 <_Balloc>
   8438c:	f240 2171 	movw	r1, #625	; 0x271
   84390:	2201      	movs	r2, #1
   84392:	2300      	movs	r3, #0
   84394:	6141      	str	r1, [r0, #20]
   84396:	6102      	str	r2, [r0, #16]
   84398:	4605      	mov	r5, r0
   8439a:	64b8      	str	r0, [r7, #72]	; 0x48
   8439c:	6003      	str	r3, [r0, #0]
   8439e:	e7c0      	b.n	84322 <__pow5mult+0x1a>
   843a0:	00085cd8 	.word	0x00085cd8

000843a4 <__lshift>:
   843a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   843a8:	690b      	ldr	r3, [r1, #16]
   843aa:	ea4f 1a62 	mov.w	sl, r2, asr #5
   843ae:	eb0a 0903 	add.w	r9, sl, r3
   843b2:	688b      	ldr	r3, [r1, #8]
   843b4:	f109 0601 	add.w	r6, r9, #1
   843b8:	429e      	cmp	r6, r3
   843ba:	460f      	mov	r7, r1
   843bc:	4693      	mov	fp, r2
   843be:	4680      	mov	r8, r0
   843c0:	6849      	ldr	r1, [r1, #4]
   843c2:	dd04      	ble.n	843ce <__lshift+0x2a>
   843c4:	005b      	lsls	r3, r3, #1
   843c6:	429e      	cmp	r6, r3
   843c8:	f101 0101 	add.w	r1, r1, #1
   843cc:	dcfa      	bgt.n	843c4 <__lshift+0x20>
   843ce:	4640      	mov	r0, r8
   843d0:	f7ff fe2a 	bl	84028 <_Balloc>
   843d4:	f1ba 0f00 	cmp.w	sl, #0
   843d8:	f100 0414 	add.w	r4, r0, #20
   843dc:	dd09      	ble.n	843f2 <__lshift+0x4e>
   843de:	2300      	movs	r3, #0
   843e0:	461a      	mov	r2, r3
   843e2:	4625      	mov	r5, r4
   843e4:	3301      	adds	r3, #1
   843e6:	4553      	cmp	r3, sl
   843e8:	f845 2b04 	str.w	r2, [r5], #4
   843ec:	d1fa      	bne.n	843e4 <__lshift+0x40>
   843ee:	eb04 0483 	add.w	r4, r4, r3, lsl #2
   843f2:	693a      	ldr	r2, [r7, #16]
   843f4:	f107 0314 	add.w	r3, r7, #20
   843f8:	f01b 0b1f 	ands.w	fp, fp, #31
   843fc:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   84400:	d021      	beq.n	84446 <__lshift+0xa2>
   84402:	f1cb 0a20 	rsb	sl, fp, #32
   84406:	2200      	movs	r2, #0
   84408:	e000      	b.n	8440c <__lshift+0x68>
   8440a:	462c      	mov	r4, r5
   8440c:	6819      	ldr	r1, [r3, #0]
   8440e:	4625      	mov	r5, r4
   84410:	fa01 f10b 	lsl.w	r1, r1, fp
   84414:	430a      	orrs	r2, r1
   84416:	f845 2b04 	str.w	r2, [r5], #4
   8441a:	f853 2b04 	ldr.w	r2, [r3], #4
   8441e:	4563      	cmp	r3, ip
   84420:	fa22 f20a 	lsr.w	r2, r2, sl
   84424:	d3f1      	bcc.n	8440a <__lshift+0x66>
   84426:	6062      	str	r2, [r4, #4]
   84428:	b10a      	cbz	r2, 8442e <__lshift+0x8a>
   8442a:	f109 0602 	add.w	r6, r9, #2
   8442e:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   84432:	687a      	ldr	r2, [r7, #4]
   84434:	3e01      	subs	r6, #1
   84436:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8443a:	6106      	str	r6, [r0, #16]
   8443c:	6039      	str	r1, [r7, #0]
   8443e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   84442:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84446:	f853 2b04 	ldr.w	r2, [r3], #4
   8444a:	459c      	cmp	ip, r3
   8444c:	f844 2b04 	str.w	r2, [r4], #4
   84450:	d9ed      	bls.n	8442e <__lshift+0x8a>
   84452:	f853 2b04 	ldr.w	r2, [r3], #4
   84456:	459c      	cmp	ip, r3
   84458:	f844 2b04 	str.w	r2, [r4], #4
   8445c:	d8f3      	bhi.n	84446 <__lshift+0xa2>
   8445e:	e7e6      	b.n	8442e <__lshift+0x8a>

00084460 <__mcmp>:
   84460:	6902      	ldr	r2, [r0, #16]
   84462:	690b      	ldr	r3, [r1, #16]
   84464:	b410      	push	{r4}
   84466:	1ad2      	subs	r2, r2, r3
   84468:	d115      	bne.n	84496 <__mcmp+0x36>
   8446a:	009b      	lsls	r3, r3, #2
   8446c:	3014      	adds	r0, #20
   8446e:	3114      	adds	r1, #20
   84470:	4419      	add	r1, r3
   84472:	4403      	add	r3, r0
   84474:	e001      	b.n	8447a <__mcmp+0x1a>
   84476:	4298      	cmp	r0, r3
   84478:	d211      	bcs.n	8449e <__mcmp+0x3e>
   8447a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   8447e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
   84482:	42a2      	cmp	r2, r4
   84484:	d0f7      	beq.n	84476 <__mcmp+0x16>
   84486:	4294      	cmp	r4, r2
   84488:	bf94      	ite	ls
   8448a:	2001      	movls	r0, #1
   8448c:	f04f 30ff 	movhi.w	r0, #4294967295
   84490:	f85d 4b04 	ldr.w	r4, [sp], #4
   84494:	4770      	bx	lr
   84496:	4610      	mov	r0, r2
   84498:	f85d 4b04 	ldr.w	r4, [sp], #4
   8449c:	4770      	bx	lr
   8449e:	2000      	movs	r0, #0
   844a0:	f85d 4b04 	ldr.w	r4, [sp], #4
   844a4:	4770      	bx	lr
   844a6:	bf00      	nop

000844a8 <__mdiff>:
   844a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   844ac:	460d      	mov	r5, r1
   844ae:	4604      	mov	r4, r0
   844b0:	4611      	mov	r1, r2
   844b2:	4628      	mov	r0, r5
   844b4:	4616      	mov	r6, r2
   844b6:	f7ff ffd3 	bl	84460 <__mcmp>
   844ba:	1e07      	subs	r7, r0, #0
   844bc:	d056      	beq.n	8456c <__mdiff+0xc4>
   844be:	db4f      	blt.n	84560 <__mdiff+0xb8>
   844c0:	f04f 0900 	mov.w	r9, #0
   844c4:	6869      	ldr	r1, [r5, #4]
   844c6:	4620      	mov	r0, r4
   844c8:	f7ff fdae 	bl	84028 <_Balloc>
   844cc:	692f      	ldr	r7, [r5, #16]
   844ce:	6932      	ldr	r2, [r6, #16]
   844d0:	3514      	adds	r5, #20
   844d2:	3614      	adds	r6, #20
   844d4:	f8c0 900c 	str.w	r9, [r0, #12]
   844d8:	f100 0314 	add.w	r3, r0, #20
   844dc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
   844e0:	eb06 0882 	add.w	r8, r6, r2, lsl #2
   844e4:	2100      	movs	r1, #0
   844e6:	f855 4b04 	ldr.w	r4, [r5], #4
   844ea:	f856 2b04 	ldr.w	r2, [r6], #4
   844ee:	fa1f fa84 	uxth.w	sl, r4
   844f2:	448a      	add	sl, r1
   844f4:	fa1f f982 	uxth.w	r9, r2
   844f8:	0c11      	lsrs	r1, r2, #16
   844fa:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
   844fe:	ebc9 020a 	rsb	r2, r9, sl
   84502:	eb01 4122 	add.w	r1, r1, r2, asr #16
   84506:	b292      	uxth	r2, r2
   84508:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   8450c:	45b0      	cmp	r8, r6
   8450e:	f843 2b04 	str.w	r2, [r3], #4
   84512:	ea4f 4121 	mov.w	r1, r1, asr #16
   84516:	462c      	mov	r4, r5
   84518:	d8e5      	bhi.n	844e6 <__mdiff+0x3e>
   8451a:	45ac      	cmp	ip, r5
   8451c:	4698      	mov	r8, r3
   8451e:	d915      	bls.n	8454c <__mdiff+0xa4>
   84520:	f854 6b04 	ldr.w	r6, [r4], #4
   84524:	b2b2      	uxth	r2, r6
   84526:	4411      	add	r1, r2
   84528:	0c36      	lsrs	r6, r6, #16
   8452a:	eb06 4621 	add.w	r6, r6, r1, asr #16
   8452e:	b289      	uxth	r1, r1
   84530:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
   84534:	45a4      	cmp	ip, r4
   84536:	f843 2b04 	str.w	r2, [r3], #4
   8453a:	ea4f 4126 	mov.w	r1, r6, asr #16
   8453e:	d8ef      	bhi.n	84520 <__mdiff+0x78>
   84540:	43eb      	mvns	r3, r5
   84542:	4463      	add	r3, ip
   84544:	f023 0303 	bic.w	r3, r3, #3
   84548:	3304      	adds	r3, #4
   8454a:	4443      	add	r3, r8
   8454c:	3b04      	subs	r3, #4
   8454e:	b922      	cbnz	r2, 8455a <__mdiff+0xb2>
   84550:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   84554:	3f01      	subs	r7, #1
   84556:	2a00      	cmp	r2, #0
   84558:	d0fa      	beq.n	84550 <__mdiff+0xa8>
   8455a:	6107      	str	r7, [r0, #16]
   8455c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84560:	462b      	mov	r3, r5
   84562:	f04f 0901 	mov.w	r9, #1
   84566:	4635      	mov	r5, r6
   84568:	461e      	mov	r6, r3
   8456a:	e7ab      	b.n	844c4 <__mdiff+0x1c>
   8456c:	4620      	mov	r0, r4
   8456e:	4639      	mov	r1, r7
   84570:	f7ff fd5a 	bl	84028 <_Balloc>
   84574:	2301      	movs	r3, #1
   84576:	6147      	str	r7, [r0, #20]
   84578:	6103      	str	r3, [r0, #16]
   8457a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8457e:	bf00      	nop

00084580 <__d2b>:
   84580:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   84584:	2101      	movs	r1, #1
   84586:	b083      	sub	sp, #12
   84588:	461d      	mov	r5, r3
   8458a:	f3c3 560a 	ubfx	r6, r3, #20, #11
   8458e:	4614      	mov	r4, r2
   84590:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   84592:	f7ff fd49 	bl	84028 <_Balloc>
   84596:	f3c5 0313 	ubfx	r3, r5, #0, #20
   8459a:	4680      	mov	r8, r0
   8459c:	b10e      	cbz	r6, 845a2 <__d2b+0x22>
   8459e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   845a2:	9301      	str	r3, [sp, #4]
   845a4:	b324      	cbz	r4, 845f0 <__d2b+0x70>
   845a6:	a802      	add	r0, sp, #8
   845a8:	f840 4d08 	str.w	r4, [r0, #-8]!
   845ac:	4668      	mov	r0, sp
   845ae:	f7ff fdd5 	bl	8415c <__lo0bits>
   845b2:	2800      	cmp	r0, #0
   845b4:	d135      	bne.n	84622 <__d2b+0xa2>
   845b6:	e89d 000c 	ldmia.w	sp, {r2, r3}
   845ba:	f8c8 2014 	str.w	r2, [r8, #20]
   845be:	2b00      	cmp	r3, #0
   845c0:	bf0c      	ite	eq
   845c2:	2401      	moveq	r4, #1
   845c4:	2402      	movne	r4, #2
   845c6:	f8c8 3018 	str.w	r3, [r8, #24]
   845ca:	f8c8 4010 	str.w	r4, [r8, #16]
   845ce:	b9de      	cbnz	r6, 84608 <__d2b+0x88>
   845d0:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   845d4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   845d8:	6038      	str	r0, [r7, #0]
   845da:	6918      	ldr	r0, [r3, #16]
   845dc:	f7ff fd9e 	bl	8411c <__hi0bits>
   845e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   845e2:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   845e6:	6018      	str	r0, [r3, #0]
   845e8:	4640      	mov	r0, r8
   845ea:	b003      	add	sp, #12
   845ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   845f0:	a801      	add	r0, sp, #4
   845f2:	f7ff fdb3 	bl	8415c <__lo0bits>
   845f6:	9b01      	ldr	r3, [sp, #4]
   845f8:	2401      	movs	r4, #1
   845fa:	3020      	adds	r0, #32
   845fc:	f8c8 3014 	str.w	r3, [r8, #20]
   84600:	f8c8 4010 	str.w	r4, [r8, #16]
   84604:	2e00      	cmp	r6, #0
   84606:	d0e3      	beq.n	845d0 <__d2b+0x50>
   84608:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
   8460c:	eb09 0300 	add.w	r3, r9, r0
   84610:	603b      	str	r3, [r7, #0]
   84612:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84614:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84618:	6018      	str	r0, [r3, #0]
   8461a:	4640      	mov	r0, r8
   8461c:	b003      	add	sp, #12
   8461e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   84622:	9b01      	ldr	r3, [sp, #4]
   84624:	f1c0 0120 	rsb	r1, r0, #32
   84628:	fa03 f101 	lsl.w	r1, r3, r1
   8462c:	40c3      	lsrs	r3, r0
   8462e:	9a00      	ldr	r2, [sp, #0]
   84630:	9301      	str	r3, [sp, #4]
   84632:	430a      	orrs	r2, r1
   84634:	f8c8 2014 	str.w	r2, [r8, #20]
   84638:	e7c1      	b.n	845be <__d2b+0x3e>
   8463a:	bf00      	nop

0008463c <_realloc_r>:
   8463c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84640:	460c      	mov	r4, r1
   84642:	b083      	sub	sp, #12
   84644:	4690      	mov	r8, r2
   84646:	4681      	mov	r9, r0
   84648:	2900      	cmp	r1, #0
   8464a:	f000 80ba 	beq.w	847c2 <_realloc_r+0x186>
   8464e:	f7ff fce7 	bl	84020 <__malloc_lock>
   84652:	f108 060b 	add.w	r6, r8, #11
   84656:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8465a:	2e16      	cmp	r6, #22
   8465c:	f023 0503 	bic.w	r5, r3, #3
   84660:	f1a4 0708 	sub.w	r7, r4, #8
   84664:	d84b      	bhi.n	846fe <_realloc_r+0xc2>
   84666:	2110      	movs	r1, #16
   84668:	460e      	mov	r6, r1
   8466a:	45b0      	cmp	r8, r6
   8466c:	d84c      	bhi.n	84708 <_realloc_r+0xcc>
   8466e:	428d      	cmp	r5, r1
   84670:	da51      	bge.n	84716 <_realloc_r+0xda>
   84672:	f8df b384 	ldr.w	fp, [pc, #900]	; 849f8 <_realloc_r+0x3bc>
   84676:	1978      	adds	r0, r7, r5
   84678:	f8db e008 	ldr.w	lr, [fp, #8]
   8467c:	4586      	cmp	lr, r0
   8467e:	f000 80a6 	beq.w	847ce <_realloc_r+0x192>
   84682:	6842      	ldr	r2, [r0, #4]
   84684:	f022 0c01 	bic.w	ip, r2, #1
   84688:	4484      	add	ip, r0
   8468a:	f8dc c004 	ldr.w	ip, [ip, #4]
   8468e:	f01c 0f01 	tst.w	ip, #1
   84692:	d054      	beq.n	8473e <_realloc_r+0x102>
   84694:	2200      	movs	r2, #0
   84696:	4610      	mov	r0, r2
   84698:	07db      	lsls	r3, r3, #31
   8469a:	d46f      	bmi.n	8477c <_realloc_r+0x140>
   8469c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   846a0:	ebc3 0a07 	rsb	sl, r3, r7
   846a4:	f8da 3004 	ldr.w	r3, [sl, #4]
   846a8:	f023 0303 	bic.w	r3, r3, #3
   846ac:	442b      	add	r3, r5
   846ae:	2800      	cmp	r0, #0
   846b0:	d062      	beq.n	84778 <_realloc_r+0x13c>
   846b2:	4570      	cmp	r0, lr
   846b4:	f000 80e9 	beq.w	8488a <_realloc_r+0x24e>
   846b8:	eb02 0e03 	add.w	lr, r2, r3
   846bc:	458e      	cmp	lr, r1
   846be:	db5b      	blt.n	84778 <_realloc_r+0x13c>
   846c0:	68c3      	ldr	r3, [r0, #12]
   846c2:	6882      	ldr	r2, [r0, #8]
   846c4:	46d0      	mov	r8, sl
   846c6:	60d3      	str	r3, [r2, #12]
   846c8:	609a      	str	r2, [r3, #8]
   846ca:	f858 1f08 	ldr.w	r1, [r8, #8]!
   846ce:	f8da 300c 	ldr.w	r3, [sl, #12]
   846d2:	1f2a      	subs	r2, r5, #4
   846d4:	2a24      	cmp	r2, #36	; 0x24
   846d6:	60cb      	str	r3, [r1, #12]
   846d8:	6099      	str	r1, [r3, #8]
   846da:	f200 8123 	bhi.w	84924 <_realloc_r+0x2e8>
   846de:	2a13      	cmp	r2, #19
   846e0:	f240 80b0 	bls.w	84844 <_realloc_r+0x208>
   846e4:	6823      	ldr	r3, [r4, #0]
   846e6:	2a1b      	cmp	r2, #27
   846e8:	f8ca 3008 	str.w	r3, [sl, #8]
   846ec:	6863      	ldr	r3, [r4, #4]
   846ee:	f8ca 300c 	str.w	r3, [sl, #12]
   846f2:	f200 812b 	bhi.w	8494c <_realloc_r+0x310>
   846f6:	3408      	adds	r4, #8
   846f8:	f10a 0310 	add.w	r3, sl, #16
   846fc:	e0a3      	b.n	84846 <_realloc_r+0x20a>
   846fe:	f026 0607 	bic.w	r6, r6, #7
   84702:	2e00      	cmp	r6, #0
   84704:	4631      	mov	r1, r6
   84706:	dab0      	bge.n	8466a <_realloc_r+0x2e>
   84708:	230c      	movs	r3, #12
   8470a:	2000      	movs	r0, #0
   8470c:	f8c9 3000 	str.w	r3, [r9]
   84710:	b003      	add	sp, #12
   84712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84716:	46a0      	mov	r8, r4
   84718:	1baa      	subs	r2, r5, r6
   8471a:	2a0f      	cmp	r2, #15
   8471c:	f003 0301 	and.w	r3, r3, #1
   84720:	d81a      	bhi.n	84758 <_realloc_r+0x11c>
   84722:	432b      	orrs	r3, r5
   84724:	607b      	str	r3, [r7, #4]
   84726:	443d      	add	r5, r7
   84728:	686b      	ldr	r3, [r5, #4]
   8472a:	f043 0301 	orr.w	r3, r3, #1
   8472e:	606b      	str	r3, [r5, #4]
   84730:	4648      	mov	r0, r9
   84732:	f7ff fc77 	bl	84024 <__malloc_unlock>
   84736:	4640      	mov	r0, r8
   84738:	b003      	add	sp, #12
   8473a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8473e:	f022 0203 	bic.w	r2, r2, #3
   84742:	eb02 0c05 	add.w	ip, r2, r5
   84746:	458c      	cmp	ip, r1
   84748:	dba6      	blt.n	84698 <_realloc_r+0x5c>
   8474a:	68c2      	ldr	r2, [r0, #12]
   8474c:	6881      	ldr	r1, [r0, #8]
   8474e:	46a0      	mov	r8, r4
   84750:	60ca      	str	r2, [r1, #12]
   84752:	4665      	mov	r5, ip
   84754:	6091      	str	r1, [r2, #8]
   84756:	e7df      	b.n	84718 <_realloc_r+0xdc>
   84758:	19b9      	adds	r1, r7, r6
   8475a:	4333      	orrs	r3, r6
   8475c:	f042 0001 	orr.w	r0, r2, #1
   84760:	607b      	str	r3, [r7, #4]
   84762:	440a      	add	r2, r1
   84764:	6048      	str	r0, [r1, #4]
   84766:	6853      	ldr	r3, [r2, #4]
   84768:	3108      	adds	r1, #8
   8476a:	f043 0301 	orr.w	r3, r3, #1
   8476e:	6053      	str	r3, [r2, #4]
   84770:	4648      	mov	r0, r9
   84772:	f7fe ffc3 	bl	836fc <_free_r>
   84776:	e7db      	b.n	84730 <_realloc_r+0xf4>
   84778:	428b      	cmp	r3, r1
   8477a:	da33      	bge.n	847e4 <_realloc_r+0x1a8>
   8477c:	4641      	mov	r1, r8
   8477e:	4648      	mov	r0, r9
   84780:	f7ff f88c 	bl	8389c <_malloc_r>
   84784:	4680      	mov	r8, r0
   84786:	2800      	cmp	r0, #0
   84788:	d0d2      	beq.n	84730 <_realloc_r+0xf4>
   8478a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8478e:	f1a0 0108 	sub.w	r1, r0, #8
   84792:	f023 0201 	bic.w	r2, r3, #1
   84796:	443a      	add	r2, r7
   84798:	4291      	cmp	r1, r2
   8479a:	f000 80bc 	beq.w	84916 <_realloc_r+0x2da>
   8479e:	1f2a      	subs	r2, r5, #4
   847a0:	2a24      	cmp	r2, #36	; 0x24
   847a2:	d86e      	bhi.n	84882 <_realloc_r+0x246>
   847a4:	2a13      	cmp	r2, #19
   847a6:	d842      	bhi.n	8482e <_realloc_r+0x1f2>
   847a8:	4603      	mov	r3, r0
   847aa:	4622      	mov	r2, r4
   847ac:	6811      	ldr	r1, [r2, #0]
   847ae:	6019      	str	r1, [r3, #0]
   847b0:	6851      	ldr	r1, [r2, #4]
   847b2:	6059      	str	r1, [r3, #4]
   847b4:	6892      	ldr	r2, [r2, #8]
   847b6:	609a      	str	r2, [r3, #8]
   847b8:	4621      	mov	r1, r4
   847ba:	4648      	mov	r0, r9
   847bc:	f7fe ff9e 	bl	836fc <_free_r>
   847c0:	e7b6      	b.n	84730 <_realloc_r+0xf4>
   847c2:	4611      	mov	r1, r2
   847c4:	b003      	add	sp, #12
   847c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   847ca:	f7ff b867 	b.w	8389c <_malloc_r>
   847ce:	f8de 2004 	ldr.w	r2, [lr, #4]
   847d2:	f106 0c10 	add.w	ip, r6, #16
   847d6:	f022 0203 	bic.w	r2, r2, #3
   847da:	1950      	adds	r0, r2, r5
   847dc:	4560      	cmp	r0, ip
   847de:	da3d      	bge.n	8485c <_realloc_r+0x220>
   847e0:	4670      	mov	r0, lr
   847e2:	e759      	b.n	84698 <_realloc_r+0x5c>
   847e4:	46d0      	mov	r8, sl
   847e6:	f858 0f08 	ldr.w	r0, [r8, #8]!
   847ea:	f8da 100c 	ldr.w	r1, [sl, #12]
   847ee:	1f2a      	subs	r2, r5, #4
   847f0:	2a24      	cmp	r2, #36	; 0x24
   847f2:	60c1      	str	r1, [r0, #12]
   847f4:	6088      	str	r0, [r1, #8]
   847f6:	f200 80a0 	bhi.w	8493a <_realloc_r+0x2fe>
   847fa:	2a13      	cmp	r2, #19
   847fc:	f240 809b 	bls.w	84936 <_realloc_r+0x2fa>
   84800:	6821      	ldr	r1, [r4, #0]
   84802:	2a1b      	cmp	r2, #27
   84804:	f8ca 1008 	str.w	r1, [sl, #8]
   84808:	6861      	ldr	r1, [r4, #4]
   8480a:	f8ca 100c 	str.w	r1, [sl, #12]
   8480e:	f200 80b2 	bhi.w	84976 <_realloc_r+0x33a>
   84812:	3408      	adds	r4, #8
   84814:	f10a 0210 	add.w	r2, sl, #16
   84818:	6821      	ldr	r1, [r4, #0]
   8481a:	461d      	mov	r5, r3
   8481c:	6011      	str	r1, [r2, #0]
   8481e:	6861      	ldr	r1, [r4, #4]
   84820:	4657      	mov	r7, sl
   84822:	6051      	str	r1, [r2, #4]
   84824:	68a3      	ldr	r3, [r4, #8]
   84826:	6093      	str	r3, [r2, #8]
   84828:	f8da 3004 	ldr.w	r3, [sl, #4]
   8482c:	e774      	b.n	84718 <_realloc_r+0xdc>
   8482e:	6823      	ldr	r3, [r4, #0]
   84830:	2a1b      	cmp	r2, #27
   84832:	6003      	str	r3, [r0, #0]
   84834:	6863      	ldr	r3, [r4, #4]
   84836:	6043      	str	r3, [r0, #4]
   84838:	d862      	bhi.n	84900 <_realloc_r+0x2c4>
   8483a:	f100 0308 	add.w	r3, r0, #8
   8483e:	f104 0208 	add.w	r2, r4, #8
   84842:	e7b3      	b.n	847ac <_realloc_r+0x170>
   84844:	4643      	mov	r3, r8
   84846:	6822      	ldr	r2, [r4, #0]
   84848:	4675      	mov	r5, lr
   8484a:	601a      	str	r2, [r3, #0]
   8484c:	6862      	ldr	r2, [r4, #4]
   8484e:	4657      	mov	r7, sl
   84850:	605a      	str	r2, [r3, #4]
   84852:	68a2      	ldr	r2, [r4, #8]
   84854:	609a      	str	r2, [r3, #8]
   84856:	f8da 3004 	ldr.w	r3, [sl, #4]
   8485a:	e75d      	b.n	84718 <_realloc_r+0xdc>
   8485c:	1b83      	subs	r3, r0, r6
   8485e:	4437      	add	r7, r6
   84860:	f043 0301 	orr.w	r3, r3, #1
   84864:	f8cb 7008 	str.w	r7, [fp, #8]
   84868:	607b      	str	r3, [r7, #4]
   8486a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8486e:	4648      	mov	r0, r9
   84870:	f003 0301 	and.w	r3, r3, #1
   84874:	431e      	orrs	r6, r3
   84876:	f844 6c04 	str.w	r6, [r4, #-4]
   8487a:	f7ff fbd3 	bl	84024 <__malloc_unlock>
   8487e:	4620      	mov	r0, r4
   84880:	e75a      	b.n	84738 <_realloc_r+0xfc>
   84882:	4621      	mov	r1, r4
   84884:	f7ff fb66 	bl	83f54 <memmove>
   84888:	e796      	b.n	847b8 <_realloc_r+0x17c>
   8488a:	eb02 0c03 	add.w	ip, r2, r3
   8488e:	f106 0210 	add.w	r2, r6, #16
   84892:	4594      	cmp	ip, r2
   84894:	f6ff af70 	blt.w	84778 <_realloc_r+0x13c>
   84898:	4657      	mov	r7, sl
   8489a:	f857 1f08 	ldr.w	r1, [r7, #8]!
   8489e:	f8da 300c 	ldr.w	r3, [sl, #12]
   848a2:	1f2a      	subs	r2, r5, #4
   848a4:	2a24      	cmp	r2, #36	; 0x24
   848a6:	60cb      	str	r3, [r1, #12]
   848a8:	6099      	str	r1, [r3, #8]
   848aa:	f200 8086 	bhi.w	849ba <_realloc_r+0x37e>
   848ae:	2a13      	cmp	r2, #19
   848b0:	d977      	bls.n	849a2 <_realloc_r+0x366>
   848b2:	6823      	ldr	r3, [r4, #0]
   848b4:	2a1b      	cmp	r2, #27
   848b6:	f8ca 3008 	str.w	r3, [sl, #8]
   848ba:	6863      	ldr	r3, [r4, #4]
   848bc:	f8ca 300c 	str.w	r3, [sl, #12]
   848c0:	f200 8084 	bhi.w	849cc <_realloc_r+0x390>
   848c4:	3408      	adds	r4, #8
   848c6:	f10a 0310 	add.w	r3, sl, #16
   848ca:	6822      	ldr	r2, [r4, #0]
   848cc:	601a      	str	r2, [r3, #0]
   848ce:	6862      	ldr	r2, [r4, #4]
   848d0:	605a      	str	r2, [r3, #4]
   848d2:	68a2      	ldr	r2, [r4, #8]
   848d4:	609a      	str	r2, [r3, #8]
   848d6:	ebc6 020c 	rsb	r2, r6, ip
   848da:	eb0a 0306 	add.w	r3, sl, r6
   848de:	f042 0201 	orr.w	r2, r2, #1
   848e2:	f8cb 3008 	str.w	r3, [fp, #8]
   848e6:	605a      	str	r2, [r3, #4]
   848e8:	f8da 3004 	ldr.w	r3, [sl, #4]
   848ec:	4648      	mov	r0, r9
   848ee:	f003 0301 	and.w	r3, r3, #1
   848f2:	431e      	orrs	r6, r3
   848f4:	f8ca 6004 	str.w	r6, [sl, #4]
   848f8:	f7ff fb94 	bl	84024 <__malloc_unlock>
   848fc:	4638      	mov	r0, r7
   848fe:	e71b      	b.n	84738 <_realloc_r+0xfc>
   84900:	68a3      	ldr	r3, [r4, #8]
   84902:	2a24      	cmp	r2, #36	; 0x24
   84904:	6083      	str	r3, [r0, #8]
   84906:	68e3      	ldr	r3, [r4, #12]
   84908:	60c3      	str	r3, [r0, #12]
   8490a:	d02b      	beq.n	84964 <_realloc_r+0x328>
   8490c:	f100 0310 	add.w	r3, r0, #16
   84910:	f104 0210 	add.w	r2, r4, #16
   84914:	e74a      	b.n	847ac <_realloc_r+0x170>
   84916:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8491a:	46a0      	mov	r8, r4
   8491c:	f022 0203 	bic.w	r2, r2, #3
   84920:	4415      	add	r5, r2
   84922:	e6f9      	b.n	84718 <_realloc_r+0xdc>
   84924:	4621      	mov	r1, r4
   84926:	4640      	mov	r0, r8
   84928:	4675      	mov	r5, lr
   8492a:	4657      	mov	r7, sl
   8492c:	f7ff fb12 	bl	83f54 <memmove>
   84930:	f8da 3004 	ldr.w	r3, [sl, #4]
   84934:	e6f0      	b.n	84718 <_realloc_r+0xdc>
   84936:	4642      	mov	r2, r8
   84938:	e76e      	b.n	84818 <_realloc_r+0x1dc>
   8493a:	4621      	mov	r1, r4
   8493c:	4640      	mov	r0, r8
   8493e:	461d      	mov	r5, r3
   84940:	4657      	mov	r7, sl
   84942:	f7ff fb07 	bl	83f54 <memmove>
   84946:	f8da 3004 	ldr.w	r3, [sl, #4]
   8494a:	e6e5      	b.n	84718 <_realloc_r+0xdc>
   8494c:	68a3      	ldr	r3, [r4, #8]
   8494e:	2a24      	cmp	r2, #36	; 0x24
   84950:	f8ca 3010 	str.w	r3, [sl, #16]
   84954:	68e3      	ldr	r3, [r4, #12]
   84956:	f8ca 3014 	str.w	r3, [sl, #20]
   8495a:	d018      	beq.n	8498e <_realloc_r+0x352>
   8495c:	3410      	adds	r4, #16
   8495e:	f10a 0318 	add.w	r3, sl, #24
   84962:	e770      	b.n	84846 <_realloc_r+0x20a>
   84964:	6922      	ldr	r2, [r4, #16]
   84966:	f100 0318 	add.w	r3, r0, #24
   8496a:	6102      	str	r2, [r0, #16]
   8496c:	6961      	ldr	r1, [r4, #20]
   8496e:	f104 0218 	add.w	r2, r4, #24
   84972:	6141      	str	r1, [r0, #20]
   84974:	e71a      	b.n	847ac <_realloc_r+0x170>
   84976:	68a1      	ldr	r1, [r4, #8]
   84978:	2a24      	cmp	r2, #36	; 0x24
   8497a:	f8ca 1010 	str.w	r1, [sl, #16]
   8497e:	68e1      	ldr	r1, [r4, #12]
   84980:	f8ca 1014 	str.w	r1, [sl, #20]
   84984:	d00f      	beq.n	849a6 <_realloc_r+0x36a>
   84986:	3410      	adds	r4, #16
   84988:	f10a 0218 	add.w	r2, sl, #24
   8498c:	e744      	b.n	84818 <_realloc_r+0x1dc>
   8498e:	6922      	ldr	r2, [r4, #16]
   84990:	f10a 0320 	add.w	r3, sl, #32
   84994:	f8ca 2018 	str.w	r2, [sl, #24]
   84998:	6962      	ldr	r2, [r4, #20]
   8499a:	3418      	adds	r4, #24
   8499c:	f8ca 201c 	str.w	r2, [sl, #28]
   849a0:	e751      	b.n	84846 <_realloc_r+0x20a>
   849a2:	463b      	mov	r3, r7
   849a4:	e791      	b.n	848ca <_realloc_r+0x28e>
   849a6:	6921      	ldr	r1, [r4, #16]
   849a8:	f10a 0220 	add.w	r2, sl, #32
   849ac:	f8ca 1018 	str.w	r1, [sl, #24]
   849b0:	6961      	ldr	r1, [r4, #20]
   849b2:	3418      	adds	r4, #24
   849b4:	f8ca 101c 	str.w	r1, [sl, #28]
   849b8:	e72e      	b.n	84818 <_realloc_r+0x1dc>
   849ba:	4621      	mov	r1, r4
   849bc:	4638      	mov	r0, r7
   849be:	f8cd c004 	str.w	ip, [sp, #4]
   849c2:	f7ff fac7 	bl	83f54 <memmove>
   849c6:	f8dd c004 	ldr.w	ip, [sp, #4]
   849ca:	e784      	b.n	848d6 <_realloc_r+0x29a>
   849cc:	68a3      	ldr	r3, [r4, #8]
   849ce:	2a24      	cmp	r2, #36	; 0x24
   849d0:	f8ca 3010 	str.w	r3, [sl, #16]
   849d4:	68e3      	ldr	r3, [r4, #12]
   849d6:	f8ca 3014 	str.w	r3, [sl, #20]
   849da:	d003      	beq.n	849e4 <_realloc_r+0x3a8>
   849dc:	3410      	adds	r4, #16
   849de:	f10a 0318 	add.w	r3, sl, #24
   849e2:	e772      	b.n	848ca <_realloc_r+0x28e>
   849e4:	6922      	ldr	r2, [r4, #16]
   849e6:	f10a 0320 	add.w	r3, sl, #32
   849ea:	f8ca 2018 	str.w	r2, [sl, #24]
   849ee:	6962      	ldr	r2, [r4, #20]
   849f0:	3418      	adds	r4, #24
   849f2:	f8ca 201c 	str.w	r2, [sl, #28]
   849f6:	e768      	b.n	848ca <_realloc_r+0x28e>
   849f8:	200705dc 	.word	0x200705dc

000849fc <__fpclassifyd>:
   849fc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   84a00:	b410      	push	{r4}
   84a02:	d008      	beq.n	84a16 <__fpclassifyd+0x1a>
   84a04:	4a0f      	ldr	r2, [pc, #60]	; (84a44 <__fpclassifyd+0x48>)
   84a06:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   84a0a:	4294      	cmp	r4, r2
   84a0c:	d80a      	bhi.n	84a24 <__fpclassifyd+0x28>
   84a0e:	2004      	movs	r0, #4
   84a10:	f85d 4b04 	ldr.w	r4, [sp], #4
   84a14:	4770      	bx	lr
   84a16:	2800      	cmp	r0, #0
   84a18:	bf0c      	ite	eq
   84a1a:	2002      	moveq	r0, #2
   84a1c:	2003      	movne	r0, #3
   84a1e:	f85d 4b04 	ldr.w	r4, [sp], #4
   84a22:	4770      	bx	lr
   84a24:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   84a28:	d201      	bcs.n	84a2e <__fpclassifyd+0x32>
   84a2a:	2003      	movs	r0, #3
   84a2c:	e7f7      	b.n	84a1e <__fpclassifyd+0x22>
   84a2e:	4a06      	ldr	r2, [pc, #24]	; (84a48 <__fpclassifyd+0x4c>)
   84a30:	4293      	cmp	r3, r2
   84a32:	d001      	beq.n	84a38 <__fpclassifyd+0x3c>
   84a34:	2000      	movs	r0, #0
   84a36:	e7f2      	b.n	84a1e <__fpclassifyd+0x22>
   84a38:	f1d0 0001 	rsbs	r0, r0, #1
   84a3c:	bf38      	it	cc
   84a3e:	2000      	movcc	r0, #0
   84a40:	e7ed      	b.n	84a1e <__fpclassifyd+0x22>
   84a42:	bf00      	nop
   84a44:	7fdfffff 	.word	0x7fdfffff
   84a48:	7ff00000 	.word	0x7ff00000

00084a4c <_sbrk_r>:
   84a4c:	b538      	push	{r3, r4, r5, lr}
   84a4e:	4c07      	ldr	r4, [pc, #28]	; (84a6c <_sbrk_r+0x20>)
   84a50:	2300      	movs	r3, #0
   84a52:	4605      	mov	r5, r0
   84a54:	4608      	mov	r0, r1
   84a56:	6023      	str	r3, [r4, #0]
   84a58:	f7fc fab0 	bl	80fbc <_sbrk>
   84a5c:	1c43      	adds	r3, r0, #1
   84a5e:	d000      	beq.n	84a62 <_sbrk_r+0x16>
   84a60:	bd38      	pop	{r3, r4, r5, pc}
   84a62:	6823      	ldr	r3, [r4, #0]
   84a64:	2b00      	cmp	r3, #0
   84a66:	d0fb      	beq.n	84a60 <_sbrk_r+0x14>
   84a68:	602b      	str	r3, [r5, #0]
   84a6a:	bd38      	pop	{r3, r4, r5, pc}
   84a6c:	20070ad8 	.word	0x20070ad8

00084a70 <__ssprint_r>:
   84a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84a74:	6894      	ldr	r4, [r2, #8]
   84a76:	b083      	sub	sp, #12
   84a78:	4692      	mov	sl, r2
   84a7a:	4680      	mov	r8, r0
   84a7c:	460d      	mov	r5, r1
   84a7e:	6816      	ldr	r6, [r2, #0]
   84a80:	2c00      	cmp	r4, #0
   84a82:	d06f      	beq.n	84b64 <__ssprint_r+0xf4>
   84a84:	f04f 0b00 	mov.w	fp, #0
   84a88:	6808      	ldr	r0, [r1, #0]
   84a8a:	688b      	ldr	r3, [r1, #8]
   84a8c:	465c      	mov	r4, fp
   84a8e:	2c00      	cmp	r4, #0
   84a90:	d043      	beq.n	84b1a <__ssprint_r+0xaa>
   84a92:	429c      	cmp	r4, r3
   84a94:	461f      	mov	r7, r3
   84a96:	d345      	bcc.n	84b24 <__ssprint_r+0xb4>
   84a98:	89ab      	ldrh	r3, [r5, #12]
   84a9a:	f413 6f90 	tst.w	r3, #1152	; 0x480
   84a9e:	d044      	beq.n	84b2a <__ssprint_r+0xba>
   84aa0:	696f      	ldr	r7, [r5, #20]
   84aa2:	6929      	ldr	r1, [r5, #16]
   84aa4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   84aa8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   84aac:	ebc1 0900 	rsb	r9, r1, r0
   84ab0:	1c62      	adds	r2, r4, #1
   84ab2:	107f      	asrs	r7, r7, #1
   84ab4:	444a      	add	r2, r9
   84ab6:	4297      	cmp	r7, r2
   84ab8:	bf34      	ite	cc
   84aba:	4617      	movcc	r7, r2
   84abc:	463a      	movcs	r2, r7
   84abe:	055b      	lsls	r3, r3, #21
   84ac0:	d535      	bpl.n	84b2e <__ssprint_r+0xbe>
   84ac2:	4611      	mov	r1, r2
   84ac4:	4640      	mov	r0, r8
   84ac6:	f7fe fee9 	bl	8389c <_malloc_r>
   84aca:	2800      	cmp	r0, #0
   84acc:	d039      	beq.n	84b42 <__ssprint_r+0xd2>
   84ace:	6929      	ldr	r1, [r5, #16]
   84ad0:	464a      	mov	r2, r9
   84ad2:	9001      	str	r0, [sp, #4]
   84ad4:	f7ff f9c8 	bl	83e68 <memcpy>
   84ad8:	89aa      	ldrh	r2, [r5, #12]
   84ada:	9b01      	ldr	r3, [sp, #4]
   84adc:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84ae0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84ae4:	81aa      	strh	r2, [r5, #12]
   84ae6:	ebc9 0207 	rsb	r2, r9, r7
   84aea:	eb03 0009 	add.w	r0, r3, r9
   84aee:	616f      	str	r7, [r5, #20]
   84af0:	612b      	str	r3, [r5, #16]
   84af2:	6028      	str	r0, [r5, #0]
   84af4:	60aa      	str	r2, [r5, #8]
   84af6:	4627      	mov	r7, r4
   84af8:	46a1      	mov	r9, r4
   84afa:	464a      	mov	r2, r9
   84afc:	4659      	mov	r1, fp
   84afe:	f7ff fa29 	bl	83f54 <memmove>
   84b02:	f8da 2008 	ldr.w	r2, [sl, #8]
   84b06:	68ab      	ldr	r3, [r5, #8]
   84b08:	6828      	ldr	r0, [r5, #0]
   84b0a:	1bdb      	subs	r3, r3, r7
   84b0c:	4448      	add	r0, r9
   84b0e:	1b14      	subs	r4, r2, r4
   84b10:	60ab      	str	r3, [r5, #8]
   84b12:	6028      	str	r0, [r5, #0]
   84b14:	f8ca 4008 	str.w	r4, [sl, #8]
   84b18:	b324      	cbz	r4, 84b64 <__ssprint_r+0xf4>
   84b1a:	f8d6 b000 	ldr.w	fp, [r6]
   84b1e:	6874      	ldr	r4, [r6, #4]
   84b20:	3608      	adds	r6, #8
   84b22:	e7b4      	b.n	84a8e <__ssprint_r+0x1e>
   84b24:	4627      	mov	r7, r4
   84b26:	46a1      	mov	r9, r4
   84b28:	e7e7      	b.n	84afa <__ssprint_r+0x8a>
   84b2a:	46b9      	mov	r9, r7
   84b2c:	e7e5      	b.n	84afa <__ssprint_r+0x8a>
   84b2e:	4640      	mov	r0, r8
   84b30:	f7ff fd84 	bl	8463c <_realloc_r>
   84b34:	4603      	mov	r3, r0
   84b36:	2800      	cmp	r0, #0
   84b38:	d1d5      	bne.n	84ae6 <__ssprint_r+0x76>
   84b3a:	4640      	mov	r0, r8
   84b3c:	6929      	ldr	r1, [r5, #16]
   84b3e:	f7fe fddd 	bl	836fc <_free_r>
   84b42:	89aa      	ldrh	r2, [r5, #12]
   84b44:	230c      	movs	r3, #12
   84b46:	f8c8 3000 	str.w	r3, [r8]
   84b4a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   84b4e:	2300      	movs	r3, #0
   84b50:	f04f 30ff 	mov.w	r0, #4294967295
   84b54:	81aa      	strh	r2, [r5, #12]
   84b56:	f8ca 3008 	str.w	r3, [sl, #8]
   84b5a:	f8ca 3004 	str.w	r3, [sl, #4]
   84b5e:	b003      	add	sp, #12
   84b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84b64:	4620      	mov	r0, r4
   84b66:	f8ca 4004 	str.w	r4, [sl, #4]
   84b6a:	b003      	add	sp, #12
   84b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084b70 <__register_exitproc>:
   84b70:	b5f0      	push	{r4, r5, r6, r7, lr}
   84b72:	4c27      	ldr	r4, [pc, #156]	; (84c10 <__register_exitproc+0xa0>)
   84b74:	b085      	sub	sp, #20
   84b76:	6826      	ldr	r6, [r4, #0]
   84b78:	4607      	mov	r7, r0
   84b7a:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   84b7e:	2c00      	cmp	r4, #0
   84b80:	d040      	beq.n	84c04 <__register_exitproc+0x94>
   84b82:	6865      	ldr	r5, [r4, #4]
   84b84:	2d1f      	cmp	r5, #31
   84b86:	dd1e      	ble.n	84bc6 <__register_exitproc+0x56>
   84b88:	4822      	ldr	r0, [pc, #136]	; (84c14 <__register_exitproc+0xa4>)
   84b8a:	b918      	cbnz	r0, 84b94 <__register_exitproc+0x24>
   84b8c:	f04f 30ff 	mov.w	r0, #4294967295
   84b90:	b005      	add	sp, #20
   84b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84b94:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84b98:	9103      	str	r1, [sp, #12]
   84b9a:	9202      	str	r2, [sp, #8]
   84b9c:	9301      	str	r3, [sp, #4]
   84b9e:	f3af 8000 	nop.w
   84ba2:	9903      	ldr	r1, [sp, #12]
   84ba4:	4604      	mov	r4, r0
   84ba6:	9a02      	ldr	r2, [sp, #8]
   84ba8:	9b01      	ldr	r3, [sp, #4]
   84baa:	2800      	cmp	r0, #0
   84bac:	d0ee      	beq.n	84b8c <__register_exitproc+0x1c>
   84bae:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   84bb2:	2000      	movs	r0, #0
   84bb4:	6025      	str	r5, [r4, #0]
   84bb6:	6060      	str	r0, [r4, #4]
   84bb8:	4605      	mov	r5, r0
   84bba:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84bbe:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   84bc2:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   84bc6:	b93f      	cbnz	r7, 84bd8 <__register_exitproc+0x68>
   84bc8:	1c6b      	adds	r3, r5, #1
   84bca:	2000      	movs	r0, #0
   84bcc:	3502      	adds	r5, #2
   84bce:	6063      	str	r3, [r4, #4]
   84bd0:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   84bd4:	b005      	add	sp, #20
   84bd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84bd8:	2601      	movs	r6, #1
   84bda:	40ae      	lsls	r6, r5
   84bdc:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   84be0:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   84be4:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   84be8:	2f02      	cmp	r7, #2
   84bea:	ea42 0206 	orr.w	r2, r2, r6
   84bee:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   84bf2:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   84bf6:	d1e7      	bne.n	84bc8 <__register_exitproc+0x58>
   84bf8:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84bfc:	431e      	orrs	r6, r3
   84bfe:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   84c02:	e7e1      	b.n	84bc8 <__register_exitproc+0x58>
   84c04:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   84c08:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84c0c:	e7b9      	b.n	84b82 <__register_exitproc+0x12>
   84c0e:	bf00      	nop
   84c10:	00085b60 	.word	0x00085b60
   84c14:	00000000 	.word	0x00000000

00084c18 <_calloc_r>:
   84c18:	b510      	push	{r4, lr}
   84c1a:	fb02 f101 	mul.w	r1, r2, r1
   84c1e:	f7fe fe3d 	bl	8389c <_malloc_r>
   84c22:	4604      	mov	r4, r0
   84c24:	b168      	cbz	r0, 84c42 <_calloc_r+0x2a>
   84c26:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84c2a:	f022 0203 	bic.w	r2, r2, #3
   84c2e:	3a04      	subs	r2, #4
   84c30:	2a24      	cmp	r2, #36	; 0x24
   84c32:	d818      	bhi.n	84c66 <_calloc_r+0x4e>
   84c34:	2a13      	cmp	r2, #19
   84c36:	d806      	bhi.n	84c46 <_calloc_r+0x2e>
   84c38:	4603      	mov	r3, r0
   84c3a:	2200      	movs	r2, #0
   84c3c:	601a      	str	r2, [r3, #0]
   84c3e:	605a      	str	r2, [r3, #4]
   84c40:	609a      	str	r2, [r3, #8]
   84c42:	4620      	mov	r0, r4
   84c44:	bd10      	pop	{r4, pc}
   84c46:	2300      	movs	r3, #0
   84c48:	2a1b      	cmp	r2, #27
   84c4a:	6003      	str	r3, [r0, #0]
   84c4c:	6043      	str	r3, [r0, #4]
   84c4e:	d90f      	bls.n	84c70 <_calloc_r+0x58>
   84c50:	2a24      	cmp	r2, #36	; 0x24
   84c52:	6083      	str	r3, [r0, #8]
   84c54:	60c3      	str	r3, [r0, #12]
   84c56:	bf05      	ittet	eq
   84c58:	6103      	streq	r3, [r0, #16]
   84c5a:	6143      	streq	r3, [r0, #20]
   84c5c:	f100 0310 	addne.w	r3, r0, #16
   84c60:	f100 0318 	addeq.w	r3, r0, #24
   84c64:	e7e9      	b.n	84c3a <_calloc_r+0x22>
   84c66:	2100      	movs	r1, #0
   84c68:	f7fc fa0c 	bl	81084 <memset>
   84c6c:	4620      	mov	r0, r4
   84c6e:	bd10      	pop	{r4, pc}
   84c70:	f100 0308 	add.w	r3, r0, #8
   84c74:	e7e1      	b.n	84c3a <_calloc_r+0x22>
   84c76:	bf00      	nop

00084c78 <__aeabi_drsub>:
   84c78:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84c7c:	e002      	b.n	84c84 <__adddf3>
   84c7e:	bf00      	nop

00084c80 <__aeabi_dsub>:
   84c80:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084c84 <__adddf3>:
   84c84:	b530      	push	{r4, r5, lr}
   84c86:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84c8a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84c8e:	ea94 0f05 	teq	r4, r5
   84c92:	bf08      	it	eq
   84c94:	ea90 0f02 	teqeq	r0, r2
   84c98:	bf1f      	itttt	ne
   84c9a:	ea54 0c00 	orrsne.w	ip, r4, r0
   84c9e:	ea55 0c02 	orrsne.w	ip, r5, r2
   84ca2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84ca6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84caa:	f000 80e2 	beq.w	84e72 <__adddf3+0x1ee>
   84cae:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84cb2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84cb6:	bfb8      	it	lt
   84cb8:	426d      	neglt	r5, r5
   84cba:	dd0c      	ble.n	84cd6 <__adddf3+0x52>
   84cbc:	442c      	add	r4, r5
   84cbe:	ea80 0202 	eor.w	r2, r0, r2
   84cc2:	ea81 0303 	eor.w	r3, r1, r3
   84cc6:	ea82 0000 	eor.w	r0, r2, r0
   84cca:	ea83 0101 	eor.w	r1, r3, r1
   84cce:	ea80 0202 	eor.w	r2, r0, r2
   84cd2:	ea81 0303 	eor.w	r3, r1, r3
   84cd6:	2d36      	cmp	r5, #54	; 0x36
   84cd8:	bf88      	it	hi
   84cda:	bd30      	pophi	{r4, r5, pc}
   84cdc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84ce0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84ce4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84ce8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84cec:	d002      	beq.n	84cf4 <__adddf3+0x70>
   84cee:	4240      	negs	r0, r0
   84cf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84cf4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84cf8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84cfc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84d00:	d002      	beq.n	84d08 <__adddf3+0x84>
   84d02:	4252      	negs	r2, r2
   84d04:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84d08:	ea94 0f05 	teq	r4, r5
   84d0c:	f000 80a7 	beq.w	84e5e <__adddf3+0x1da>
   84d10:	f1a4 0401 	sub.w	r4, r4, #1
   84d14:	f1d5 0e20 	rsbs	lr, r5, #32
   84d18:	db0d      	blt.n	84d36 <__adddf3+0xb2>
   84d1a:	fa02 fc0e 	lsl.w	ip, r2, lr
   84d1e:	fa22 f205 	lsr.w	r2, r2, r5
   84d22:	1880      	adds	r0, r0, r2
   84d24:	f141 0100 	adc.w	r1, r1, #0
   84d28:	fa03 f20e 	lsl.w	r2, r3, lr
   84d2c:	1880      	adds	r0, r0, r2
   84d2e:	fa43 f305 	asr.w	r3, r3, r5
   84d32:	4159      	adcs	r1, r3
   84d34:	e00e      	b.n	84d54 <__adddf3+0xd0>
   84d36:	f1a5 0520 	sub.w	r5, r5, #32
   84d3a:	f10e 0e20 	add.w	lr, lr, #32
   84d3e:	2a01      	cmp	r2, #1
   84d40:	fa03 fc0e 	lsl.w	ip, r3, lr
   84d44:	bf28      	it	cs
   84d46:	f04c 0c02 	orrcs.w	ip, ip, #2
   84d4a:	fa43 f305 	asr.w	r3, r3, r5
   84d4e:	18c0      	adds	r0, r0, r3
   84d50:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84d54:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84d58:	d507      	bpl.n	84d6a <__adddf3+0xe6>
   84d5a:	f04f 0e00 	mov.w	lr, #0
   84d5e:	f1dc 0c00 	rsbs	ip, ip, #0
   84d62:	eb7e 0000 	sbcs.w	r0, lr, r0
   84d66:	eb6e 0101 	sbc.w	r1, lr, r1
   84d6a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84d6e:	d31b      	bcc.n	84da8 <__adddf3+0x124>
   84d70:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84d74:	d30c      	bcc.n	84d90 <__adddf3+0x10c>
   84d76:	0849      	lsrs	r1, r1, #1
   84d78:	ea5f 0030 	movs.w	r0, r0, rrx
   84d7c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84d80:	f104 0401 	add.w	r4, r4, #1
   84d84:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84d88:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84d8c:	f080 809a 	bcs.w	84ec4 <__adddf3+0x240>
   84d90:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84d94:	bf08      	it	eq
   84d96:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84d9a:	f150 0000 	adcs.w	r0, r0, #0
   84d9e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84da2:	ea41 0105 	orr.w	r1, r1, r5
   84da6:	bd30      	pop	{r4, r5, pc}
   84da8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84dac:	4140      	adcs	r0, r0
   84dae:	eb41 0101 	adc.w	r1, r1, r1
   84db2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84db6:	f1a4 0401 	sub.w	r4, r4, #1
   84dba:	d1e9      	bne.n	84d90 <__adddf3+0x10c>
   84dbc:	f091 0f00 	teq	r1, #0
   84dc0:	bf04      	itt	eq
   84dc2:	4601      	moveq	r1, r0
   84dc4:	2000      	moveq	r0, #0
   84dc6:	fab1 f381 	clz	r3, r1
   84dca:	bf08      	it	eq
   84dcc:	3320      	addeq	r3, #32
   84dce:	f1a3 030b 	sub.w	r3, r3, #11
   84dd2:	f1b3 0220 	subs.w	r2, r3, #32
   84dd6:	da0c      	bge.n	84df2 <__adddf3+0x16e>
   84dd8:	320c      	adds	r2, #12
   84dda:	dd08      	ble.n	84dee <__adddf3+0x16a>
   84ddc:	f102 0c14 	add.w	ip, r2, #20
   84de0:	f1c2 020c 	rsb	r2, r2, #12
   84de4:	fa01 f00c 	lsl.w	r0, r1, ip
   84de8:	fa21 f102 	lsr.w	r1, r1, r2
   84dec:	e00c      	b.n	84e08 <__adddf3+0x184>
   84dee:	f102 0214 	add.w	r2, r2, #20
   84df2:	bfd8      	it	le
   84df4:	f1c2 0c20 	rsble	ip, r2, #32
   84df8:	fa01 f102 	lsl.w	r1, r1, r2
   84dfc:	fa20 fc0c 	lsr.w	ip, r0, ip
   84e00:	bfdc      	itt	le
   84e02:	ea41 010c 	orrle.w	r1, r1, ip
   84e06:	4090      	lslle	r0, r2
   84e08:	1ae4      	subs	r4, r4, r3
   84e0a:	bfa2      	ittt	ge
   84e0c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84e10:	4329      	orrge	r1, r5
   84e12:	bd30      	popge	{r4, r5, pc}
   84e14:	ea6f 0404 	mvn.w	r4, r4
   84e18:	3c1f      	subs	r4, #31
   84e1a:	da1c      	bge.n	84e56 <__adddf3+0x1d2>
   84e1c:	340c      	adds	r4, #12
   84e1e:	dc0e      	bgt.n	84e3e <__adddf3+0x1ba>
   84e20:	f104 0414 	add.w	r4, r4, #20
   84e24:	f1c4 0220 	rsb	r2, r4, #32
   84e28:	fa20 f004 	lsr.w	r0, r0, r4
   84e2c:	fa01 f302 	lsl.w	r3, r1, r2
   84e30:	ea40 0003 	orr.w	r0, r0, r3
   84e34:	fa21 f304 	lsr.w	r3, r1, r4
   84e38:	ea45 0103 	orr.w	r1, r5, r3
   84e3c:	bd30      	pop	{r4, r5, pc}
   84e3e:	f1c4 040c 	rsb	r4, r4, #12
   84e42:	f1c4 0220 	rsb	r2, r4, #32
   84e46:	fa20 f002 	lsr.w	r0, r0, r2
   84e4a:	fa01 f304 	lsl.w	r3, r1, r4
   84e4e:	ea40 0003 	orr.w	r0, r0, r3
   84e52:	4629      	mov	r1, r5
   84e54:	bd30      	pop	{r4, r5, pc}
   84e56:	fa21 f004 	lsr.w	r0, r1, r4
   84e5a:	4629      	mov	r1, r5
   84e5c:	bd30      	pop	{r4, r5, pc}
   84e5e:	f094 0f00 	teq	r4, #0
   84e62:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84e66:	bf06      	itte	eq
   84e68:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84e6c:	3401      	addeq	r4, #1
   84e6e:	3d01      	subne	r5, #1
   84e70:	e74e      	b.n	84d10 <__adddf3+0x8c>
   84e72:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84e76:	bf18      	it	ne
   84e78:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84e7c:	d029      	beq.n	84ed2 <__adddf3+0x24e>
   84e7e:	ea94 0f05 	teq	r4, r5
   84e82:	bf08      	it	eq
   84e84:	ea90 0f02 	teqeq	r0, r2
   84e88:	d005      	beq.n	84e96 <__adddf3+0x212>
   84e8a:	ea54 0c00 	orrs.w	ip, r4, r0
   84e8e:	bf04      	itt	eq
   84e90:	4619      	moveq	r1, r3
   84e92:	4610      	moveq	r0, r2
   84e94:	bd30      	pop	{r4, r5, pc}
   84e96:	ea91 0f03 	teq	r1, r3
   84e9a:	bf1e      	ittt	ne
   84e9c:	2100      	movne	r1, #0
   84e9e:	2000      	movne	r0, #0
   84ea0:	bd30      	popne	{r4, r5, pc}
   84ea2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84ea6:	d105      	bne.n	84eb4 <__adddf3+0x230>
   84ea8:	0040      	lsls	r0, r0, #1
   84eaa:	4149      	adcs	r1, r1
   84eac:	bf28      	it	cs
   84eae:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84eb2:	bd30      	pop	{r4, r5, pc}
   84eb4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84eb8:	bf3c      	itt	cc
   84eba:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84ebe:	bd30      	popcc	{r4, r5, pc}
   84ec0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84ec4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84ec8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84ecc:	f04f 0000 	mov.w	r0, #0
   84ed0:	bd30      	pop	{r4, r5, pc}
   84ed2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84ed6:	bf1a      	itte	ne
   84ed8:	4619      	movne	r1, r3
   84eda:	4610      	movne	r0, r2
   84edc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84ee0:	bf1c      	itt	ne
   84ee2:	460b      	movne	r3, r1
   84ee4:	4602      	movne	r2, r0
   84ee6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84eea:	bf06      	itte	eq
   84eec:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84ef0:	ea91 0f03 	teqeq	r1, r3
   84ef4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84ef8:	bd30      	pop	{r4, r5, pc}
   84efa:	bf00      	nop

00084efc <__aeabi_ui2d>:
   84efc:	f090 0f00 	teq	r0, #0
   84f00:	bf04      	itt	eq
   84f02:	2100      	moveq	r1, #0
   84f04:	4770      	bxeq	lr
   84f06:	b530      	push	{r4, r5, lr}
   84f08:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84f0c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84f10:	f04f 0500 	mov.w	r5, #0
   84f14:	f04f 0100 	mov.w	r1, #0
   84f18:	e750      	b.n	84dbc <__adddf3+0x138>
   84f1a:	bf00      	nop

00084f1c <__aeabi_i2d>:
   84f1c:	f090 0f00 	teq	r0, #0
   84f20:	bf04      	itt	eq
   84f22:	2100      	moveq	r1, #0
   84f24:	4770      	bxeq	lr
   84f26:	b530      	push	{r4, r5, lr}
   84f28:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84f2c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84f30:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84f34:	bf48      	it	mi
   84f36:	4240      	negmi	r0, r0
   84f38:	f04f 0100 	mov.w	r1, #0
   84f3c:	e73e      	b.n	84dbc <__adddf3+0x138>
   84f3e:	bf00      	nop

00084f40 <__aeabi_f2d>:
   84f40:	0042      	lsls	r2, r0, #1
   84f42:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84f46:	ea4f 0131 	mov.w	r1, r1, rrx
   84f4a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84f4e:	bf1f      	itttt	ne
   84f50:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84f54:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84f58:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84f5c:	4770      	bxne	lr
   84f5e:	f092 0f00 	teq	r2, #0
   84f62:	bf14      	ite	ne
   84f64:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84f68:	4770      	bxeq	lr
   84f6a:	b530      	push	{r4, r5, lr}
   84f6c:	f44f 7460 	mov.w	r4, #896	; 0x380
   84f70:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84f74:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84f78:	e720      	b.n	84dbc <__adddf3+0x138>
   84f7a:	bf00      	nop

00084f7c <__aeabi_ul2d>:
   84f7c:	ea50 0201 	orrs.w	r2, r0, r1
   84f80:	bf08      	it	eq
   84f82:	4770      	bxeq	lr
   84f84:	b530      	push	{r4, r5, lr}
   84f86:	f04f 0500 	mov.w	r5, #0
   84f8a:	e00a      	b.n	84fa2 <__aeabi_l2d+0x16>

00084f8c <__aeabi_l2d>:
   84f8c:	ea50 0201 	orrs.w	r2, r0, r1
   84f90:	bf08      	it	eq
   84f92:	4770      	bxeq	lr
   84f94:	b530      	push	{r4, r5, lr}
   84f96:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84f9a:	d502      	bpl.n	84fa2 <__aeabi_l2d+0x16>
   84f9c:	4240      	negs	r0, r0
   84f9e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84fa2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84fa6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84faa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84fae:	f43f aedc 	beq.w	84d6a <__adddf3+0xe6>
   84fb2:	f04f 0203 	mov.w	r2, #3
   84fb6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84fba:	bf18      	it	ne
   84fbc:	3203      	addne	r2, #3
   84fbe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84fc2:	bf18      	it	ne
   84fc4:	3203      	addne	r2, #3
   84fc6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84fca:	f1c2 0320 	rsb	r3, r2, #32
   84fce:	fa00 fc03 	lsl.w	ip, r0, r3
   84fd2:	fa20 f002 	lsr.w	r0, r0, r2
   84fd6:	fa01 fe03 	lsl.w	lr, r1, r3
   84fda:	ea40 000e 	orr.w	r0, r0, lr
   84fde:	fa21 f102 	lsr.w	r1, r1, r2
   84fe2:	4414      	add	r4, r2
   84fe4:	e6c1      	b.n	84d6a <__adddf3+0xe6>
   84fe6:	bf00      	nop

00084fe8 <__aeabi_dmul>:
   84fe8:	b570      	push	{r4, r5, r6, lr}
   84fea:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84fee:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84ff2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84ff6:	bf1d      	ittte	ne
   84ff8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84ffc:	ea94 0f0c 	teqne	r4, ip
   85000:	ea95 0f0c 	teqne	r5, ip
   85004:	f000 f8de 	bleq	851c4 <__aeabi_dmul+0x1dc>
   85008:	442c      	add	r4, r5
   8500a:	ea81 0603 	eor.w	r6, r1, r3
   8500e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   85012:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   85016:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8501a:	bf18      	it	ne
   8501c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85020:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85024:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85028:	d038      	beq.n	8509c <__aeabi_dmul+0xb4>
   8502a:	fba0 ce02 	umull	ip, lr, r0, r2
   8502e:	f04f 0500 	mov.w	r5, #0
   85032:	fbe1 e502 	umlal	lr, r5, r1, r2
   85036:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8503a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8503e:	f04f 0600 	mov.w	r6, #0
   85042:	fbe1 5603 	umlal	r5, r6, r1, r3
   85046:	f09c 0f00 	teq	ip, #0
   8504a:	bf18      	it	ne
   8504c:	f04e 0e01 	orrne.w	lr, lr, #1
   85050:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   85054:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85058:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8505c:	d204      	bcs.n	85068 <__aeabi_dmul+0x80>
   8505e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   85062:	416d      	adcs	r5, r5
   85064:	eb46 0606 	adc.w	r6, r6, r6
   85068:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   8506c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85070:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   85074:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85078:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   8507c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85080:	bf88      	it	hi
   85082:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85086:	d81e      	bhi.n	850c6 <__aeabi_dmul+0xde>
   85088:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   8508c:	bf08      	it	eq
   8508e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   85092:	f150 0000 	adcs.w	r0, r0, #0
   85096:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8509a:	bd70      	pop	{r4, r5, r6, pc}
   8509c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   850a0:	ea46 0101 	orr.w	r1, r6, r1
   850a4:	ea40 0002 	orr.w	r0, r0, r2
   850a8:	ea81 0103 	eor.w	r1, r1, r3
   850ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   850b0:	bfc2      	ittt	gt
   850b2:	ebd4 050c 	rsbsgt	r5, r4, ip
   850b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   850ba:	bd70      	popgt	{r4, r5, r6, pc}
   850bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   850c0:	f04f 0e00 	mov.w	lr, #0
   850c4:	3c01      	subs	r4, #1
   850c6:	f300 80ab 	bgt.w	85220 <__aeabi_dmul+0x238>
   850ca:	f114 0f36 	cmn.w	r4, #54	; 0x36
   850ce:	bfde      	ittt	le
   850d0:	2000      	movle	r0, #0
   850d2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   850d6:	bd70      	pople	{r4, r5, r6, pc}
   850d8:	f1c4 0400 	rsb	r4, r4, #0
   850dc:	3c20      	subs	r4, #32
   850de:	da35      	bge.n	8514c <__aeabi_dmul+0x164>
   850e0:	340c      	adds	r4, #12
   850e2:	dc1b      	bgt.n	8511c <__aeabi_dmul+0x134>
   850e4:	f104 0414 	add.w	r4, r4, #20
   850e8:	f1c4 0520 	rsb	r5, r4, #32
   850ec:	fa00 f305 	lsl.w	r3, r0, r5
   850f0:	fa20 f004 	lsr.w	r0, r0, r4
   850f4:	fa01 f205 	lsl.w	r2, r1, r5
   850f8:	ea40 0002 	orr.w	r0, r0, r2
   850fc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85100:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85104:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85108:	fa21 f604 	lsr.w	r6, r1, r4
   8510c:	eb42 0106 	adc.w	r1, r2, r6
   85110:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85114:	bf08      	it	eq
   85116:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8511a:	bd70      	pop	{r4, r5, r6, pc}
   8511c:	f1c4 040c 	rsb	r4, r4, #12
   85120:	f1c4 0520 	rsb	r5, r4, #32
   85124:	fa00 f304 	lsl.w	r3, r0, r4
   85128:	fa20 f005 	lsr.w	r0, r0, r5
   8512c:	fa01 f204 	lsl.w	r2, r1, r4
   85130:	ea40 0002 	orr.w	r0, r0, r2
   85134:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85138:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8513c:	f141 0100 	adc.w	r1, r1, #0
   85140:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85144:	bf08      	it	eq
   85146:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8514a:	bd70      	pop	{r4, r5, r6, pc}
   8514c:	f1c4 0520 	rsb	r5, r4, #32
   85150:	fa00 f205 	lsl.w	r2, r0, r5
   85154:	ea4e 0e02 	orr.w	lr, lr, r2
   85158:	fa20 f304 	lsr.w	r3, r0, r4
   8515c:	fa01 f205 	lsl.w	r2, r1, r5
   85160:	ea43 0302 	orr.w	r3, r3, r2
   85164:	fa21 f004 	lsr.w	r0, r1, r4
   85168:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8516c:	fa21 f204 	lsr.w	r2, r1, r4
   85170:	ea20 0002 	bic.w	r0, r0, r2
   85174:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85178:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8517c:	bf08      	it	eq
   8517e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85182:	bd70      	pop	{r4, r5, r6, pc}
   85184:	f094 0f00 	teq	r4, #0
   85188:	d10f      	bne.n	851aa <__aeabi_dmul+0x1c2>
   8518a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8518e:	0040      	lsls	r0, r0, #1
   85190:	eb41 0101 	adc.w	r1, r1, r1
   85194:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85198:	bf08      	it	eq
   8519a:	3c01      	subeq	r4, #1
   8519c:	d0f7      	beq.n	8518e <__aeabi_dmul+0x1a6>
   8519e:	ea41 0106 	orr.w	r1, r1, r6
   851a2:	f095 0f00 	teq	r5, #0
   851a6:	bf18      	it	ne
   851a8:	4770      	bxne	lr
   851aa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   851ae:	0052      	lsls	r2, r2, #1
   851b0:	eb43 0303 	adc.w	r3, r3, r3
   851b4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   851b8:	bf08      	it	eq
   851ba:	3d01      	subeq	r5, #1
   851bc:	d0f7      	beq.n	851ae <__aeabi_dmul+0x1c6>
   851be:	ea43 0306 	orr.w	r3, r3, r6
   851c2:	4770      	bx	lr
   851c4:	ea94 0f0c 	teq	r4, ip
   851c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   851cc:	bf18      	it	ne
   851ce:	ea95 0f0c 	teqne	r5, ip
   851d2:	d00c      	beq.n	851ee <__aeabi_dmul+0x206>
   851d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   851d8:	bf18      	it	ne
   851da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   851de:	d1d1      	bne.n	85184 <__aeabi_dmul+0x19c>
   851e0:	ea81 0103 	eor.w	r1, r1, r3
   851e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   851e8:	f04f 0000 	mov.w	r0, #0
   851ec:	bd70      	pop	{r4, r5, r6, pc}
   851ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   851f2:	bf06      	itte	eq
   851f4:	4610      	moveq	r0, r2
   851f6:	4619      	moveq	r1, r3
   851f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   851fc:	d019      	beq.n	85232 <__aeabi_dmul+0x24a>
   851fe:	ea94 0f0c 	teq	r4, ip
   85202:	d102      	bne.n	8520a <__aeabi_dmul+0x222>
   85204:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85208:	d113      	bne.n	85232 <__aeabi_dmul+0x24a>
   8520a:	ea95 0f0c 	teq	r5, ip
   8520e:	d105      	bne.n	8521c <__aeabi_dmul+0x234>
   85210:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85214:	bf1c      	itt	ne
   85216:	4610      	movne	r0, r2
   85218:	4619      	movne	r1, r3
   8521a:	d10a      	bne.n	85232 <__aeabi_dmul+0x24a>
   8521c:	ea81 0103 	eor.w	r1, r1, r3
   85220:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85224:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85228:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8522c:	f04f 0000 	mov.w	r0, #0
   85230:	bd70      	pop	{r4, r5, r6, pc}
   85232:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85236:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8523a:	bd70      	pop	{r4, r5, r6, pc}

0008523c <__aeabi_ddiv>:
   8523c:	b570      	push	{r4, r5, r6, lr}
   8523e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85242:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85246:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8524a:	bf1d      	ittte	ne
   8524c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85250:	ea94 0f0c 	teqne	r4, ip
   85254:	ea95 0f0c 	teqne	r5, ip
   85258:	f000 f8a7 	bleq	853aa <__aeabi_ddiv+0x16e>
   8525c:	eba4 0405 	sub.w	r4, r4, r5
   85260:	ea81 0e03 	eor.w	lr, r1, r3
   85264:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85268:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8526c:	f000 8088 	beq.w	85380 <__aeabi_ddiv+0x144>
   85270:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85274:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85278:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8527c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85280:	ea4f 2202 	mov.w	r2, r2, lsl #8
   85284:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85288:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8528c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85290:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   85294:	429d      	cmp	r5, r3
   85296:	bf08      	it	eq
   85298:	4296      	cmpeq	r6, r2
   8529a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8529e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   852a2:	d202      	bcs.n	852aa <__aeabi_ddiv+0x6e>
   852a4:	085b      	lsrs	r3, r3, #1
   852a6:	ea4f 0232 	mov.w	r2, r2, rrx
   852aa:	1ab6      	subs	r6, r6, r2
   852ac:	eb65 0503 	sbc.w	r5, r5, r3
   852b0:	085b      	lsrs	r3, r3, #1
   852b2:	ea4f 0232 	mov.w	r2, r2, rrx
   852b6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   852ba:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   852be:	ebb6 0e02 	subs.w	lr, r6, r2
   852c2:	eb75 0e03 	sbcs.w	lr, r5, r3
   852c6:	bf22      	ittt	cs
   852c8:	1ab6      	subcs	r6, r6, r2
   852ca:	4675      	movcs	r5, lr
   852cc:	ea40 000c 	orrcs.w	r0, r0, ip
   852d0:	085b      	lsrs	r3, r3, #1
   852d2:	ea4f 0232 	mov.w	r2, r2, rrx
   852d6:	ebb6 0e02 	subs.w	lr, r6, r2
   852da:	eb75 0e03 	sbcs.w	lr, r5, r3
   852de:	bf22      	ittt	cs
   852e0:	1ab6      	subcs	r6, r6, r2
   852e2:	4675      	movcs	r5, lr
   852e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   852e8:	085b      	lsrs	r3, r3, #1
   852ea:	ea4f 0232 	mov.w	r2, r2, rrx
   852ee:	ebb6 0e02 	subs.w	lr, r6, r2
   852f2:	eb75 0e03 	sbcs.w	lr, r5, r3
   852f6:	bf22      	ittt	cs
   852f8:	1ab6      	subcs	r6, r6, r2
   852fa:	4675      	movcs	r5, lr
   852fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85300:	085b      	lsrs	r3, r3, #1
   85302:	ea4f 0232 	mov.w	r2, r2, rrx
   85306:	ebb6 0e02 	subs.w	lr, r6, r2
   8530a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8530e:	bf22      	ittt	cs
   85310:	1ab6      	subcs	r6, r6, r2
   85312:	4675      	movcs	r5, lr
   85314:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85318:	ea55 0e06 	orrs.w	lr, r5, r6
   8531c:	d018      	beq.n	85350 <__aeabi_ddiv+0x114>
   8531e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85322:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85326:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8532a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8532e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85332:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85336:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8533a:	d1c0      	bne.n	852be <__aeabi_ddiv+0x82>
   8533c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85340:	d10b      	bne.n	8535a <__aeabi_ddiv+0x11e>
   85342:	ea41 0100 	orr.w	r1, r1, r0
   85346:	f04f 0000 	mov.w	r0, #0
   8534a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8534e:	e7b6      	b.n	852be <__aeabi_ddiv+0x82>
   85350:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85354:	bf04      	itt	eq
   85356:	4301      	orreq	r1, r0
   85358:	2000      	moveq	r0, #0
   8535a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8535e:	bf88      	it	hi
   85360:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85364:	f63f aeaf 	bhi.w	850c6 <__aeabi_dmul+0xde>
   85368:	ebb5 0c03 	subs.w	ip, r5, r3
   8536c:	bf04      	itt	eq
   8536e:	ebb6 0c02 	subseq.w	ip, r6, r2
   85372:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85376:	f150 0000 	adcs.w	r0, r0, #0
   8537a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8537e:	bd70      	pop	{r4, r5, r6, pc}
   85380:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   85384:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85388:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8538c:	bfc2      	ittt	gt
   8538e:	ebd4 050c 	rsbsgt	r5, r4, ip
   85392:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85396:	bd70      	popgt	{r4, r5, r6, pc}
   85398:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8539c:	f04f 0e00 	mov.w	lr, #0
   853a0:	3c01      	subs	r4, #1
   853a2:	e690      	b.n	850c6 <__aeabi_dmul+0xde>
   853a4:	ea45 0e06 	orr.w	lr, r5, r6
   853a8:	e68d      	b.n	850c6 <__aeabi_dmul+0xde>
   853aa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   853ae:	ea94 0f0c 	teq	r4, ip
   853b2:	bf08      	it	eq
   853b4:	ea95 0f0c 	teqeq	r5, ip
   853b8:	f43f af3b 	beq.w	85232 <__aeabi_dmul+0x24a>
   853bc:	ea94 0f0c 	teq	r4, ip
   853c0:	d10a      	bne.n	853d8 <__aeabi_ddiv+0x19c>
   853c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   853c6:	f47f af34 	bne.w	85232 <__aeabi_dmul+0x24a>
   853ca:	ea95 0f0c 	teq	r5, ip
   853ce:	f47f af25 	bne.w	8521c <__aeabi_dmul+0x234>
   853d2:	4610      	mov	r0, r2
   853d4:	4619      	mov	r1, r3
   853d6:	e72c      	b.n	85232 <__aeabi_dmul+0x24a>
   853d8:	ea95 0f0c 	teq	r5, ip
   853dc:	d106      	bne.n	853ec <__aeabi_ddiv+0x1b0>
   853de:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   853e2:	f43f aefd 	beq.w	851e0 <__aeabi_dmul+0x1f8>
   853e6:	4610      	mov	r0, r2
   853e8:	4619      	mov	r1, r3
   853ea:	e722      	b.n	85232 <__aeabi_dmul+0x24a>
   853ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   853f0:	bf18      	it	ne
   853f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   853f6:	f47f aec5 	bne.w	85184 <__aeabi_dmul+0x19c>
   853fa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   853fe:	f47f af0d 	bne.w	8521c <__aeabi_dmul+0x234>
   85402:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   85406:	f47f aeeb 	bne.w	851e0 <__aeabi_dmul+0x1f8>
   8540a:	e712      	b.n	85232 <__aeabi_dmul+0x24a>

0008540c <__gedf2>:
   8540c:	f04f 3cff 	mov.w	ip, #4294967295
   85410:	e006      	b.n	85420 <__cmpdf2+0x4>
   85412:	bf00      	nop

00085414 <__ledf2>:
   85414:	f04f 0c01 	mov.w	ip, #1
   85418:	e002      	b.n	85420 <__cmpdf2+0x4>
   8541a:	bf00      	nop

0008541c <__cmpdf2>:
   8541c:	f04f 0c01 	mov.w	ip, #1
   85420:	f84d cd04 	str.w	ip, [sp, #-4]!
   85424:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85428:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8542c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85430:	bf18      	it	ne
   85432:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   85436:	d01b      	beq.n	85470 <__cmpdf2+0x54>
   85438:	b001      	add	sp, #4
   8543a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8543e:	bf0c      	ite	eq
   85440:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85444:	ea91 0f03 	teqne	r1, r3
   85448:	bf02      	ittt	eq
   8544a:	ea90 0f02 	teqeq	r0, r2
   8544e:	2000      	moveq	r0, #0
   85450:	4770      	bxeq	lr
   85452:	f110 0f00 	cmn.w	r0, #0
   85456:	ea91 0f03 	teq	r1, r3
   8545a:	bf58      	it	pl
   8545c:	4299      	cmppl	r1, r3
   8545e:	bf08      	it	eq
   85460:	4290      	cmpeq	r0, r2
   85462:	bf2c      	ite	cs
   85464:	17d8      	asrcs	r0, r3, #31
   85466:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8546a:	f040 0001 	orr.w	r0, r0, #1
   8546e:	4770      	bx	lr
   85470:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85474:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85478:	d102      	bne.n	85480 <__cmpdf2+0x64>
   8547a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8547e:	d107      	bne.n	85490 <__cmpdf2+0x74>
   85480:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85484:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85488:	d1d6      	bne.n	85438 <__cmpdf2+0x1c>
   8548a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8548e:	d0d3      	beq.n	85438 <__cmpdf2+0x1c>
   85490:	f85d 0b04 	ldr.w	r0, [sp], #4
   85494:	4770      	bx	lr
   85496:	bf00      	nop

00085498 <__aeabi_cdrcmple>:
   85498:	4684      	mov	ip, r0
   8549a:	4610      	mov	r0, r2
   8549c:	4662      	mov	r2, ip
   8549e:	468c      	mov	ip, r1
   854a0:	4619      	mov	r1, r3
   854a2:	4663      	mov	r3, ip
   854a4:	e000      	b.n	854a8 <__aeabi_cdcmpeq>
   854a6:	bf00      	nop

000854a8 <__aeabi_cdcmpeq>:
   854a8:	b501      	push	{r0, lr}
   854aa:	f7ff ffb7 	bl	8541c <__cmpdf2>
   854ae:	2800      	cmp	r0, #0
   854b0:	bf48      	it	mi
   854b2:	f110 0f00 	cmnmi.w	r0, #0
   854b6:	bd01      	pop	{r0, pc}

000854b8 <__aeabi_dcmpeq>:
   854b8:	f84d ed08 	str.w	lr, [sp, #-8]!
   854bc:	f7ff fff4 	bl	854a8 <__aeabi_cdcmpeq>
   854c0:	bf0c      	ite	eq
   854c2:	2001      	moveq	r0, #1
   854c4:	2000      	movne	r0, #0
   854c6:	f85d fb08 	ldr.w	pc, [sp], #8
   854ca:	bf00      	nop

000854cc <__aeabi_dcmplt>:
   854cc:	f84d ed08 	str.w	lr, [sp, #-8]!
   854d0:	f7ff ffea 	bl	854a8 <__aeabi_cdcmpeq>
   854d4:	bf34      	ite	cc
   854d6:	2001      	movcc	r0, #1
   854d8:	2000      	movcs	r0, #0
   854da:	f85d fb08 	ldr.w	pc, [sp], #8
   854de:	bf00      	nop

000854e0 <__aeabi_dcmple>:
   854e0:	f84d ed08 	str.w	lr, [sp, #-8]!
   854e4:	f7ff ffe0 	bl	854a8 <__aeabi_cdcmpeq>
   854e8:	bf94      	ite	ls
   854ea:	2001      	movls	r0, #1
   854ec:	2000      	movhi	r0, #0
   854ee:	f85d fb08 	ldr.w	pc, [sp], #8
   854f2:	bf00      	nop

000854f4 <__aeabi_dcmpge>:
   854f4:	f84d ed08 	str.w	lr, [sp, #-8]!
   854f8:	f7ff ffce 	bl	85498 <__aeabi_cdrcmple>
   854fc:	bf94      	ite	ls
   854fe:	2001      	movls	r0, #1
   85500:	2000      	movhi	r0, #0
   85502:	f85d fb08 	ldr.w	pc, [sp], #8
   85506:	bf00      	nop

00085508 <__aeabi_dcmpgt>:
   85508:	f84d ed08 	str.w	lr, [sp, #-8]!
   8550c:	f7ff ffc4 	bl	85498 <__aeabi_cdrcmple>
   85510:	bf34      	ite	cc
   85512:	2001      	movcc	r0, #1
   85514:	2000      	movcs	r0, #0
   85516:	f85d fb08 	ldr.w	pc, [sp], #8
   8551a:	bf00      	nop

0008551c <__aeabi_d2iz>:
   8551c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85520:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85524:	d215      	bcs.n	85552 <__aeabi_d2iz+0x36>
   85526:	d511      	bpl.n	8554c <__aeabi_d2iz+0x30>
   85528:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8552c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85530:	d912      	bls.n	85558 <__aeabi_d2iz+0x3c>
   85532:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   85536:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8553a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8553e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85542:	fa23 f002 	lsr.w	r0, r3, r2
   85546:	bf18      	it	ne
   85548:	4240      	negne	r0, r0
   8554a:	4770      	bx	lr
   8554c:	f04f 0000 	mov.w	r0, #0
   85550:	4770      	bx	lr
   85552:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85556:	d105      	bne.n	85564 <__aeabi_d2iz+0x48>
   85558:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8555c:	bf08      	it	eq
   8555e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85562:	4770      	bx	lr
   85564:	f04f 0000 	mov.w	r0, #0
   85568:	4770      	bx	lr
   8556a:	bf00      	nop

0008556c <__aeabi_uldivmod>:
   8556c:	b94b      	cbnz	r3, 85582 <__aeabi_uldivmod+0x16>
   8556e:	b942      	cbnz	r2, 85582 <__aeabi_uldivmod+0x16>
   85570:	2900      	cmp	r1, #0
   85572:	bf08      	it	eq
   85574:	2800      	cmpeq	r0, #0
   85576:	d002      	beq.n	8557e <__aeabi_uldivmod+0x12>
   85578:	f04f 31ff 	mov.w	r1, #4294967295
   8557c:	4608      	mov	r0, r1
   8557e:	f000 b83b 	b.w	855f8 <__aeabi_idiv0>
   85582:	b082      	sub	sp, #8
   85584:	46ec      	mov	ip, sp
   85586:	e92d 5000 	stmdb	sp!, {ip, lr}
   8558a:	f000 f81d 	bl	855c8 <__gnu_uldivmod_helper>
   8558e:	f8dd e004 	ldr.w	lr, [sp, #4]
   85592:	b002      	add	sp, #8
   85594:	bc0c      	pop	{r2, r3}
   85596:	4770      	bx	lr

00085598 <__gnu_ldivmod_helper>:
   85598:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   8559c:	9e08      	ldr	r6, [sp, #32]
   8559e:	4614      	mov	r4, r2
   855a0:	461d      	mov	r5, r3
   855a2:	4680      	mov	r8, r0
   855a4:	4689      	mov	r9, r1
   855a6:	f000 f829 	bl	855fc <__divdi3>
   855aa:	fb04 f301 	mul.w	r3, r4, r1
   855ae:	fba4 ab00 	umull	sl, fp, r4, r0
   855b2:	fb00 3205 	mla	r2, r0, r5, r3
   855b6:	4493      	add	fp, r2
   855b8:	ebb8 080a 	subs.w	r8, r8, sl
   855bc:	eb69 090b 	sbc.w	r9, r9, fp
   855c0:	e9c6 8900 	strd	r8, r9, [r6]
   855c4:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000855c8 <__gnu_uldivmod_helper>:
   855c8:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   855cc:	9e08      	ldr	r6, [sp, #32]
   855ce:	4614      	mov	r4, r2
   855d0:	461d      	mov	r5, r3
   855d2:	4680      	mov	r8, r0
   855d4:	4689      	mov	r9, r1
   855d6:	f000 f961 	bl	8589c <__udivdi3>
   855da:	fb00 f505 	mul.w	r5, r0, r5
   855de:	fba0 ab04 	umull	sl, fp, r0, r4
   855e2:	fb04 5401 	mla	r4, r4, r1, r5
   855e6:	44a3      	add	fp, r4
   855e8:	ebb8 080a 	subs.w	r8, r8, sl
   855ec:	eb69 090b 	sbc.w	r9, r9, fp
   855f0:	e9c6 8900 	strd	r8, r9, [r6]
   855f4:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000855f8 <__aeabi_idiv0>:
   855f8:	4770      	bx	lr
   855fa:	bf00      	nop

000855fc <__divdi3>:
   855fc:	2900      	cmp	r1, #0
   855fe:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85602:	f2c0 80a1 	blt.w	85748 <__divdi3+0x14c>
   85606:	2400      	movs	r4, #0
   85608:	2b00      	cmp	r3, #0
   8560a:	f2c0 8098 	blt.w	8573e <__divdi3+0x142>
   8560e:	4615      	mov	r5, r2
   85610:	4606      	mov	r6, r0
   85612:	460f      	mov	r7, r1
   85614:	2b00      	cmp	r3, #0
   85616:	d13f      	bne.n	85698 <__divdi3+0x9c>
   85618:	428a      	cmp	r2, r1
   8561a:	d958      	bls.n	856ce <__divdi3+0xd2>
   8561c:	fab2 f382 	clz	r3, r2
   85620:	b14b      	cbz	r3, 85636 <__divdi3+0x3a>
   85622:	f1c3 0220 	rsb	r2, r3, #32
   85626:	fa01 f703 	lsl.w	r7, r1, r3
   8562a:	fa20 f202 	lsr.w	r2, r0, r2
   8562e:	409d      	lsls	r5, r3
   85630:	fa00 f603 	lsl.w	r6, r0, r3
   85634:	4317      	orrs	r7, r2
   85636:	0c29      	lsrs	r1, r5, #16
   85638:	fbb7 f2f1 	udiv	r2, r7, r1
   8563c:	fb01 7712 	mls	r7, r1, r2, r7
   85640:	b2a8      	uxth	r0, r5
   85642:	fb00 f302 	mul.w	r3, r0, r2
   85646:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   8564a:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   8564e:	42bb      	cmp	r3, r7
   85650:	d909      	bls.n	85666 <__divdi3+0x6a>
   85652:	197f      	adds	r7, r7, r5
   85654:	f102 3cff 	add.w	ip, r2, #4294967295
   85658:	f080 8105 	bcs.w	85866 <__divdi3+0x26a>
   8565c:	42bb      	cmp	r3, r7
   8565e:	f240 8102 	bls.w	85866 <__divdi3+0x26a>
   85662:	3a02      	subs	r2, #2
   85664:	442f      	add	r7, r5
   85666:	1aff      	subs	r7, r7, r3
   85668:	fbb7 f3f1 	udiv	r3, r7, r1
   8566c:	fb01 7113 	mls	r1, r1, r3, r7
   85670:	fb00 f003 	mul.w	r0, r0, r3
   85674:	b2b6      	uxth	r6, r6
   85676:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   8567a:	4288      	cmp	r0, r1
   8567c:	d908      	bls.n	85690 <__divdi3+0x94>
   8567e:	1949      	adds	r1, r1, r5
   85680:	f103 37ff 	add.w	r7, r3, #4294967295
   85684:	f080 80f1 	bcs.w	8586a <__divdi3+0x26e>
   85688:	4288      	cmp	r0, r1
   8568a:	f240 80ee 	bls.w	8586a <__divdi3+0x26e>
   8568e:	3b02      	subs	r3, #2
   85690:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   85694:	2300      	movs	r3, #0
   85696:	e003      	b.n	856a0 <__divdi3+0xa4>
   85698:	428b      	cmp	r3, r1
   8569a:	d90a      	bls.n	856b2 <__divdi3+0xb6>
   8569c:	2300      	movs	r3, #0
   8569e:	461a      	mov	r2, r3
   856a0:	4610      	mov	r0, r2
   856a2:	4619      	mov	r1, r3
   856a4:	b114      	cbz	r4, 856ac <__divdi3+0xb0>
   856a6:	4240      	negs	r0, r0
   856a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   856ac:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   856b0:	4770      	bx	lr
   856b2:	fab3 f883 	clz	r8, r3
   856b6:	f1b8 0f00 	cmp.w	r8, #0
   856ba:	f040 8088 	bne.w	857ce <__divdi3+0x1d2>
   856be:	428b      	cmp	r3, r1
   856c0:	d302      	bcc.n	856c8 <__divdi3+0xcc>
   856c2:	4282      	cmp	r2, r0
   856c4:	f200 80e2 	bhi.w	8588c <__divdi3+0x290>
   856c8:	2300      	movs	r3, #0
   856ca:	2201      	movs	r2, #1
   856cc:	e7e8      	b.n	856a0 <__divdi3+0xa4>
   856ce:	b912      	cbnz	r2, 856d6 <__divdi3+0xda>
   856d0:	2301      	movs	r3, #1
   856d2:	fbb3 f5f2 	udiv	r5, r3, r2
   856d6:	fab5 f285 	clz	r2, r5
   856da:	2a00      	cmp	r2, #0
   856dc:	d13a      	bne.n	85754 <__divdi3+0x158>
   856de:	1b7f      	subs	r7, r7, r5
   856e0:	0c28      	lsrs	r0, r5, #16
   856e2:	fa1f fc85 	uxth.w	ip, r5
   856e6:	2301      	movs	r3, #1
   856e8:	fbb7 f1f0 	udiv	r1, r7, r0
   856ec:	fb00 7711 	mls	r7, r0, r1, r7
   856f0:	fb0c f201 	mul.w	r2, ip, r1
   856f4:	ea4f 4816 	mov.w	r8, r6, lsr #16
   856f8:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   856fc:	42ba      	cmp	r2, r7
   856fe:	d907      	bls.n	85710 <__divdi3+0x114>
   85700:	197f      	adds	r7, r7, r5
   85702:	f101 38ff 	add.w	r8, r1, #4294967295
   85706:	d202      	bcs.n	8570e <__divdi3+0x112>
   85708:	42ba      	cmp	r2, r7
   8570a:	f200 80c4 	bhi.w	85896 <__divdi3+0x29a>
   8570e:	4641      	mov	r1, r8
   85710:	1abf      	subs	r7, r7, r2
   85712:	fbb7 f2f0 	udiv	r2, r7, r0
   85716:	fb00 7012 	mls	r0, r0, r2, r7
   8571a:	fb0c fc02 	mul.w	ip, ip, r2
   8571e:	b2b6      	uxth	r6, r6
   85720:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   85724:	4584      	cmp	ip, r0
   85726:	d907      	bls.n	85738 <__divdi3+0x13c>
   85728:	1940      	adds	r0, r0, r5
   8572a:	f102 37ff 	add.w	r7, r2, #4294967295
   8572e:	d202      	bcs.n	85736 <__divdi3+0x13a>
   85730:	4584      	cmp	ip, r0
   85732:	f200 80ae 	bhi.w	85892 <__divdi3+0x296>
   85736:	463a      	mov	r2, r7
   85738:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   8573c:	e7b0      	b.n	856a0 <__divdi3+0xa4>
   8573e:	43e4      	mvns	r4, r4
   85740:	4252      	negs	r2, r2
   85742:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85746:	e762      	b.n	8560e <__divdi3+0x12>
   85748:	4240      	negs	r0, r0
   8574a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8574e:	f04f 34ff 	mov.w	r4, #4294967295
   85752:	e759      	b.n	85608 <__divdi3+0xc>
   85754:	4095      	lsls	r5, r2
   85756:	f1c2 0920 	rsb	r9, r2, #32
   8575a:	fa27 f109 	lsr.w	r1, r7, r9
   8575e:	fa26 f909 	lsr.w	r9, r6, r9
   85762:	4097      	lsls	r7, r2
   85764:	0c28      	lsrs	r0, r5, #16
   85766:	fbb1 f8f0 	udiv	r8, r1, r0
   8576a:	fb00 1118 	mls	r1, r0, r8, r1
   8576e:	fa1f fc85 	uxth.w	ip, r5
   85772:	fb0c f308 	mul.w	r3, ip, r8
   85776:	ea49 0907 	orr.w	r9, r9, r7
   8577a:	ea4f 4719 	mov.w	r7, r9, lsr #16
   8577e:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   85782:	428b      	cmp	r3, r1
   85784:	fa06 f602 	lsl.w	r6, r6, r2
   85788:	d908      	bls.n	8579c <__divdi3+0x1a0>
   8578a:	1949      	adds	r1, r1, r5
   8578c:	f108 32ff 	add.w	r2, r8, #4294967295
   85790:	d27a      	bcs.n	85888 <__divdi3+0x28c>
   85792:	428b      	cmp	r3, r1
   85794:	d978      	bls.n	85888 <__divdi3+0x28c>
   85796:	f1a8 0802 	sub.w	r8, r8, #2
   8579a:	4429      	add	r1, r5
   8579c:	1ac9      	subs	r1, r1, r3
   8579e:	fbb1 f3f0 	udiv	r3, r1, r0
   857a2:	fb00 1713 	mls	r7, r0, r3, r1
   857a6:	fb0c f203 	mul.w	r2, ip, r3
   857aa:	fa1f f989 	uxth.w	r9, r9
   857ae:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   857b2:	42ba      	cmp	r2, r7
   857b4:	d907      	bls.n	857c6 <__divdi3+0x1ca>
   857b6:	197f      	adds	r7, r7, r5
   857b8:	f103 31ff 	add.w	r1, r3, #4294967295
   857bc:	d260      	bcs.n	85880 <__divdi3+0x284>
   857be:	42ba      	cmp	r2, r7
   857c0:	d95e      	bls.n	85880 <__divdi3+0x284>
   857c2:	3b02      	subs	r3, #2
   857c4:	442f      	add	r7, r5
   857c6:	1abf      	subs	r7, r7, r2
   857c8:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   857cc:	e78c      	b.n	856e8 <__divdi3+0xec>
   857ce:	f1c8 0220 	rsb	r2, r8, #32
   857d2:	fa25 f102 	lsr.w	r1, r5, r2
   857d6:	fa03 fc08 	lsl.w	ip, r3, r8
   857da:	fa27 f302 	lsr.w	r3, r7, r2
   857de:	fa20 f202 	lsr.w	r2, r0, r2
   857e2:	fa07 f708 	lsl.w	r7, r7, r8
   857e6:	ea41 0c0c 	orr.w	ip, r1, ip
   857ea:	ea4f 491c 	mov.w	r9, ip, lsr #16
   857ee:	fbb3 f1f9 	udiv	r1, r3, r9
   857f2:	fb09 3311 	mls	r3, r9, r1, r3
   857f6:	fa1f fa8c 	uxth.w	sl, ip
   857fa:	fb0a fb01 	mul.w	fp, sl, r1
   857fe:	4317      	orrs	r7, r2
   85800:	0c3a      	lsrs	r2, r7, #16
   85802:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   85806:	459b      	cmp	fp, r3
   85808:	fa05 f008 	lsl.w	r0, r5, r8
   8580c:	d908      	bls.n	85820 <__divdi3+0x224>
   8580e:	eb13 030c 	adds.w	r3, r3, ip
   85812:	f101 32ff 	add.w	r2, r1, #4294967295
   85816:	d235      	bcs.n	85884 <__divdi3+0x288>
   85818:	459b      	cmp	fp, r3
   8581a:	d933      	bls.n	85884 <__divdi3+0x288>
   8581c:	3902      	subs	r1, #2
   8581e:	4463      	add	r3, ip
   85820:	ebcb 0303 	rsb	r3, fp, r3
   85824:	fbb3 f2f9 	udiv	r2, r3, r9
   85828:	fb09 3312 	mls	r3, r9, r2, r3
   8582c:	fb0a fa02 	mul.w	sl, sl, r2
   85830:	b2bf      	uxth	r7, r7
   85832:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   85836:	45ba      	cmp	sl, r7
   85838:	d908      	bls.n	8584c <__divdi3+0x250>
   8583a:	eb17 070c 	adds.w	r7, r7, ip
   8583e:	f102 33ff 	add.w	r3, r2, #4294967295
   85842:	d21b      	bcs.n	8587c <__divdi3+0x280>
   85844:	45ba      	cmp	sl, r7
   85846:	d919      	bls.n	8587c <__divdi3+0x280>
   85848:	3a02      	subs	r2, #2
   8584a:	4467      	add	r7, ip
   8584c:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   85850:	fba5 0100 	umull	r0, r1, r5, r0
   85854:	ebca 0707 	rsb	r7, sl, r7
   85858:	428f      	cmp	r7, r1
   8585a:	f04f 0300 	mov.w	r3, #0
   8585e:	d30a      	bcc.n	85876 <__divdi3+0x27a>
   85860:	d005      	beq.n	8586e <__divdi3+0x272>
   85862:	462a      	mov	r2, r5
   85864:	e71c      	b.n	856a0 <__divdi3+0xa4>
   85866:	4662      	mov	r2, ip
   85868:	e6fd      	b.n	85666 <__divdi3+0x6a>
   8586a:	463b      	mov	r3, r7
   8586c:	e710      	b.n	85690 <__divdi3+0x94>
   8586e:	fa06 f608 	lsl.w	r6, r6, r8
   85872:	4286      	cmp	r6, r0
   85874:	d2f5      	bcs.n	85862 <__divdi3+0x266>
   85876:	1e6a      	subs	r2, r5, #1
   85878:	2300      	movs	r3, #0
   8587a:	e711      	b.n	856a0 <__divdi3+0xa4>
   8587c:	461a      	mov	r2, r3
   8587e:	e7e5      	b.n	8584c <__divdi3+0x250>
   85880:	460b      	mov	r3, r1
   85882:	e7a0      	b.n	857c6 <__divdi3+0x1ca>
   85884:	4611      	mov	r1, r2
   85886:	e7cb      	b.n	85820 <__divdi3+0x224>
   85888:	4690      	mov	r8, r2
   8588a:	e787      	b.n	8579c <__divdi3+0x1a0>
   8588c:	4643      	mov	r3, r8
   8588e:	4642      	mov	r2, r8
   85890:	e706      	b.n	856a0 <__divdi3+0xa4>
   85892:	3a02      	subs	r2, #2
   85894:	e750      	b.n	85738 <__divdi3+0x13c>
   85896:	3902      	subs	r1, #2
   85898:	442f      	add	r7, r5
   8589a:	e739      	b.n	85710 <__divdi3+0x114>

0008589c <__udivdi3>:
   8589c:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   858a0:	4614      	mov	r4, r2
   858a2:	4605      	mov	r5, r0
   858a4:	460e      	mov	r6, r1
   858a6:	2b00      	cmp	r3, #0
   858a8:	d143      	bne.n	85932 <__udivdi3+0x96>
   858aa:	428a      	cmp	r2, r1
   858ac:	d953      	bls.n	85956 <__udivdi3+0xba>
   858ae:	fab2 f782 	clz	r7, r2
   858b2:	b157      	cbz	r7, 858ca <__udivdi3+0x2e>
   858b4:	f1c7 0620 	rsb	r6, r7, #32
   858b8:	fa20 f606 	lsr.w	r6, r0, r6
   858bc:	fa01 f307 	lsl.w	r3, r1, r7
   858c0:	fa02 f407 	lsl.w	r4, r2, r7
   858c4:	fa00 f507 	lsl.w	r5, r0, r7
   858c8:	431e      	orrs	r6, r3
   858ca:	0c21      	lsrs	r1, r4, #16
   858cc:	fbb6 f2f1 	udiv	r2, r6, r1
   858d0:	fb01 6612 	mls	r6, r1, r2, r6
   858d4:	b2a0      	uxth	r0, r4
   858d6:	fb00 f302 	mul.w	r3, r0, r2
   858da:	0c2f      	lsrs	r7, r5, #16
   858dc:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   858e0:	42b3      	cmp	r3, r6
   858e2:	d909      	bls.n	858f8 <__udivdi3+0x5c>
   858e4:	1936      	adds	r6, r6, r4
   858e6:	f102 37ff 	add.w	r7, r2, #4294967295
   858ea:	f080 80fd 	bcs.w	85ae8 <__udivdi3+0x24c>
   858ee:	42b3      	cmp	r3, r6
   858f0:	f240 80fa 	bls.w	85ae8 <__udivdi3+0x24c>
   858f4:	3a02      	subs	r2, #2
   858f6:	4426      	add	r6, r4
   858f8:	1af6      	subs	r6, r6, r3
   858fa:	fbb6 f3f1 	udiv	r3, r6, r1
   858fe:	fb01 6113 	mls	r1, r1, r3, r6
   85902:	fb00 f003 	mul.w	r0, r0, r3
   85906:	b2ad      	uxth	r5, r5
   85908:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   8590c:	4288      	cmp	r0, r1
   8590e:	d908      	bls.n	85922 <__udivdi3+0x86>
   85910:	1909      	adds	r1, r1, r4
   85912:	f103 36ff 	add.w	r6, r3, #4294967295
   85916:	f080 80e9 	bcs.w	85aec <__udivdi3+0x250>
   8591a:	4288      	cmp	r0, r1
   8591c:	f240 80e6 	bls.w	85aec <__udivdi3+0x250>
   85920:	3b02      	subs	r3, #2
   85922:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   85926:	2300      	movs	r3, #0
   85928:	4610      	mov	r0, r2
   8592a:	4619      	mov	r1, r3
   8592c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85930:	4770      	bx	lr
   85932:	428b      	cmp	r3, r1
   85934:	d84c      	bhi.n	859d0 <__udivdi3+0x134>
   85936:	fab3 f683 	clz	r6, r3
   8593a:	2e00      	cmp	r6, #0
   8593c:	d14f      	bne.n	859de <__udivdi3+0x142>
   8593e:	428b      	cmp	r3, r1
   85940:	d302      	bcc.n	85948 <__udivdi3+0xac>
   85942:	4282      	cmp	r2, r0
   85944:	f200 80dd 	bhi.w	85b02 <__udivdi3+0x266>
   85948:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8594c:	2300      	movs	r3, #0
   8594e:	2201      	movs	r2, #1
   85950:	4610      	mov	r0, r2
   85952:	4619      	mov	r1, r3
   85954:	4770      	bx	lr
   85956:	b912      	cbnz	r2, 8595e <__udivdi3+0xc2>
   85958:	2401      	movs	r4, #1
   8595a:	fbb4 f4f2 	udiv	r4, r4, r2
   8595e:	fab4 f284 	clz	r2, r4
   85962:	2a00      	cmp	r2, #0
   85964:	f040 8082 	bne.w	85a6c <__udivdi3+0x1d0>
   85968:	1b09      	subs	r1, r1, r4
   8596a:	0c26      	lsrs	r6, r4, #16
   8596c:	b2a7      	uxth	r7, r4
   8596e:	2301      	movs	r3, #1
   85970:	fbb1 f0f6 	udiv	r0, r1, r6
   85974:	fb06 1110 	mls	r1, r6, r0, r1
   85978:	fb07 f200 	mul.w	r2, r7, r0
   8597c:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   85980:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   85984:	428a      	cmp	r2, r1
   85986:	d907      	bls.n	85998 <__udivdi3+0xfc>
   85988:	1909      	adds	r1, r1, r4
   8598a:	f100 3cff 	add.w	ip, r0, #4294967295
   8598e:	d202      	bcs.n	85996 <__udivdi3+0xfa>
   85990:	428a      	cmp	r2, r1
   85992:	f200 80c8 	bhi.w	85b26 <__udivdi3+0x28a>
   85996:	4660      	mov	r0, ip
   85998:	1a89      	subs	r1, r1, r2
   8599a:	fbb1 f2f6 	udiv	r2, r1, r6
   8599e:	fb06 1112 	mls	r1, r6, r2, r1
   859a2:	fb07 f702 	mul.w	r7, r7, r2
   859a6:	b2ad      	uxth	r5, r5
   859a8:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   859ac:	42af      	cmp	r7, r5
   859ae:	d908      	bls.n	859c2 <__udivdi3+0x126>
   859b0:	192c      	adds	r4, r5, r4
   859b2:	f102 31ff 	add.w	r1, r2, #4294967295
   859b6:	f080 809b 	bcs.w	85af0 <__udivdi3+0x254>
   859ba:	42a7      	cmp	r7, r4
   859bc:	f240 8098 	bls.w	85af0 <__udivdi3+0x254>
   859c0:	3a02      	subs	r2, #2
   859c2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   859c6:	4610      	mov	r0, r2
   859c8:	4619      	mov	r1, r3
   859ca:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   859ce:	4770      	bx	lr
   859d0:	2300      	movs	r3, #0
   859d2:	461a      	mov	r2, r3
   859d4:	4610      	mov	r0, r2
   859d6:	4619      	mov	r1, r3
   859d8:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   859dc:	4770      	bx	lr
   859de:	f1c6 0520 	rsb	r5, r6, #32
   859e2:	fa22 f705 	lsr.w	r7, r2, r5
   859e6:	fa03 f406 	lsl.w	r4, r3, r6
   859ea:	fa21 f305 	lsr.w	r3, r1, r5
   859ee:	fa01 fb06 	lsl.w	fp, r1, r6
   859f2:	fa20 f505 	lsr.w	r5, r0, r5
   859f6:	433c      	orrs	r4, r7
   859f8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   859fc:	fbb3 fcf8 	udiv	ip, r3, r8
   85a00:	fb08 331c 	mls	r3, r8, ip, r3
   85a04:	fa1f f984 	uxth.w	r9, r4
   85a08:	fb09 fa0c 	mul.w	sl, r9, ip
   85a0c:	ea45 0b0b 	orr.w	fp, r5, fp
   85a10:	ea4f 451b 	mov.w	r5, fp, lsr #16
   85a14:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   85a18:	459a      	cmp	sl, r3
   85a1a:	fa02 f206 	lsl.w	r2, r2, r6
   85a1e:	d904      	bls.n	85a2a <__udivdi3+0x18e>
   85a20:	191b      	adds	r3, r3, r4
   85a22:	f10c 35ff 	add.w	r5, ip, #4294967295
   85a26:	d36f      	bcc.n	85b08 <__udivdi3+0x26c>
   85a28:	46ac      	mov	ip, r5
   85a2a:	ebca 0303 	rsb	r3, sl, r3
   85a2e:	fbb3 f5f8 	udiv	r5, r3, r8
   85a32:	fb08 3315 	mls	r3, r8, r5, r3
   85a36:	fb09 f905 	mul.w	r9, r9, r5
   85a3a:	fa1f fb8b 	uxth.w	fp, fp
   85a3e:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   85a42:	45b9      	cmp	r9, r7
   85a44:	d904      	bls.n	85a50 <__udivdi3+0x1b4>
   85a46:	193f      	adds	r7, r7, r4
   85a48:	f105 33ff 	add.w	r3, r5, #4294967295
   85a4c:	d362      	bcc.n	85b14 <__udivdi3+0x278>
   85a4e:	461d      	mov	r5, r3
   85a50:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   85a54:	fbac 2302 	umull	r2, r3, ip, r2
   85a58:	ebc9 0707 	rsb	r7, r9, r7
   85a5c:	429f      	cmp	r7, r3
   85a5e:	f04f 0500 	mov.w	r5, #0
   85a62:	d34a      	bcc.n	85afa <__udivdi3+0x25e>
   85a64:	d046      	beq.n	85af4 <__udivdi3+0x258>
   85a66:	4662      	mov	r2, ip
   85a68:	462b      	mov	r3, r5
   85a6a:	e75d      	b.n	85928 <__udivdi3+0x8c>
   85a6c:	4094      	lsls	r4, r2
   85a6e:	f1c2 0920 	rsb	r9, r2, #32
   85a72:	fa21 fc09 	lsr.w	ip, r1, r9
   85a76:	4091      	lsls	r1, r2
   85a78:	fa20 f909 	lsr.w	r9, r0, r9
   85a7c:	0c26      	lsrs	r6, r4, #16
   85a7e:	fbbc f8f6 	udiv	r8, ip, r6
   85a82:	fb06 cc18 	mls	ip, r6, r8, ip
   85a86:	b2a7      	uxth	r7, r4
   85a88:	fb07 f308 	mul.w	r3, r7, r8
   85a8c:	ea49 0901 	orr.w	r9, r9, r1
   85a90:	ea4f 4119 	mov.w	r1, r9, lsr #16
   85a94:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   85a98:	4563      	cmp	r3, ip
   85a9a:	fa00 f502 	lsl.w	r5, r0, r2
   85a9e:	d909      	bls.n	85ab4 <__udivdi3+0x218>
   85aa0:	eb1c 0c04 	adds.w	ip, ip, r4
   85aa4:	f108 32ff 	add.w	r2, r8, #4294967295
   85aa8:	d23b      	bcs.n	85b22 <__udivdi3+0x286>
   85aaa:	4563      	cmp	r3, ip
   85aac:	d939      	bls.n	85b22 <__udivdi3+0x286>
   85aae:	f1a8 0802 	sub.w	r8, r8, #2
   85ab2:	44a4      	add	ip, r4
   85ab4:	ebc3 0c0c 	rsb	ip, r3, ip
   85ab8:	fbbc f3f6 	udiv	r3, ip, r6
   85abc:	fb06 c113 	mls	r1, r6, r3, ip
   85ac0:	fb07 f203 	mul.w	r2, r7, r3
   85ac4:	fa1f f989 	uxth.w	r9, r9
   85ac8:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   85acc:	428a      	cmp	r2, r1
   85ace:	d907      	bls.n	85ae0 <__udivdi3+0x244>
   85ad0:	1909      	adds	r1, r1, r4
   85ad2:	f103 30ff 	add.w	r0, r3, #4294967295
   85ad6:	d222      	bcs.n	85b1e <__udivdi3+0x282>
   85ad8:	428a      	cmp	r2, r1
   85ada:	d920      	bls.n	85b1e <__udivdi3+0x282>
   85adc:	3b02      	subs	r3, #2
   85ade:	4421      	add	r1, r4
   85ae0:	1a89      	subs	r1, r1, r2
   85ae2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   85ae6:	e743      	b.n	85970 <__udivdi3+0xd4>
   85ae8:	463a      	mov	r2, r7
   85aea:	e705      	b.n	858f8 <__udivdi3+0x5c>
   85aec:	4633      	mov	r3, r6
   85aee:	e718      	b.n	85922 <__udivdi3+0x86>
   85af0:	460a      	mov	r2, r1
   85af2:	e766      	b.n	859c2 <__udivdi3+0x126>
   85af4:	40b0      	lsls	r0, r6
   85af6:	4290      	cmp	r0, r2
   85af8:	d2b5      	bcs.n	85a66 <__udivdi3+0x1ca>
   85afa:	f10c 32ff 	add.w	r2, ip, #4294967295
   85afe:	2300      	movs	r3, #0
   85b00:	e712      	b.n	85928 <__udivdi3+0x8c>
   85b02:	4633      	mov	r3, r6
   85b04:	4632      	mov	r2, r6
   85b06:	e70f      	b.n	85928 <__udivdi3+0x8c>
   85b08:	459a      	cmp	sl, r3
   85b0a:	d98d      	bls.n	85a28 <__udivdi3+0x18c>
   85b0c:	f1ac 0c02 	sub.w	ip, ip, #2
   85b10:	4423      	add	r3, r4
   85b12:	e78a      	b.n	85a2a <__udivdi3+0x18e>
   85b14:	45b9      	cmp	r9, r7
   85b16:	d99a      	bls.n	85a4e <__udivdi3+0x1b2>
   85b18:	3d02      	subs	r5, #2
   85b1a:	4427      	add	r7, r4
   85b1c:	e798      	b.n	85a50 <__udivdi3+0x1b4>
   85b1e:	4603      	mov	r3, r0
   85b20:	e7de      	b.n	85ae0 <__udivdi3+0x244>
   85b22:	4690      	mov	r8, r2
   85b24:	e7c6      	b.n	85ab4 <__udivdi3+0x218>
   85b26:	3802      	subs	r0, #2
   85b28:	4421      	add	r1, r4
   85b2a:	e735      	b.n	85998 <__udivdi3+0xfc>
   85b2c:	00006425 	.word	0x00006425
   85b30:	00000001 	.word	0x00000001
   85b34:	00000002 	.word	0x00000002
   85b38:	00000004 	.word	0x00000004
   85b3c:	00000008 	.word	0x00000008
   85b40:	00000010 	.word	0x00000010
   85b44:	00000020 	.word	0x00000020
   85b48:	00000040 	.word	0x00000040
   85b4c:	00000080 	.word	0x00000080
   85b50:	00000100 	.word	0x00000100
   85b54:	00000200 	.word	0x00000200
   85b58:	00000400 	.word	0x00000400
   85b5c:	00000043 	.word	0x00000043

00085b60 <_global_impure_ptr>:
   85b60:	20070178                                x.. 

00085b64 <zeroes.6763>:
   85b64:	30303030 30303030 30303030 30303030     0000000000000000
   85b74:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85b84:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85b94:	00000000 33323130 37363534 62613938     ....0123456789ab
   85ba4:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   85bb4:	00000030                                0...

00085bb8 <blanks.6762>:
   85bb8:	20202020 20202020 20202020 20202020                     
   85bc8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   85bd8:	49534f50 00000058 0000002e 00000000     POSIX...........

00085be8 <__mprec_tens>:
   85be8:	00000000 3ff00000 00000000 40240000     .......?......$@
   85bf8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85c08:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85c18:	00000000 412e8480 00000000 416312d0     .......A......cA
   85c28:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85c38:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85c48:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   85c58:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   85c68:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85c78:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85c88:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85c98:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85ca8:	79d99db4 44ea7843                       ...yCx.D

00085cb0 <__mprec_bigtens>:
   85cb0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85cc0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85cd0:	7f73bf3c 75154fdd                       <.s..O.u

00085cd8 <p05.5269>:
   85cd8:	00000005 00000019 0000007d              ........}...

00085ce4 <_init>:
   85ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85ce6:	bf00      	nop
   85ce8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85cea:	bc08      	pop	{r3}
   85cec:	469e      	mov	lr, r3
   85cee:	4770      	bx	lr

00085cf0 <__init_array_start>:
   85cf0:	000826a5 	.word	0x000826a5

00085cf4 <__frame_dummy_init_array_entry>:
   85cf4:	00080119                                ....

00085cf8 <_fini>:
   85cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85cfa:	bf00      	nop
   85cfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85cfe:	bc08      	pop	{r3}
   85d00:	469e      	mov	lr, r3
   85d02:	4770      	bx	lr

00085d04 <__fini_array_start>:
   85d04:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4b14      	ldr	r3, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2007003c:	f022 0203 	bic.w	r2, r2, #3
20070040:	f042 0201 	orr.w	r2, r2, #1
20070044:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	461a      	mov	r2, r3
20070048:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007004a:	f013 0f08 	tst.w	r3, #8
2007004e:	d0fb      	beq.n	20070048 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20070050:	4a11      	ldr	r2, [pc, #68]	; (20070098 <SystemInit+0x98>)
20070052:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070054:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070056:	461a      	mov	r2, r3
20070058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007005a:	f013 0f02 	tst.w	r3, #2
2007005e:	d0fb      	beq.n	20070058 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
20070060:	2211      	movs	r2, #17
20070062:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070064:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070066:	461a      	mov	r2, r3
20070068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007006a:	f013 0f08 	tst.w	r3, #8
2007006e:	d0fb      	beq.n	20070068 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20070070:	2212      	movs	r2, #18
20070072:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070074:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070076:	461a      	mov	r2, r3
20070078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007007a:	f013 0f08 	tst.w	r3, #8
2007007e:	d0fb      	beq.n	20070078 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20070080:	4a06      	ldr	r2, [pc, #24]	; (2007009c <SystemInit+0x9c>)
20070082:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070084:	601a      	str	r2, [r3, #0]
20070086:	4770      	bx	lr
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070170 	.word	0x20070170

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <pin_table>:
2007012c:	5c390908 5758591d 675d5556 00003b68     ..9\.YXWVU]gh;..
2007013c:	00000000 0e3a0000 6261600f 07696663     ......:..`abcfi.
2007014c:	4342416a 47464544 14134948 50515253     jABCDEFGHI..SRQP
2007015c:	4c4d4e4f 18102e35 04061617 32310203     ONML5.........12
2007016c:	00003433                                34..

20070170 <SystemCoreClock>:
20070170:	003d0900 00000000                       ..=.....

20070178 <impure_data>:
20070178:	00000000 20070464 200704cc 20070534     ....d.. ... 4.. 
	...
200701ac:	00085b5c 00000000 00000000 00000000     \[..............
	...
20070220:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070230:	0005deec 0000000b 00000000 00000000     ................
	...

200705a0 <_impure_ptr>:
200705a0:	20070178                                x.. 

200705a4 <lconv>:
200705a4:	00085be0 00085b94 00085b94 00085b94     .[...[...[...[..
200705b4:	00085b94 00085b94 00085b94 00085b94     .[...[...[...[..
200705c4:	00085b94 00085b94 ffffffff ffffffff     .[...[..........
200705d4:	ffffffff 0000ffff                       ........

200705dc <__malloc_av_>:
	...
200705e4:	200705dc 200705dc 200705e4 200705e4     ... ... ... ... 
200705f4:	200705ec 200705ec 200705f4 200705f4     ... ... ... ... 
20070604:	200705fc 200705fc 20070604 20070604     ... ... ... ... 
20070614:	2007060c 2007060c 20070614 20070614     ... ... ... ... 
20070624:	2007061c 2007061c 20070624 20070624     ... ... $.. $.. 
20070634:	2007062c 2007062c 20070634 20070634     ,.. ,.. 4.. 4.. 
20070644:	2007063c 2007063c 20070644 20070644     <.. <.. D.. D.. 
20070654:	2007064c 2007064c 20070654 20070654     L.. L.. T.. T.. 
20070664:	2007065c 2007065c 20070664 20070664     \.. \.. d.. d.. 
20070674:	2007066c 2007066c 20070674 20070674     l.. l.. t.. t.. 
20070684:	2007067c 2007067c 20070684 20070684     |.. |.. ... ... 
20070694:	2007068c 2007068c 20070694 20070694     ... ... ... ... 
200706a4:	2007069c 2007069c 200706a4 200706a4     ... ... ... ... 
200706b4:	200706ac 200706ac 200706b4 200706b4     ... ... ... ... 
200706c4:	200706bc 200706bc 200706c4 200706c4     ... ... ... ... 
200706d4:	200706cc 200706cc 200706d4 200706d4     ... ... ... ... 
200706e4:	200706dc 200706dc 200706e4 200706e4     ... ... ... ... 
200706f4:	200706ec 200706ec 200706f4 200706f4     ... ... ... ... 
20070704:	200706fc 200706fc 20070704 20070704     ... ... ... ... 
20070714:	2007070c 2007070c 20070714 20070714     ... ... ... ... 
20070724:	2007071c 2007071c 20070724 20070724     ... ... $.. $.. 
20070734:	2007072c 2007072c 20070734 20070734     ,.. ,.. 4.. 4.. 
20070744:	2007073c 2007073c 20070744 20070744     <.. <.. D.. D.. 
20070754:	2007074c 2007074c 20070754 20070754     L.. L.. T.. T.. 
20070764:	2007075c 2007075c 20070764 20070764     \.. \.. d.. d.. 
20070774:	2007076c 2007076c 20070774 20070774     l.. l.. t.. t.. 
20070784:	2007077c 2007077c 20070784 20070784     |.. |.. ... ... 
20070794:	2007078c 2007078c 20070794 20070794     ... ... ... ... 
200707a4:	2007079c 2007079c 200707a4 200707a4     ... ... ... ... 
200707b4:	200707ac 200707ac 200707b4 200707b4     ... ... ... ... 
200707c4:	200707bc 200707bc 200707c4 200707c4     ... ... ... ... 
200707d4:	200707cc 200707cc 200707d4 200707d4     ... ... ... ... 
200707e4:	200707dc 200707dc 200707e4 200707e4     ... ... ... ... 
200707f4:	200707ec 200707ec 200707f4 200707f4     ... ... ... ... 
20070804:	200707fc 200707fc 20070804 20070804     ... ... ... ... 
20070814:	2007080c 2007080c 20070814 20070814     ... ... ... ... 
20070824:	2007081c 2007081c 20070824 20070824     ... ... $.. $.. 
20070834:	2007082c 2007082c 20070834 20070834     ,.. ,.. 4.. 4.. 
20070844:	2007083c 2007083c 20070844 20070844     <.. <.. D.. D.. 
20070854:	2007084c 2007084c 20070854 20070854     L.. L.. T.. T.. 
20070864:	2007085c 2007085c 20070864 20070864     \.. \.. d.. d.. 
20070874:	2007086c 2007086c 20070874 20070874     l.. l.. t.. t.. 
20070884:	2007087c 2007087c 20070884 20070884     |.. |.. ... ... 
20070894:	2007088c 2007088c 20070894 20070894     ... ... ... ... 
200708a4:	2007089c 2007089c 200708a4 200708a4     ... ... ... ... 
200708b4:	200708ac 200708ac 200708b4 200708b4     ... ... ... ... 
200708c4:	200708bc 200708bc 200708c4 200708c4     ... ... ... ... 
200708d4:	200708cc 200708cc 200708d4 200708d4     ... ... ... ... 
200708e4:	200708dc 200708dc 200708e4 200708e4     ... ... ... ... 
200708f4:	200708ec 200708ec 200708f4 200708f4     ... ... ... ... 
20070904:	200708fc 200708fc 20070904 20070904     ... ... ... ... 
20070914:	2007090c 2007090c 20070914 20070914     ... ... ... ... 
20070924:	2007091c 2007091c 20070924 20070924     ... ... $.. $.. 
20070934:	2007092c 2007092c 20070934 20070934     ,.. ,.. 4.. 4.. 
20070944:	2007093c 2007093c 20070944 20070944     <.. <.. D.. D.. 
20070954:	2007094c 2007094c 20070954 20070954     L.. L.. T.. T.. 
20070964:	2007095c 2007095c 20070964 20070964     \.. \.. d.. d.. 
20070974:	2007096c 2007096c 20070974 20070974     l.. l.. t.. t.. 
20070984:	2007097c 2007097c 20070984 20070984     |.. |.. ... ... 
20070994:	2007098c 2007098c 20070994 20070994     ... ... ... ... 
200709a4:	2007099c 2007099c 200709a4 200709a4     ... ... ... ... 
200709b4:	200709ac 200709ac 200709b4 200709b4     ... ... ... ... 
200709c4:	200709bc 200709bc 200709c4 200709c4     ... ... ... ... 
200709d4:	200709cc 200709cc 200709d4 200709d4     ... ... ... ... 

200709e4 <__malloc_trim_threshold>:
200709e4:	00020000                                ....

200709e8 <__malloc_sbrk_base>:
200709e8:	ffffffff                                ....
